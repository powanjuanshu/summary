index.jsp:
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<c:set var="ctx" value="${pageContext.request.contextPath}"/>
<html>
	<a href="${ctx }/helper/loginx.action">aaax</a>
</html>
----
loginxAction.java:
package com.cpic.action;
import org.apache.struts2.convention.annotation.Namespace;
import org.springframework.beans.factory.annotation.Autowired;
import com.opensymphony.xwork2.ActionSupport;
import com.service.tree.TreService;

@Namespace("/helper")
public class LoginxAction extends ActionSupport{
	@Autowired
	private TreService service;
	public String execute()throws Exception{
		System.out.println("xxx");
		service.add();
		return null;
	}
}
----

















可以定义在Action中或者是定义在package-info.java文件中。在Action中定义的@Namespace会应用在该Action中所有的相对url上。
如果定义在package-info.java文件中，那么该包中的所有的Action的namespace（不包括子包中的action）。 
实例代码一：在Action中使用@Namespace注解。
Java代码  
package com.example.actions;   
import com.opensymphony.xwork2.ActionSupport;    
import org.apache.struts2.convention.annotation.Action;   
import org.apache.struts2.convention.annotation.Namespace;   
@Namespace("/custom")   
public class HelloWorld extends ActionSupport {   
  @Action("/different/url")   
     public String execute(){   
        return SUCCESS;
     }
  @Action("url")   
     public String doSomething(){
        return SUCCESS;   
     }
}
如上代码，execute()访问的url为/different/url,doSomething()的访问url为/custom/url，这个路径前面追加了@Namespace。




