锁
* 锁是数据库用来控制共享资源并发访问的机制
* 锁用于保护正在被修改的数据
* 直到提交或回滚了事务之后,其他用户才可以更新数据

SELECT * FROM emp WHERE empno = 7900 FOR UPDATE; -- FOR UPDATE是行级锁

锁定的优势
* 一致性:一次只允许一个用户修改数据
* 为所有用户提供正确的数据.如果一个用户进行了修改并保存,所做的修改将反映给所有用户
* 并行性:允许多个用户访问同一数据

锁的类型:
* 行级锁
* 表级锁

行级锁:
* 对正在被修改的行进行锁定,其他用户可以访问除被锁定的行以外的行
* 行级锁是一种排他锁,防止其他事务修改此行
* 在使用以下语句时,oracle会自动应用行级锁:
  + INSERT
  + UPDATE
  + DELETE
  + SELECT ... FOR UPDATE
* SELECT ... FOR UPDATE语句允许用户一次锁定多条记录进行更新
* 使用COMMIT或ROLLBACK语句释放锁

行级锁语法:
SELECT ... FOR UPDATE [OF columns] [WAIT n|NOWAIT]
OF子句用于指定即将更新的列,即锁定行上的特定列.多用于多表查询时只锁定指定表的列,否则锁定多表
WAIT子句指定等待其他用户释放锁的秒数,防止无限期等待.其他用户过了等待时间就会报错.NOWAIT其他用户会马上报错:ORA-00054:资源正忙,要求指定NOWAIT



使用"FOR UPDATE WAIT"子句的优点如下:
* 防止无限期地等待被锁定的行
* 允许应用程序中对锁的等待时间进行更多的控制
* 对于交互式应用程序非常有用,因为这些用户不能等待不确定
* 若使用了skip locked,则可以越过锁的行,不会报告有WAIT n引发的"资源忙"异常报错
SELECT * FROM scott.t WHERE a = '1' FOR UPDATE NOWAIT SKIP LOCKED; -- SKIP LOCKED表示如果别人锁了,会跳过报错直接打印:未选定行












