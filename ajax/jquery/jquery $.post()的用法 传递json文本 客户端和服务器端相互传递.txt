index.html:
<!DOCTYPE title PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<script type="text/javascript" src="jquery-1.3.2.min.js"></script>
<script type="text/javascript">
function submitForm(){
	try{
		var params={
			username:$("#username").val(),
			password:$("#password").val()
		};
		var url=$("#loginForm").attr("action");
		$.post(url,params,function(data){
			alert(data);//后台的abc传过来了
		},"json");
	}catch(e){
		alert(e);
		return false;
	}
}
</script>
<form id="loginForm" action="login!doLogin.action" method="post">
	<input type="text" id="username">
	<input type="text" id="password">
	<input type="button" onclick="submitForm()" value="提交">
</form>
----
LoginAction.java:
package com.cpic.action;
import javax.servlet.http.HttpServletRequest;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
@Results({
		@Result(name="input",type="json",params={"root","result"})
})
public class LoginAction extends BaseMenuAction {
	private String username;
	private String password;
	private String result;//会传到前台去
	private static final long serialVersionUID = 1L;
	@Action(
		value="doLogin",
		results=@Result(type="json",params={"root","result"})
	)
	public String doLogin() throws Exception{
		result="abc";
		HttpServletRequest req= ServletActionContext.getRequest();
		System.out.println(req.getParameter("username"));
		System.out.println(username);
		return "input";
	}
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getResult() {
		return result;
	}
	public void setResult(String result) {
		this.result = result;
	}
}





























这是一个简单的 POST 请求功能以取代复杂 $.ajax 。请求成功时可调用回调函数。如果需要在出错时执行函数，请使用 $.ajax。
jQuery.post( url, [data], [callback], [type] ) ：使用POST方式来进行异步请求 


参数： 

url (String) : 发送请求的URL地址. 

data (Map) : (可选) 要发送给服务器的数据，以 Key/value 的键值对形式表示。 

callback (Function) : (可选) 载入成功时回调函数(只有当Response的返回状态是success才是调用该方法)。 

type (String) : (可选)官方的说明是：Type of data to be sent。其实应该为客户端请求的类型(JSON,XML,等等) 

这是一个简单的 POST 请求功能以取代复杂 $.ajax 。请求成功时可调用回调函数。如果需要在出错时执行函数，请使用 $.ajax。示例代码： 

Ajax.aspx： 

Response.ContentType = "application/json";Response.Write("{result: '" + Request["Name"] + ",你好！(这消息来自服务器)'}");jQuery 代码： 
$.post("Ajax.aspx", { Action: "post", Name: "lulu" }, function (data, textStatus){ // data 可以是 xmlDoc, jsonObj, html, text, 等等. //this; // 这个Ajax请求的选项配置信息，请参考jQuery.get()说到的this alert(data.result); }, "json");点击提交： 

这里设置了请求的格式为"json"： 


$.ajax()这个是jQuery 的底层 AJAX 实现。简单易用的高层实现见 $.get, $.post 等。 

这里有几个Ajax事件参数：beforeSend ，success ，complete ，error 。我们可以定义这些事件来很好的处理我们的每一次的Ajax请求。 

$.ajax({url: 'stat.php', 

type: 'POST', 

data:{Name:"keyun"}, 

dataType: 'html', 

timeout: 1000, 

error: function(){alert('Error loading PHP document');}, 

success: function(result){alert(result);} 

}); 


