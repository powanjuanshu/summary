原已经安装好的nginx,现在需要添加一个未被编译安装的模块
举例说明:安装第三方的ngx_cache_purge模块(用于清除指定URL的缓存)
nginx的模块是需要重新编译nginx,而不是像apache一样配置文件引用.so
1.wget http://labs.frickle.com/files/ngx_cache_purge-2.0.tar.gz
 tar -zxvf ngx_cache_purge-2.0.tar.gz
 cd /data0/software/nginx-1.1.10
2.查看nginx编译安装时的命令，安装了哪些模块
/usr/local/webserver/nginx/sbin/nginx -V
./configure --prefix=/usr/local/nginx--with-http_stub_status_module --with-http_ssl_module --with-file-aio --with-http_realip_module
3.加入需要安装的模块，重新编译
./configure --user=www --group=www --add-module=../ngx_cache_purge-2.0 --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module
make，不要make install会覆盖
make完之后在objs目录下就多了个nginx，这个就是新版本的程序了
4. 替换nginx二进制文件:
备份旧的nginx程序
cp /app/nginx/sbin/nginx /app/nginx/sbin/nginx.bak
把新的nginx程序覆盖旧的
cp ./objs/nginx /app/nginx/sbin/
5.测试新的nginx程序是否正确
 /usr/local/nginx/sbin/nginx -t
6.查看ngixn版本极其编译参数
/usr/local/nginx/sbin/nginx -V
这是我重新编译的代码：
./configure --prefix=/usr/local/nginx --with-google_perftools_module --user=www --group=www --with-http_stub_status_module --with-http_gzip_static_module --with-openssl=/usr/ --with-pcre=/mydata/soft/pcre-8.31
----------
1.我们下载nginx的源码包(http://nginx.org/download/nginx-1.2.7.tar.gz)以及echo模块的源码包(https://github.com/agentzh/echo-nginx-module/tags)选择最新版本
2.分别加压nginx源码包以及echo模块源码包,例如此处我解压的路径为:nginx的路径:/opt/nginx-source;echo模块的路径:/opt/nginx-echo-source
3.命令cd进入nginx源码路径,此处:cd /opt/nginx-source
4.配置nginx编译文件,执行编译配置命令:
  ./configure --prefix=/opt/nginx --add-module=/opt/nginx-echo-source配置时屏幕会输出日志
  检查配置过程中是否有error,如果有请自行修复,一般是缺少类库,缺少啥类库,就下载安装什么类库
5.编译nginx,在nginx源码目录中执行命令:make


