nginx中的server_name指令主要用于配置基于名称虚拟主机,server_name指令在接到请求后的匹配顺序分别为:
1 准确的server_name匹配,例如: 
server {
    listen       80;
    server_name  frady.info = www.frady.info;
}
2 以*通配符开始的字符串:
server {
    listen       80;
    server_name  *.frady.info;
}
3 以*通配符结束的字符串:
server {
    listen       80;
    server_name  www.*;
}
4 匹配到的正则表达式:
server {
    listen       80;
    server_name  ~^(?<www>.+)\.frady\.info$;
}
nginx将按照1,2,3,4的顺序对server name进行匹配,只有有一项匹配以后就会停止搜索,所以我们在使用这个指令的时候一定要分清楚它的匹配顺序(类似于location指令). 

5.来个复杂的,这样既可以匹配泛域名,又可以匹配部分以blog开头的域名,两个都是正则,优先级一样,哪个匹配的最精确就会匹配到哪个

匹配*.frady.info  
server_name ~^(.+)?\.frady\.info$;

匹配blog*.frady.info  
~^blog(.+)?\.frady\.info$;

-----------------------------------
以下的例子好像不行,访问:http://www.lijie1.com/,后台报的是:"/lijie1/index.html" is not found (2: No such file or directory),还是访问第一个server
worker_processes 1;
events {
    worker_connections 1024;
}
http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    server {
        #server_name ~ ^www\.lijie1\.com$;
        location / {
                root /lijie1;
                index index.html;
        }
    }
    server {
        server_name www.lijie1.*;
        location / {
                root /lijie2;
                index index.html;
        }
    }
    server {
        server_name *lijie1.com;
        location / {
                root /lijie3;
                index index.html;
        }
    }
    server {
        server_name = www.lijie1.com;
        location / {
                root /lijie4;
                index index.html;
        }
    }
}



















