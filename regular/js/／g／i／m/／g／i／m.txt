1，/g 表示该表达式将用来在输入字符串中查找所有可能的匹配，返回的结果可以是多个。如果不加/g最多只会匹配一个
2，/i 表示匹配的时候不区分大小写
3，/m 表示多行匹配，什么是多行匹配呢？就是匹配换行符两端的潜在匹配。影响正则中的^$符号

1，/g的用法
<html>
<script type="text/javascript">
	var str = "tankZHang (027)tank ying (703)";  
	var res1 = str.match(/tank/);
	alert(typeof res1); //object
	alert(res1); //tank
	
	var res2 = str.match(/tank/g);
	alert(typeof res2); //object
	alert(res2); //tank,tank
</script>
</html>

2，/i的用法
<script type="text/javascript">  
str = "tankZHang (231144)"+  
 "tank ying (155445)";  
res = str.match(/zhang/);      
alert(res);                  //显示为null  
  
res = str.match(/zhang/i);   //加了/i  
alert(res);                  //显示为ZHang  
</script>  

3，/m的用法
查看复制打印?
<script type="text/javascript">  
var p = /$/mg;  
var s = '1\n2\n3\n4\n5\n6';  
alert(p.test(s));  //显示为true  
alert(RegExp.rightContext.replace(/\x0A/g, '\\a'));  //显示\a2\a3\a4\a5\a6  
alert(RegExp.leftContext);    //显示为竖的2345  
alert(RegExp.rightContext);   //显示为6  
  
var p = /$/g;  
var s = '1\n2\n3\n4\n5\n6';  
alert(p.test(s));  //显示为true  
alert(RegExp.rightContext.replace(/\x0A/g, '\\a'));  //什么都不显示  
alert(RegExp.leftContext);    //显示为竖的123456  
alert(RegExp.rightContext);   //什么都不显示  
  
var p = /^/mg;  
var s = '1\n2\n3\n4\n5\n6';  
alert(p.test(s));    //显示为true  
alert(RegExp.rightContext.replace(/\x0A/g, '\\a')); //显示为1\a2\a3\a4\a5\a6  
alert(RegExp.leftContext);     //显示为竖的12345  
alert(RegExp.rightContext);    //显示为6  
</script>   
  
//从上例中可以看出/m影响的^$的分割方式  
上面说的三个例子，/i,/g,/m分开来说的，可以排列组合使用的。个人觉得/m没有多大用处


















