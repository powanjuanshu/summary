* (?<=pattern)反向肯定预查,与正向肯定预查类拟,只是方向相反.
* 例如:"(?<=95|98|NT|2000)Windows"能匹配"2000Windows"中的"Windows",但不能匹配"3.1Windows"中的"Windows".
* (?<=exp)代表一个位置,而不是字符
-----------------------
package com.ccbsh;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class Test2 {
	public static void main(String[] args) {
		Pattern p = Pattern.compile("(?<=aa|bb)(com.cn|com|cn|net|org|biz|info|cc|tv|gov)");
		Matcher m = p.matcher("aaxxfuji.com.cn"); // 打印false，后面匹配的必须贴着aa，不然不会匹配到
		boolean b = m.find();
		System.out.println(b); // 打印false
		System.out.println(m.group()); // 报错java.lang.IllegalStateException: No match found
	}
}
-----------------------
package com.ccbsh;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class Test2 {
	public static void main(String[] args) {
		Pattern p = Pattern.compile("(?<=\\.)(com.cn|com|cn|net|org|biz|info|cc|tv|gov)");
		Matcher m = p.matcher("aaxxfuji.com.cn"); // 会从左到右不停找.号,找到.然后贴着往右边寻找匹配(com.cn|com|cn|net|org|biz|info|cc|tv|gov)
		boolean b = m.find();
		System.out.println(b); // 打印true
		System.out.println(m.group()); // 打印com.cn
	}
}
-----------------------
package com.ccbsh;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class Test2 {
	public static void main(String[] args) {
		Pattern p = Pattern.compile("(?<=http://|\\.)[^.]*?\\.(com.cn|com|cn|net|org|biz|info|cc|tv|gov)");
		Matcher m = p.matcher("http:a\\xxxwewe\\.bestpay.www.bestpay.baidu.com");  // 会从左到右不停找.号，找到.然后贴着往右边寻找匹配[^.]*?\\.(com.cn|com|cn|net|org|biz|info|cc|tv|gov)
		boolean b = m.find();
		System.out.println(b); // 打印true
		System.out.println(m.group()); // 打印baidu.com
	}
}




