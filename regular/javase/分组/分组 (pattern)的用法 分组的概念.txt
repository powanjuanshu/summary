[1]
(pattern)匹配pattern并捕获该匹配的子表达式.可以使用$0...$9属性从结果匹配集合中检索捕获的匹配.若要匹配括号字符(),请使用 \( 或 \)

[2]
package com.ccbsh;
public class Test {
	public static void main(String[] args) throws Exception {
		String str = "zhangsanttttxiaoqiangmmmmmmmmmmzhaoliu";
		// 将多个叠词转换成单个词，即将tttt变成t，将mmmmmmmmmm变成m
		// 组的感念:((A)(B(C))) 组按(的顺序排列,((A)(B(C)))为第一组,(A)为第二组,(B(C))为第三组,(C)第四组,第零组表示整个表达式。
		str = str.replaceAll("(.)\\1+", "$1"); // \1表示第一组,前面的\表示转义,将后面的\转义,(.)表示第一个字符,第二个表示用第一组的字符出现1次或多次
		// $1表示第一组匹配的字符串
		System.out.println(str); // 打印zhangsantxiaoqiangmzhaoliu
}


[3]
package com.bestpay.http;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class PsbcModel {
	public static void main(String[] args) {
		String ss = "MercDtTm---Windows--ihatethisgame---Windows---ilove---95Windows---";
		Pattern p = Pattern.compile("(95|98|NT|2000)Windows");
		Matcher m = p.matcher(ss);
		while (m.find()) {
			System.out.println(m.group()); // 95Windows
			System.out.println(m.start()); // 54
		}
	}
}

[4]
package jdbc;
public class Main2 {
	public static void main(String[] args) {
		String sss="^(1[3|4|5|8][0-9]|177|176|178)[0-9]{4,8}"; // 匹配手机号,支持177,176,178开头的手机号
		String mobile = "17718718526";
		boolean bb = mobile.matches(sss);
		System.out.println(bb);
	}
}	

[5]
package com.ccbsh;
public class Test {
	public static void main(String[] args) throws Exception {
		// 手机号中间四位是*，前3位和后四位保留
		String str = "15800001111";
		str = str.replaceAll("(\\d{3})\\d{4}(\\d{4})", "$1****$2"); // \1表示第一组,前面的\表示转义,将后面的\转义,(.)表示第一个字符,第二个表示用第一组的字符出现1次或多次
		// $1表示第一组匹配的字符串
		System.out.println(str); // 打印158****1111
	}
}


