1、<Server>元素属性

port：指定一个端口，这个端口负责监听关闭tomcat的请求

shutdown：指定向端口发送的命令字符串，通常是“SHUTDOWN”

2、<Service>元素属性

name：指定service的名字，通常是”Catalina”

3、<Connector/>元素属性（表示客户端和service之间的连接）：

port：指定服务器端要创建的端口号，并使用这个断口监听来自客户端的请求

minProcessors（考察是否有此属性）：服务器端启动时创建的处理请求的线程数

minSpareThreads：最小剩余线程数

maxSpareThreads：最大剩余线程数

enableLookups：如果为true，则可以通过调用request.getRemoteHost（）进行DNS查询来得到远程客户端的实际主机名，若为false则不进行DNS查询，而是返回其IP地址

redirectPort：指定当服务器正在处理HTTP请求时收到了一个SSL传输请求后重定向的端口号 

acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过的请求将不予处理 

connectionTimeout：指定超时的时间数（以毫秒为单位）

disableUploadTimeout：不明

debug：不明

protocol：不明

4、<Engine>元素属性（指定service中的请求处理主机，接收和处理来自Connector的请求）

name：指定Engine的名字，通常是”Catalina”

defaultHost：指定默认的处理请求的主机名，至少与某个host元素的name属性值是相同的

5、<Context/>元素属性（表示一个web应用程序）

docBase：指定此Web应用的绝对或相对路径，也可以为WAR文件的路径

path：表示此Web应用程序的url的入口，如为“/hello“，则请求的URL为http://localhost:8080/hello/

reloadable：如果为true，则Tomcat在运行时会自动监视Web应用的/WEB-INF/lib和/WEB-INF/classes下文件的改动，自动装载新应用，使我们可以在不重启Tomcat的情况下更新Web应用

6、<Host>元素属性（表示一个虚拟主机）

name：指定虚拟主机名字

debug：指定日志级别

appBase：存放Web应用程序的基本目录，可以是绝对路径或相对于$CATALINA_HOME的目录，默认是$CATALINA_HOME/webapps

unpackWARs：如果为true，则tomcat会自动将WAR文件解压后运行，否则不解压而直接从WAR文件中运行应用程序

autoDeploy：如果为true，表示Tomcat启动时会自动发布appBase目录下所有的Web应用（包括新加入的Web应用）

deployOnStarup：如果此项为true，表示Tomcat服务器启动时会自动发布appBase目录下所有Web应用。如果Web应用在server.xml中没有相应的<Context>元素,则将采用默认的Context配置。deployOnStarup的默认设置是true

alias：指定虚拟主机的别名，可以指定多个别名

xmlValidation：不明

xmlNamespaceAware：不明

7、<Logger/>元素属性（表示日志，调试和错误信息）

className：指定logger使用的类名，此类必须实现org.apache.catalina.Logger 接口 

prefix：指定log文件名的前缀（文件名）

suffix：指定log文件名的后缀（扩展名） 

timestamp：如果为true，则log文件名中会加入日期时间，如下例：localhost_log.2006-10-04.txt

directory：指定log文件存放的目录

8、<Realm/>元素属性（表示存放用户名，密码及role的数据库）

className：指定Realm使用的类名，

此类必须实现org.apache.catalina.Realm接口

resourceName：不明

9、<Valve/>元素属性（功能与Logger相似，其prefix和suffix属性解释和Logger 中的一样）

className：指定Valve使用的类名，如用org.apache.catalina.valves.AccessLogValve类可以记录应用程序的访问信息 

directory：指定log文件存放的位置

pattern：有两个值，common方式记录远程主机名或ip地址、用户名、日期、第一行请求的字符串、HTTP响应代码、发送的字节数。combined方式比common方式记录的值还多




一个<Server>包含一个或多个<Service>,一个<Service>包含唯一一个<Engine>和一个或多个<Connector>,多个 <Connector>共享一个<Engine>;一个<Engine>包含多个<Host>,每个<Host>定义一个虚拟主机,包含一个或多个web应用<Context>; <Context>元素是代表一个在虚拟主机上运行的Web应用。<Context>标签的描述（Apache官方文档）：
    Please note that for tomcat 5.x, unlike tomcat 4.x, it is NOT recommended to place <Context> elements directly in the server.xml file. Instead, put them in the META-INF/context.xml directory of your WAR file or the conf directory as described above.
