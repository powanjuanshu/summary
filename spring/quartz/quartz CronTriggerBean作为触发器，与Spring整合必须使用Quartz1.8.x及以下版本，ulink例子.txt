applicationContext.xml:
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
		>
		<!-- 工作台 -->
		<bean id="workBench" class="cz.WorkBench"/>
		<!-- 方法详细 -->
		<bean id="sayJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
			<property name="targetObject" ref="workBench"/>
	  		<property name="targetMethod" value="say"/>
	  		<property name="concurrent" value="false"/>
		</bean>
		<!-- 触发器 -->
		<bean id="sayTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
			<property name="jobDetail" ref="sayJobDetail"/>
			<property name="cronExpression" value="0 0/1 * * * ?"/><!-- 每天每30分钟触发一次  -->
		</bean>
		
		<bean id="startTasks" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<property name="triggers">
				<list>
					<ref local="sayTrigger"/><!--也可以写成<ref bean="sayTrigger"/>-->
				</list>
			</property>
		</bean>
</beans>
-----------------------------
package cz;
public class WorkBench {
	public void say () {
		System.out.println("say ye wu!");
	}
}
-----------------------------
package cz;
import org.springframework.context.support.ClassPathXmlApplicationContext;
public class TesMain {
	public static void main(String[] args) throws Exception{
		ClassPathXmlApplicationContext ctx = new ClassPathXmlApplicationContext("spring/applicationContext.xml");
		Object lock = new Object();
		synchronized (lock) {
			while (true) {
				lock.wait();
			}
		}
	}
}
