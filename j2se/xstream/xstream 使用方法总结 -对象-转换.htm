               <!DOCTYPE html><html  id="customDoc"><!--STATUS OK--> <head> <meta http-equiv=Content-Type content="text/html; charset=utf-8"> <title> XStream使用方法总结 -对象-转换_莎士比亚的天份_百度空间</title> <link rel="shortcut icon" href="http://hi.bdimg.com/static/qbase/img/mod/16_favicon.ico?v=116ba471.ico" type=image/x-icon>   <meta name=keywords content="XStream使用方法总结 -对象-转换,"> <meta name=description content="悲催的百度空间升级~~~,XStream使用方法总结 -对象-转换"><script>window.wpo={start:new Date*1,pid:109,page:'qing'}</script><!--[if IE]><script type="text/javascript">(function(){var e="abbr,article,aside,audio,canvas,datalist,details,dialog,eventsource,figure,footer,header,hgroup,mark,menu,meter,nav,output,progress,section,time,video".split(","),t=e.length;while(t--)document.createElement(e[t])})();</script><![endif]--><script>window.qDomain={"qing":"http://hi.baidu.com","static":"http://hi.bdimg.com","passport":"https://passport.baidu.com","portrait":"http://tx.bdimg.com","hiup":"http://hi.baidu.com","photo":"http://hiphotos.baidu.com","message":"http://msg.baidu.com","friend":"http://frd.baidu.com","mp3":"http://mp3.baidu.com","ting":"http://ting.baidu.com","image":"http://img.baidu.com","qup":"http://upload.hi.baidu.com","www":"http://www.baidu.com"};window.qUserInfo={"userName":"061041033","nickname":"061041033","portrait":"c4663036313034313033333804","qingUrl":"\/061041033","spaceName":"莎士比亚的天份","right":"0","avatarStatus":"1","flagNeedInvite":"0","flagNotInvited":"0","version":"2"};window.qVisitorInfo={"userName":"hum_jackee","nickname":"hum_jackee","portrait":"68ff68756d5f6a61636b65659d09","isHost": false,"isRandUrl": false,"isForceMoved": false,"loginStatus":"not_activate","isOldUser":0,"qingUrl":"","right":"0","version":"0"};window.qPageInfo={"pageUrl":"http:\/\/hi.baidu.com\/061041033\/item\/c532cf3cb42277fbdf22214b","referUrl":""};window.qUserAvatar={size20:"http://hiphotos.baidu.com/space/scrop=20;q=100/sign=d2f31a54d1c8a786ba740d511734fb0d/b8389b504fc2d56272d96a43e71190ef77c66c4f.jpg",size40:"http://hiphotos.baidu.com/space/scrop=40;q=100/sign=26242818c9177f3e146abb5200f20ff7/b8389b504fc2d56272d96a43e71190ef77c66c4f.jpg",size65:"http://hiphotos.baidu.com/space/scrop=65;q=100/sign=3efbf0a06709c93d03ac49a8ef00cee9/b8389b504fc2d56272d96a43e71190ef77c66c4f.jpg",size110:"http://hiphotos.baidu.com/space/scrop=110;q=100/sign=7c383c828701a18bf4b55510ee123639/b8389b504fc2d56272d96a43e71190ef77c66c4f.jpg",size160:"http://hiphotos.baidu.com/space/scrop=160;q=100/sign=7c383c828701a18bf4b55510ee12363e/b8389b504fc2d56272d96a43e71190ef77c66c4f.jpg"};window.qVisitorAvatar={size20:"",size40:"",size65:"",size110:"",size160:""};window.qBdsToken="1d1be990fa72af7026475958bcdfa2e2";window.qErrorInfo={"no":"0","msg":""};window.qServerInfo={"timeStamp":"1377528210"};window.qLongPolling={"url":"http:\/\/m.hi.baidu.com\/i\/msg\/listen"}</script><!--[if (lt IE 8.0)]><link href="http://hi.bdimg.com/static/qbase/css/qbase.css?v=d097b2a7.css" type=text/css rel=stylesheet><![endif]--><!--[if (!IE)|(gte IE 8.0)]><!--><link href="http://hi.bdimg.com/static/qbase/css/qbase_datauri.css?v=c2391e47.css" type=text/css rel=stylesheet><!--<![endif]-->     <!--[if (lt IE 8.0)]><link rel=stylesheet type=text/css href="http://hi.bdimg.com/static/qcomment/css/qcomment.css?v=5ba753ab.css"><![endif]--><!--[if (!IE)|(gte IE 8.0)]><!--><link rel=stylesheet type=text/css href="http://hi.bdimg.com/static/qcomment/css/qcomment_datauri.css?v=a90beb01.css"><!--<![endif]--><link rel=stylesheet type=text/css href="http://hi.bdimg.com/static/qhome/css/common/mod_userInfo.css?v=86bf4259.css">   <!--[if (lt IE 8.0)]><link type=text/css rel=stylesheet href="http://hi.bdimg.com/static/qhome/css/detail/20001/detail.css?v=635ae796.css"><![endif]--><!--[if (!IE)|(gte IE 8.0)]><!--><link type=text/css rel=stylesheet href="http://hi.bdimg.com/static/qhome/css/detail/20001/detail_datauri.css?v=0f094a12.css"><!--<![endif]-->    <link rel=stylesheet type=text/css href="http://hi.bdimg.com/static/qpublish/css/editor/shCoreDefault.css?v=79e715f0.css">     <script src="http://hi.bdimg.com/static/qbase/js/qing/qing.js?v=4d5f41d2.js"></script>  <script>
    /*最终页页面变量*/ 
    window.detailPage = {
        threadId : "c532cf3cb42277fbdf22214b",
        blogTitle: "XStream使用方法总结 -对象-转换" || "无标题",
        contentType : "text",
        originAuthorName : "",
        originPortrait : "",
        originThreadId : ""
    }; 
    </script><script>wpo.head=new Date*1;</script> </head> <body>
    <section class=mod-page-body> <div class="mod-page-main wordwrap clearfix">  <div class=x-page-container>    <section class="mod-topspaceinfo mod-cs-header"><div class=head-topbar></div>
    </section>   
    <div class=mod-blogpage-wraper> <div class="blog-bg-main-repeat hide"></div>  <div class="grid-80 mod-blogpage"> <div class="blog-bg-main hide"></div>    <div class="mod-text-content mod-post-content mod-cs-contentblock"> <div class=cs-contentblock-bg></div>   <div class="content-head clearfix">
      <h2 class="title content-title">XStream使用方法总结 -对象-转换</h2>  </div>  <div id=content class="content mod-cs-content text-content clearfix"> <p>XStream使用方法总结附实例代码 XML---对象 转换<br />XStream中的核心类就是XStream类，一般来说，熟悉这个类基本就够用了，如果你用的更多，估计是你设计有问题，否则不需要。<br />XStream 对象相当Java对象和XML之间的转换器，转换过程是双向的。创建XSteam对象的方式很简单，只需要new XStream()即可。<br />Java 到xml，用toXML()方法。<br />Xml到Java，用fromXML()方法。<br />在没有任何设置默认情况下，java到xml的映 射，是java成员名对应xml的元素名，java类的全名对应xml根元素的名字。而实际中，往往是xml和java类都有了，要完成相互转换，必须进 行别名映射。<br />别名配置包含三种情况：<br />1、类别名，用alias(String name, Class type)。<br />2、 类成员别名，用aliasField(String alias, Class definedIn, String fieldName)<br />3、 类成员作为属性别名，用 aliasAttribute(Class definedIn, String attributeName, String alias)，单独命名没有意义，还要通过useAttributeFor(Class definedIn, String fieldName) 应用到某个类上。<br />别名的配置是非常重要的，但是其中有些细节问题很重要，在例子中会专门做详细说明。<br />另外还有不太常用的方法：<br />addImplicitCollection(Class ownerType, String fieldName)，去掉集合类型生成xml的父节点。<br />registerConverter(Converter converter) ，注册一个转换器。<br />如果你的xml很大，或者为了安全性，以流的方式传输，那么XStream也提供丰富的API，<br />使 用起来也非常简便。目前还用不到，暂不考虑。<br />如果这些基本的操作还不能满足你应用的需求，XStream提供丰富的扩展点。你可以实现自己的转 换器。还可以利用XStream完成更负责的功能，比如输出其他非xml格式的数据，还可以输出html，还支持XML Dom类型数据，这些应用起来稍微复杂些。当然这些不是XStream应用的重点，也不用理会，真正需要的时候再查看API和源码研究研究。<br />XStream 的优点很多，但是也有一些小bug，比如在定义别名中的下划线“_”转换为xml后会变成“__”这个符号，很变态。因此，尽量避免在别名中实用任何符 号，却是需要下划线的时候，可以考虑实用连接符“-”，这个没有问题。<br />另外，我们的Java Bean中，常常有一些常量，在转换过程，XStream也会将这些常量转换过去，形成常量的xml节点，这显然不是想要的结果，对于常量字段，就不做转 换了。</p><p>下面给出一个非常典型的而且实用的例子，作为对总结的补充：</p><p>package test;<br />import java.util.List;<br />/**<br />* Created by IntelliJ IDEA.&lt;br&gt;<br />* &lt;b&gt;User&lt;/b&gt;: leizhimin&lt;br&gt;<br />* &lt;b&gt;Date&lt;/b&gt;: 2008-5-22 21:10:13&lt;br&gt;<br />* &lt;b&gt;Note&lt;/b&gt;: Please add comment here!<br />*/<br />public class Person {<br />private String name;<br />private String age;<br />private Profile profile;<br />private List&lt;Address&gt; addlist;<br />public Person(String name, String age, Profile profile, List&lt;Address&gt; addlist) {<br />this.name = name;<br />this.age = age;<br />this.profile = profile;<br />this.addlist = addlist;<br />}<br />public String toString() {<br />return &quot;Person{&quot; +<br />&quot;name='&quot; + name + '\'' +<br />&quot;, age='&quot; + age + '\'' +<br />&quot;, profile=&quot; + profile +<br />&quot;, addlist=&quot; + addlist +<br />'}';<br />}<br />}<br />package test;<br />import java.sql.Date;<br />/**<br />* Created by IntelliJ IDEA.&lt;br&gt;<br />* &lt;b&gt;User&lt;/b&gt;: leizhimin&lt;br&gt;<br />* &lt;b&gt;Date&lt;/b&gt;: 2008-5-22 21:10:32&lt;br&gt;<br />* &lt;b&gt;Note&lt;/b&gt;: Please add comment here!<br />*/<br />public class Profile {<br />private String job;<br />private String tel;<br />private String remark;<br />public Profile(String job, String tel, String remark) {<br />this.job = job;<br />this.tel = tel;<br />this.remark = remark;<br />}<br />public String toString() {<br />return &quot;Profile{&quot; +<br />&quot;job='&quot; + job + '\'' +<br />&quot;, tel='&quot; + tel + '\'' +<br />&quot;, remark='&quot; + remark + '\'' +<br />'}';<br />}<br />}<br />package test;<br />/**<br />* Created by IntelliJ IDEA.&lt;br&gt;<br />* &lt;b&gt;User&lt;/b&gt;: leizhimin&lt;br&gt;<br />* &lt;b&gt;Date&lt;/b&gt;: 2008-5-22 21:10:22&lt;br&gt;<br />* &lt;b&gt;Note&lt;/b&gt;: Please add comment here!<br />*/<br />public class Address {<br />private String add;<br />private String zipcode;<br />public Address(String add, String zipcode) {<br />this.add = add;<br />this.zipcode = zipcode;<br />}</p><p>public String toString() {<br />return &quot;Address{&quot; +<br />&quot;add='&quot; + add + '\'' +<br />&quot;, zipcode='&quot; + zipcode + '\'' +<br />'}';<br />}<br />}<br />package test;<br />import com.thoughtworks.xstream.XStream;<br />import java.util.List;<br />import java.util.ArrayList;<br />/**<br />* Created by IntelliJ IDEA.&lt;br&gt;<br />* &lt;b&gt;User&lt;/b&gt;: leizhimin&lt;br&gt;<br />* &lt;b&gt;Date&lt;/b&gt;: 2008-5-22 21:10:47&lt;br&gt;<br />* &lt;b&gt;Note&lt;/b&gt;: XStream学习[http://lavasoft.blog.51cto.com]<br />*/<br />public class TestXStream {<br />public static void main(String args[]) {<br />test();<br />}<br />public static void test() {<br />System.out.println(&quot;----------XStream学 习:http://lavasoft.blog.51cto.com----------&quot;);<br />//目标对象<br />Address address1 = new Address(&quot;郑州市经三路&quot;, &quot;450001&quot;);<br />Address address2 = new Address(&quot;西安市雁塔路&quot;, &quot;710002&quot;);<br />List&lt;Address&gt; addList = new ArrayList&lt;Address&gt;();<br />addList.add(address1);<br />addList.add(address2);<br />Profile profile = new Profile(&quot;软件工程师&quot;, &quot;13512129933&quot;, &quot;备注说明&quot;);<br />Person person = new Person(&quot;熔岩&quot;, &quot;27&quot;, profile, addList);<br />//转换装配<br />XStream xStream = new XStream();<br />/************** 设置类别名 ****************/<br />xStream.alias(&quot;PERSON&quot;, test.Person.class);<br />xStream.alias(&quot;PROFILE&quot;, test.Profile.class);<br />xStream.alias(&quot;ADDRESS&quot;, test.Address.class);<br />output(1, xStream, person);<br />/************* 设置类成员的别名 ***************/<br />//设置Person类的name成员别名Name<br />xStream.aliasField(&quot;Name&quot;, Person.class, &quot;name&quot;);<br />/*[注意] 设置Person类的profile成员别名PROFILE,这个别名和Profile类的别名一致,<br />* 这样可以保持XStream对象可以从profile成员生成的xml片段直接转换为Profile成员,<br />* 如果成员profile的别名和Profile的别名不一致,则profile成员生成的xml片段不可<br />* 直接转换为Profile对象,需要重新创建XStream对象,这岂不给自己找麻烦? */<br />xStream.aliasField(&quot;PROFILE&quot;, test.Person.class, &quot;profile&quot;);<br />xStream.aliasField(&quot;ADDLIST&quot;, test.Person.class, &quot;addlist&quot;);<br />xStream.aliasField(&quot;Add&quot;, test.Address.class, &quot;add&quot;);<br />xStream.aliasField(&quot;Job&quot;, test.Profile.class, &quot;job&quot;);<br />output(2, xStream, person);<br />/******* 设置类成员为xml一个元素上的属性 *******/<br />xStream.useAttributeFor(Address.class, &quot;zipcode&quot;);<br />/************* 设置属性的别名 ***************/<br />xStream.aliasAttribute(test.Address.class, &quot;zipcode&quot;, &quot;Zipcode&quot;);<br />output(3, xStream, person);<br />/************* 将xml转为java对象 ******×****/<br />String person_xml = &quot;&lt;PERSON&gt;\n&quot; +<br />&quot; &lt;Name&gt;熔岩&lt;/Name&gt;\n&quot; +<br />&quot; &lt;age&gt;27&lt;/age&gt;\n&quot; +<br />&quot; &lt;PROFILE&gt;\n&quot; +<br />&quot; &lt;Job&gt;软件工程师&lt;/Job&gt;\n&quot; +<br />&quot; &lt;tel&gt;13512129933&lt;/tel&gt;\n&quot; +<br />&quot; &lt;remark&gt;备注说明&lt;/remark&gt;\n&quot; +<br />&quot; &lt;/PROFILE&gt;\n&quot; +<br />&quot; &lt;ADDLIST&gt;\n&quot; +<br />&quot; &lt;ADDRESS Zipcode=\&quot;450001\&quot;&gt;\n&quot; +<br />&quot; &lt;Add&gt;郑州市经三路&lt;/Add&gt;\n&quot; +<br />&quot; &lt;/ADDRESS&gt;\n&quot; +<br />&quot; &lt;ADDRESS Zipcode=\&quot;710002\&quot;&gt;\n&quot; +<br />&quot; &lt;Add&gt;西安市雁塔路&lt;/Add&gt;\n&quot; +<br />&quot; &lt;/ADDRESS&gt;\n&quot; +<br />&quot; &lt;/ADDLIST&gt;\n&quot; +<br />&quot;&lt;/PERSON&gt;&quot;;<br />String profile_xml = &quot; &lt;PROFILE&gt;\n&quot; +<br />&quot; &lt;Job&gt;软件工程师&lt;/Job&gt;\n&quot; +<br />&quot; &lt;tel&gt;13512129933&lt;/tel&gt;\n&quot; +<br />&quot; &lt;remark&gt;备注说明&lt;/remark&gt;\n&quot; +<br />&quot; &lt;/PROFILE&gt;&quot;;<br />String address_xml = &quot; &lt;ADDRESS Zipcode=\&quot;710002\&quot;&gt;\n&quot; +<br />&quot; &lt;Add&gt;西安市雁塔路&lt;/Add&gt;\n&quot; +<br />&quot; &lt;/ADDRESS&gt;&quot;;<br />//同样实用上面的XStream对象xStream<br />System.out.println(xStream.fromXML(person_xml).toString());<br />System.out.println(xStream.fromXML(profile_xml).toString());<br />System.out.println(xStream.fromXML(address_xml).toString());<br />}<br />public static void output(int i, XStream xStream, Object obj) {<br />String xml = xStream.toXML(obj);<br />System.out.println(&quot;&gt;&gt;&gt;第[ &quot; + i + &quot;]次输出\n&quot;);<br />System.out.println(xml + &quot;\n&quot;);<br />}<br />}<br />----------XStream学 习:http://lavasoft.blog.51cto.com----------<br />&gt;&gt;&gt;第[ 1]次输出<br />&lt;PERSON&gt;<br />&lt;name&gt;熔岩&lt;/name&gt;<br />&lt;age&gt;27&lt;/age&gt;<br />&lt;profile&gt;<br />&lt;job&gt;软件工程师&lt;/job&gt;<br />&lt;tel&gt;13512129933&lt;/tel&gt;<br />&lt;remark&gt;备注说明&lt;/remark&gt;<br />&lt;/profile&gt;<br />&lt;addlist&gt;<br />&lt;ADDRESS&gt;<br />&lt;add&gt;郑州市经三路&lt;/add&gt;<br />&lt;zipcode&gt;450001&lt;/zipcode&gt;<br />&lt;/ADDRESS&gt;<br />&lt;ADDRESS&gt;<br />&lt;add&gt;西安市雁塔路&lt;/add&gt;<br />&lt;zipcode&gt;710002&lt;/zipcode&gt;<br />&lt;/ADDRESS&gt;<br />&lt;/addlist&gt;<br />&lt;/PERSON&gt;<br />&gt;&gt;&gt;第[ 2]次输出<br />&lt;PERSON&gt;<br />&lt;Name&gt;熔岩&lt;/Name&gt;<br />&lt;age&gt;27&lt;/age&gt;<br />&lt;PROFILE&gt;<br />&lt;Job&gt;软件工程师&lt;/Job&gt;<br />&lt;tel&gt;13512129933&lt;/tel&gt;<br />&lt;remark&gt;备注说明&lt;/remark&gt;<br />&lt;/PROFILE&gt;<br />&lt;ADDLIST&gt;<br />&lt;ADDRESS&gt;<br />&lt;Add&gt;郑州市经三路&lt;/Add&gt;<br />&lt;zipcode&gt;450001&lt;/zipcode&gt;<br />&lt;/ADDRESS&gt;<br />&lt;ADDRESS&gt;<br />&lt;Add&gt;西安市雁塔路&lt;/Add&gt;<br />&lt;zipcode&gt;710002&lt;/zipcode&gt;<br />&lt;/ADDRESS&gt;<br />&lt;/ADDLIST&gt;<br />&lt;/PERSON&gt;<br />&gt;&gt;&gt;第[ 3]次输出<br />&lt;PERSON&gt;<br />&lt;Name&gt;熔岩&lt;/Name&gt;<br />&lt;age&gt;27&lt;/age&gt;<br />&lt;PROFILE&gt;<br />&lt;Job&gt;软件工程师&lt;/Job&gt;<br />&lt;tel&gt;13512129933&lt;/tel&gt;<br />&lt;remark&gt;备注说明&lt;/remark&gt;<br />&lt;/PROFILE&gt;<br />&lt;ADDLIST&gt;<br />&lt;ADDRESS Zipcode=&quot;450001&quot;&gt;<br />&lt;Add&gt;郑州市经三路&lt;/Add&gt;<br />&lt;/ADDRESS&gt;<br />&lt;ADDRESS Zipcode=&quot;710002&quot;&gt;<br />&lt;Add&gt;西安市雁塔路&lt;/Add&gt;<br />&lt;/ADDRESS&gt;<br />&lt;/ADDLIST&gt;<br />&lt;/PERSON&gt;<br />Person{name='熔岩', age='27', profile=Profile{job='软件工程师', tel='13512129933', remark='备注说明'}, addlist=[Address{add='郑州市经三路', zipcode='450001'}, Address{add='西安市雁塔路', zipcode='710002'}]}<br />Profile{job='软件工程师', tel='13512129933', remark='备注说明'}<br />Address{add='西安市雁塔路', zipcode='710002'}<br />Process finished with exit code 0<br />在实际中，类的属性很多，嵌套层次也很复杂，如果仅仅使用XStream原生API来硬 编码设置别名等属性，显得太生硬也难以维护。完全可以考虑通过一个xml配置文件来定义所有用到的类的别名定义（包括其成员），然后，通过读取配置构建一 个XStream的工厂，在用到时候直接去取，而不是让实用者组装。我目前的一个项目中，就是这么实现的，效果非常的好。<br />下面我给出针对上面提 出的问题一个解决方案：<br />思想：考虑做一个过滤器，在xml转java之前，在Java转xml之后，应用这个过滤器。这个过滤器提供将xml中 的“__”替换为“-”，并且将xml中的不需要的节点剔除。<br />在过滤之前，我实现了个转换器装配，这一步通过xml来配置，并在java中获 取。<br />代码就省略了，这一步很灵活，关键看你的应用了。<br />为了能过滤xml，我们需要用Dom4j递归遍历xml文档。下面一些算法代 码：<br />//递归算法：遍历配置文件，找出所有有效的xpath<br />private static void recursiveElement(Element element) {<br />List&lt;Element&gt; elements = element.elements();<br />validXPathList.add(element.getPath());<br />if (elements.size() == 0) {<br />//没有子元素<br />} else {<br />//有子元素<br />for (Iterator&lt;Element&gt; it = elements.iterator(); it.hasNext();) {<br />//递归遍历<br />recursiveElement(it.next());<br />}<br />}<br />}<br />//递归算法：遍历xml，标识无效的元素节点<br />private static void recursiveFixElement(Element element) {<br />List&lt;Element&gt; elements = element.elements();<br />if (!validXPathList.contains(element.getPath())) {<br />element.addAttribute(&quot;delete&quot;, &quot;true&quot;);<br />}<br />if (elements.size() == 0) {<br />//没有子元素<br />} else {<br />//有子元素<br />for (Iterator&lt;Element&gt; it = elements.iterator(); it.hasNext();) {<br />Element e = it.next();<br />if (!validXPathList.contains(e.getPath())) {<br />e.addAttribute(&quot;delete&quot;, &quot;true&quot;);<br />}<br />//递归遍历<br />recursiveFixElement(e);<br />}<br />}<br />}<br />/**<br />* 过滤器接口方法，转换不规范字符，剔除无效节点<br />*<br />* @param xmlStr 要过滤的xml<br />* @return 符合转换器要求的xml<br />*/<br />public static String filter(String xmlStr) {<br />Document document = null;<br />try {<br />document = DocumentHelper.parseText(xmlStr.replaceAll(&quot;__&quot;, &quot;_&quot;));<br />//递归的调用：标记要剔除的xml元素<br />recursiveFixElement(document.getRootElement());<br />List&lt;Node&gt; nodeList = document.selectNodes(&quot;<a>//@delete</a>&quot;);<br />for (Node node : nodeList) {<br />node.getParent().detach(); //剔除xml元素<br />}<br />} catch (DocumentException e) {<br />System.out.println(e.getMessage());<br />e.printStackTrace();<br />}<br />return document.asXML();<br />}<br /></p> </div>    <div class="mod-tagbox clearfix"> </div> 
    </div>
    <div class=mod-share-detail id=shareDetail style=display:none></div>   
        <div class="mod-detail-pager clearfix">  <div class=detail-nav-pre> <a href="http://hi.baidu.com/061041033/item/ee712614731c425b2b3e224b" hidefocus title=""></a> </div>   <div class=detail-nav-next> <a href="http://hi.baidu.com/061041033/item/f88b80e8db7fdbe7fb42ba70" hidefocus title=""></a> </div>  </div>   
    </div>
    </div>  </div> </div> </section>
    <script src="http://hi.bdimg.com/static/qbase/js/mod/mod_foot.js?v=382c615f.js"></script> <script>
        	qing.dom.ready(function(){
                if (qVisitorInfo.loginStatus == 'activated'){
                    qext.stat.ns('m_20121012_loga_num');
					qext.fn.setStoken();
				}
			});
        </script>        <script>qext.stat.ns('m_20120425_');</script>  <script src="http://hi.bdimg.com/static/qcomment/js/qcmt_import.js?v=ac96f988.js"></script>  <script src="http://hi.bdimg.com/static/qpublish/js/editor/shCore.js?v=805e084f.js"></script> <script>
        SyntaxHighlighter.highlight();
    </script>   <script src="http://hi.bdimg.com/static/qhome/js/detail/20001/detail.js?v=3d7781df.js"></script>   <script>wpo.tti=new Date*1;</script><script src="http://hi.baidu.com/cm/static/js/allsite.js?v=75674092.js?v=201308262243"></script><script>document.write(unescape("%3Cscript src='http://hm.baidu.com/h.js%3F8c869b543955d43e496c2efee5b55823' type='text/javascript'%3E%3C/script%3E"));qext.stat.ns('m_20120713_qing_pv');</script>