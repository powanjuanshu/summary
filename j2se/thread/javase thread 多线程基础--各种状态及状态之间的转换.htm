<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>java 多线程基础--各种状态及状态之间的转换 - congqingbin的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="线程转换图线程在它的生命周期中会处于各种不同的状态：新建、等待、就绪、运行、阻塞、死亡。1 新建用new语句创建的线程对象处于新建状态，此时它和其他java对象一样，仅被分配了内存。2等待当线程在new之后，并且在调用start方法前，线程处于等待状态。 &#160; --2012-12-213 就绪当一个线程对象创建后，其他线程调用它的start()方法，该线程就进" />
<script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
<link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/default/css/style.css?v=1.1" />
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/congqingbin/rss/list" />
<link rel="shortcut icon" href="/favicon.ico" />
<link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
</head>
<body>
<script src="http://csdnimg.cn/pubnav/js/pub_topnav_2011.js"type="text/javascript"></script>

<div id="container">
  <script type="text/javascript">
    var username = "congqingbin";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/congqingbin";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>

<div id="body">
<div id="main">
<div class="main">
  <div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Repost"></span>
    <h3>
        <span class="link_title"><a href="/congqingbin/article/details/7729675">
        java 多线程基础--各种状态及状态之间的转换
        </a></span>
    </h3>
</div>

        
    <div id="article_content" class="article_content">

<p>线程转换图</p>
<p><img src="http://my.csdn.net/uploads/201207/09/1341822072_9077.jpg" alt=""><br>
</p>
<p>线程在它的生命周期中会处于各种不同的状态：</p>
新建、等待、就绪、运行、阻塞、死亡。<br>
1 新建<br>
<p>用new语句创建的线程对象处于新建状态，此时它和其他java对象一样，仅被分配了内存。</p>
<p>2等待</p>
<p>当线程在new之后，并且在调用start方法前，线程处于等待状态。 &nbsp; --2012-12-21</p>
<p>3 就绪</p>
当一个线程对象创建后，其他线程调用它的start()方法，该线程就进入就绪状态。处于这个状态的线程位于Java虚拟机的可运行池中，等待cpu的使用权。<br>
4 运行状态<br>
处于这个状态的线程占用CPU，执行程序代码。在并发运行环境中，如果计算机只有一个CPU，那么任何时刻只会有一个线程处于这个状态。<br>
&nbsp;只有处于就绪状态的线程才有机会转到运行状态。<br>
5 阻塞状态<br>
阻塞状态是指线程因为某些原因放弃CPU，暂时停止运行。当线程处于阻塞状态时，Java虚拟机不会给线程分配CPU，直到线程重新进入就绪状态，它才会有机会获得运行状态。<br>
6 死亡状态<br>
当线程执行完run()方法中的代码，或者遇到了未捕获的异常，就会退出run()方法，此时就进入死亡状态，该线程结束生命周期。<br>
&nbsp;<br>
&nbsp;<br>
由于java线程调度不是分时的，如果程序希望干预java虚拟机对线程的调度过程，从而明确地让一个线程给另外一个线程运行的机会，可以采用以下的方法<br>
&nbsp; &nbsp; 1 调整各个线程的优先级<br>
&nbsp; &nbsp; 2 让处于运行状态的线程调用Thread.sleep(long time)方法 放弃CPU 进入阻塞状态&nbsp;<br>
<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sleep方法可能抛出InterruptedException</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;线程休眠后只能在指定的时间后使线程处于就绪状态。（也就是等待cpu的调度）</p>
&nbsp; &nbsp; 3 让处于运行状态的线程调用Thread.yield()方法 只会同优先级让步或更高优先级让步 &nbsp;进入就绪状态<br>
&nbsp; &nbsp; 4 让处于运行状态的线程调用另一个线程的join()方法<br>
<p>&nbsp; &nbsp; &nbsp; &nbsp;当前运行的线程可以调用另一个线程的join()方法，当前运行的线程将转到阻塞状态，直至另一个线程运行结束，它才会转到就绪状态 从而有机会恢复运行。</p>
<p><br>
</p>
<p><span style="font-family:SimHei"><span style="font-size:16px">&nbsp;</span><span style="font-size:12px">通过一下几种途径中的一种，线程可以从被阻塞状态到可运行状态。<br>
&nbsp; &nbsp; &nbsp; &nbsp; 1 线程被置于睡眠状态，且已经经过指定的毫秒数。<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2 线程正在等待I/O操作的完成，且该操作已经完成。<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3 线程正在等待另一个线程所持有的锁，且另一个线程已经释放该锁的所有权；（也有可能等待超时。当超时发生时，线程解除阻塞。）<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4 线程正在等待某个触发条件，且另一个线程发出了信号表明条件已经发生了变化。（如果为线程的等待设置了一个超时，那么当超时发生时该线程将解除阻塞。）<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 线程已经被挂起，且有人调用了它的resume方法。不过，由于suspend方法已经过时，resume方法也就随之被弃用了，你不应该在自己的代码里调用它。(现在应该用sleep取而代之。)</span></span><br>
</p>

</div>

<!--192.168.100.34-->
  </div>
  <script type="text/javascript">
    //new Ad(4, 'ad_cen');
</script>
  <script type="text/javascript">
    var fileName = '7729675';
    var commentscount = 0;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>

<div id="d-top" style="display:none;">
<a id="d-top-a" href="#" title="回到顶部">
<img src="http://static.blog.csdn.net/images/top.png" alt="TOP" /></a>
</div>
<script type="text/javascript">
    $(function(){
        var d_top=$('#d-top');
        document.onscroll=function(){
            var scrTop=(document.body.scrollTop||document.documentElement.scrollTop);
            if(scrTop>500){
                d_top.show();
            }else{
                d_top.hide();
            }
        }
        $('#d-top-a').click(function(){
            scrollTo(0,0);
            this.blur();
            return false;
        });
    });
</script>

<div class="clear"></div>
</div>
</div>

<div class="clear"></div>
</div>

<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js?v=1.1"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=985403"></script>

<script type="text/javascript">
document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date()/120000).toString(36) + '="></'+'script>');
</script>

<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js?v=1"></script>


<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>

<script type="text/javascript" src="http://zz.csdn.net/js/count.js"></script>

</div>
</body>
</html>