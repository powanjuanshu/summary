<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Java 线程池ThreadPoolExecutor - abing37的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="&#160;Java线程池ThreadPoolExecutor.&#160;JDK1.5开始关于多线程加了很多特性。如：ConcurrentHashMap:放弃使用公用锁同步每一个方法，使用了更细化的锁机制，分离锁。对于大数据量的HashMap同步操作效率有了较大提升。CopyOnWriteArrayList:是同步Lis" />
<script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
<link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/default/css/style.css?v=1.1" />
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/abing37/rss/list" />
<link rel="shortcut icon" href="/favicon.ico" />
<link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
</head>
<body>
<script src="http://csdnimg.cn/pubnav/js/pub_topnav_2011.js"type="text/javascript"></script>

<div id="container">
  <script type="text/javascript">
    var username = "abing37";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/abing37";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "warmsmellofcolitas";
</script>

<div id="body">
<div id="main">
<div class="main">
  <div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h3>
        <span class="link_title"><a href="/abing37/article/details/4506759">
        Java 线程池ThreadPoolExecutor
        </a></span>
    </h3>
</div>

        
    <div id="article_content" class="article_content">
<p style="margin-bottom: 0cm"><span style="font-family: Monospace;">JDK1.5</span>
  <span style="font-family: Monospace;">开始关于多线程加了很多特性。如：</span></p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">ConcurrentHashMap:</span>
<span style="font-family: Monospace;">放弃使用公用锁同步每一个方法，使用了更细化的锁机制，分离锁。对于大数据量的</span>
<span style="font-family: Monospace;">HashMap</span>
<span style="font-family: Monospace;">同步操作效率有了较大提升。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">CopyOnWriteArrayList:</span>
<span style="font-family: Monospace;">是同步</span>
<span style="font-family: Monospace;">List</span>
<span style="font-family: Monospace;">的一个并发替代品。其线程安全性来源于这样一个事实：只要有效的不可变对象被正确发布，那么访问它将不再需要更多的同步。在每次需要修改时它们会创建并重新发布一个信的容器拷贝，以此来实现可变性。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">增加了</span>
<span style="font-family: Monospace;">Callable</span>
<span style="font-family: Monospace;">和</span>
<span style="font-family: Monospace;">Future</span>
<span style="font-family: Monospace;">。</span>
<span style="font-family: Monospace;">Callable</span>
<span style="font-family: Monospace;">是</span>
<span style="font-family: Monospace;">runnable</span>
<span style="font-family: Monospace;">的一个可选替代。我们之前用的</span>
<span style="font-family: Monospace;">Runnable</span>
<span style="font-family: Monospace;">是不能返回状态的，而</span>
<span style="font-family: Monospace;">Callable</span>
<span style="font-family: Monospace;">是可以返回状态，返回的状态保存在泛型</span>
<span style="font-family: Monospace;">Future&lt;T&gt;</span>
<span style="font-family: Monospace;">里。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">JDK1.5</span>
<span style="font-family: Monospace;">里面还包含了一个重要的特性就是线程池。通过查看代码可以看出主要都是由大师</span>
<span style="font-family: Monospace;">Doug
Lea</span>
<span style="font-family: Monospace;">来完成的。本文主要介绍线程池</span>
<span style="font-family: Monospace;">ThreadPoolExecutor</span>
<span style="font-family: Monospace;">的使用。</span></p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">JDK1.5</span>
<span style="font-family: Monospace;">的线程池由</span>
<span style="font-family: Monospace;">Executor</span>
<span style="font-family: Monospace;">框架提供。</span>
<span style="font-family: Monospace;">Executor</span>
<span style="font-family: Monospace;">框架将处理请求任务的提交和它的执行解耦。可以制定执行策略。在线程池中执行线程可以重用已经存在的线程，而不是创建新的线程，可以在处理多请求时抵消线程创建、消亡产生的开销。如果线程池过大，会导致内存的高使用量，还可能耗尽资源。如果过小，会由于存在很多的处理器资源未工作，对吞吐量造成损失。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">由于内容较多没有一一研究，只看了较常用的</span>
<span style="font-family: Monospace;">ThreadPoolExecutor</span>
<span style="font-family: Monospace;">，所以在这里做个介绍。</span>
<span style="font-family: Monospace;">ThreadPoolExecutor</span>
<span style="font-family: Monospace;">的继承关系如下。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">Executor-&gt;ExecutorService-&gt;AbstractExecutorService-&gt;ThreadPoolExecutor</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">核心池大小</span>
<span style="font-family: Monospace;">(core
pool size)</span>
<span style="font-family: Monospace;">、最大池的大小</span>
<span style="font-family: Monospace;">(maximum
pool size)</span>
<span style="font-family: Monospace;">、存活时间</span>
<span style="font-family: Monospace;">(keep-alive
time)</span>
<span style="font-family: Monospace;">共同管理着线程的创建和销毁。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">线程池类为
</span>
<span style="font-family: Monospace;">java.util.concurrent.ThreadPoolExecutor</span>
<span style="font-family: Monospace;">，常用构造方法为：</span></p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">   
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #7f0055;"><strong>public</strong>
</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">ThreadPoolExecutor(</span>
<span style="color: #7f0055;"><strong>int</strong>
</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">corePoolSize,</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
                       </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #7f0055;"><strong>int</strong>
</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">maximumPoolSize,</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
                       </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #7f0055;"><strong>long</strong>
</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">keepAliveTime,</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
                       </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #000000;">TimeUnit</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">unit,</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
                       </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #000000;">BlockingQueue&lt;Runnable&gt;</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">workQueue,</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
                       </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #000000;">RejectedExecutionHandler</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">handler)</span>
<span style="color: #1a1a1a;"> </span>
<span style="color: #000000;">{</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
 </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #7f0055;"><strong>this</strong>
</span>
<span style="color: #000000;">(corePoolSize,</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">maximumPoolSize,</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">keepAliveTime,</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">unit,</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">workQueue,</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">      
      </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #000000;">Executors.</span>
<span style="color: #000000;"><em>defaultThreadFactory</em>
</span>
<span style="color: #000000;">(),</span>
<span style="color: #1a1a1a;">
</span>
<span style="color: #000000;">handler);</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #1a1a1a;">    </span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #000000;">}</span>
</span>
</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">：
线程池维护线程的最少数量，哪怕是空闲的。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">maximumPoolSize</span>
<span style="font-family: Monospace;">：线程池维护线程的最大数量。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">keepAliveTime</span>
<span style="font-family: Monospace;">：
线程池维护线程所允许的空闲时间。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">unit</span>
<span style="font-family: Monospace;">：
线程池维护线程所允许的空闲时间的单位。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">workQueue</span>
<span style="font-family: Monospace;">：
线程池所使用的缓冲队列，改缓冲队列的长度决定了能够缓冲的最大数量。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">拒绝任务：拒绝任务是指当线程池里面的线程数量达到</span>
<span style="font-family: Monospace;">maximumPoolSize</span>
<span style="font-family: Monospace;">且</span>
<span style="font-family: Monospace;">workQueue</span>
<span style="font-family: Monospace;">队列已满的情况下被尝试添加进来的任务。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">handler</span>
<span style="font-family: Monospace;">：
线程池对拒绝任务的处理策略。在</span>
<span style="font-family: Monospace;">ThreadPoolExecutor</span>
<span style="font-family: Monospace;">里面定义了</span>
<span style="font-family: Monospace;">4</span>
<span style="font-family: Monospace;">种</span>
<span style="font-family: Monospace;">handler</span>
<span style="font-family: Monospace;">策略，分别是</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">1.	CallerRunsPolicy</span>
<span style="font-family: Monospace;">：这个策略重试添加当前的任务，他会自动重复调用</span>
<span style="font-family: Monospace;">execute()</span>
<span style="font-family: Monospace;">方法，直到成功</span></p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">2.	AbortPolicy</span>
<span style="font-family: Monospace;">：对拒绝任务抛弃处理，并且抛出异常。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">3.	DiscardPolicy</span>
<span style="font-family: Monospace;">：对拒绝任务直接无声抛弃，没有异常信息。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">4.	DiscardOldestPolicy</span>
<span style="font-family: Monospace;">：对拒绝任务不抛弃，而是抛弃队列里面等待最久的一个线程，然后把拒绝任务加到队列。</span></p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">一个任务通过
</span>
<span style="font-family: Monospace;">execute(Runnable)</span>
<span style="font-family: Monospace;">方法被添加到线程池，任务就是一个
</span>
<span style="font-family: Monospace;">Runnable</span>
<span style="font-family: Monospace;">类型的对象，任务的执行方法就是
</span>
<span style="font-family: Monospace;">Runnable</span>
<span style="font-family: Monospace;">类型对象的</span>
<span style="font-family: Monospace;">run()</span>
<span style="font-family: Monospace;">方法。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">当一个任务通过</span>
<span style="font-family: Monospace;">execute(Runnable)</span>
<span style="font-family: Monospace;">方法欲添加到线程池时，线程池采用的策略如下：</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">1.	</span>
<span style="font-family: Monospace;">如果此时线程池中的数量小于</span>
<span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">，即使线程池中的线程都处于空闲状态，也要创建新的线程来处理被添加的任务。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">2.	</span>
<span style="font-family: Monospace;">如果此时线程池中的数量等于
</span>
<span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">，但是缓冲队列
</span>
<span style="font-family: Monospace;">workQueue</span>
<span style="font-family: Monospace;">未满，那么任务被放入缓冲队列。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">3.	</span>
<span style="font-family: Monospace;">如果此时线程池中的数量大于</span>
<span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">，缓冲队列</span>
<span style="font-family: Monospace;">workQueue</span>
<span style="font-family: Monospace;">满，并且线程池中的数量小于</span>
<span style="font-family: Monospace;">maximumPoolSize</span>
<span style="font-family: Monospace;">，建新的线程来处理被添加的任务。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">4.	</span>
<span style="font-family: Monospace;">如果此时线程池中的数量大于</span>
<span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">，缓冲队列</span>
<span style="font-family: Monospace;">workQueue</span>
<span style="font-family: Monospace;">满，并且线程池中的数量等于</span>
<span style="font-family: Monospace;">maximumPoolSize</span>
<span style="font-family: Monospace;">，那么通过
</span>
<span style="font-family: Monospace;">handler</span>
<span style="font-family: Monospace;">所指定的策略来处理此任务。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">处理任务的优先级为：</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">核心线程</span>
<span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">、任务队列</span>
<span style="font-family: Monospace;">workQueue</span>
<span style="font-family: Monospace;">、最大线程</span>
<span style="font-family: Monospace;">maximumPoolSize</span>
<span style="font-family: Monospace;">，如果三者都满了，使用</span>
<span style="font-family: Monospace;">handler</span>
<span style="font-family: Monospace;">处理被拒绝的任务。当线程池中的线程数量大于
</span>
<span style="font-family: Monospace;">corePoolSize</span>
<span style="font-family: Monospace;">时，如果某线程空闲时间超过</span>
<span style="font-family: Monospace;">keepAliveTime</span>
<span style="font-family: Monospace;">，线程将被终止。这样，线程池可以动态的调整池中的线程数。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">理解了上面关于</span>
<span style="font-family: Monospace;">ThreadPoolExecutord</span>
<span style="font-family: Monospace;">的介绍，应该就基本能了解它的一些使用，不过在</span>
<span style="font-family: Monospace;">ThreadPoolExocutor</span>
<span style="font-family: Monospace;">里面有个关键的</span>
<span style="font-family: Monospace;">Worker</span>
<span style="font-family: Monospace;">类，所有的线程都要经过</span>
<span style="font-family: Monospace;">Worker</span>
<span style="font-family: Monospace;">的包装。这样才能够做到线程可以复用而无需重新创建线程。</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">同时</span>
<span style="font-family: Monospace;">Executors</span>
<span style="font-family: Monospace;">类里面有</span>
<span style="font-family: Monospace;"><span style="color: #000000;"><span style="font-size: x-small;">newFixedThreadPool(),newCachedThreadPool()</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="color: #000000;"><span style="font-size: x-small;">等几个方法，实际上也是间接调用了</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="color: #000000;"><span style="font-size: x-small;">ThreadPoolExocutor</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="color: #000000;"><span style="font-size: x-small;">，不过是传的不同的构造参数。</span>
</span>
</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;">下面通过一个例子的执行结果来理解</span></p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"> <span style="font-family: Monospace;">代码：</span>
</p>
<p><textarea cols="50" rows="15" name="code" class="java"> import java.io.Serializable;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class TestThreadPool {

private static int produceTaskSleepTime = 2;
private static int consumeTaskSleepTime = 2000;
private static int produceTaskMaxNumber = 9;

public static void main(String[] args) {

// 构造一个线程池
ThreadPoolExecutor threadPool = new ThreadPoolExecutor(2, 3, 3, TimeUnit. SECONDS ,
new ArrayBlockingQueue&lt;Runnable&gt;(2), new ThreadPoolExecutor.DiscardOldestPolicy() );
for ( int i = 1; i &lt;= produceTaskMaxNumber ; i++) {
try {
// 产生一个任务，并将其加入到线程池
String task = &quot;task@ &quot; + i;
System. out .println( &quot;put &quot; + task);
threadPool.execute( new ThreadPoolTask(task));

// 便于观察，等待一段时间
Thread. sleep ( produceTaskSleepTime );
} catch (Exception e) {
e.printStackTrace();
}
}
}

public static class ThreadPoolTask implements Runnable, Serializable {
private static final long serialVersionUID = 0;
// 保存任务所需要的数据
private Object threadPoolTaskData ;

ThreadPoolTask(Object tasks) {
this . threadPoolTaskData = tasks;
}

public void run() {
// 处理一个任务，这里的处理方式太简单了，仅仅是一个打印语句
System. out .println( &quot;start ..&quot; + threadPoolTaskData );
try {
// // 便于观察，等待一段时间
Thread. sleep ( consumeTaskSleepTime );
} catch (Exception e) {
e.printStackTrace();
}
threadPoolTaskData = null ;
}

public Object getTask() {
return this . threadPoolTaskData ;
}
}
} </textarea></p>
<p style="margin-bottom: 0cm;" align="left">&nbsp;</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">上面代码定义了一个</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">corePoolSize</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">为</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">2</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">，</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">maximumPoolSize</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">为</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">3</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">，</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">workerQuene</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">容量为</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">3</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">的线程池，也就是说在饱和状态下，只能容纳</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">6</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">个线程，</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">3</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">个是运行状态，</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">3</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">个在队列里面。同时代码又往线程池里面添加了</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">9</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">个线程，每个线程会运行</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">2</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;">秒，这样必然会到达饱和状态。而饱和状态就涉及到对拒绝任务的处理策略，本处采用了</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><strong>ThreadPoolExecutor.DiscardOldestPolicy()</strong>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><strong>的</strong>
</span>
<span style="font-weight: normal;">运行结果如下：</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-weight: normal;">put
task@ 1</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 1</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 5</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 6</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 7</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 8</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 9</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 8</span>
</span>
</span>
</p>
<p style="margin-left: 1.83cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 9</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-weight: normal;">采用</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><strong>ThreadPoolExecutor.DiscardOldestPolicy()</strong>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><strong>的</strong>
</span>
<span style="font-weight: normal;">运行结果如下：</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 1</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 1</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 5</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 6</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 6</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 5</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 7</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 7</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 8</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 9</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 8</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="color: #000000;"><span style="font-size: x-small;">start
..task@ 9</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">采用</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><span style="font-family: Monospace;"><strong>ThreadPoolExecutor.AbortPolicy()</strong>
</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><span style="font-family: Monospace;"><strong>的</strong>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-weight: normal;">运行结果如下：</span>
</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-weight: normal;">put
task@ 1</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 1</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 5</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 6</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000080;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="text-decoration: underline;">java.util.concurrent.RejectedExecutionException</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:1477</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.reject(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:384</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.execute(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:867</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
TestThreadPool.main(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">TestThreadPool.java:22</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 7</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000080;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="text-decoration: underline;">java.util.concurrent.RejectedExecutionException</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:1477</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.reject(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:384</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.execute(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:867</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
TestThreadPool.main(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">TestThreadPool.java:22</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 8</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000080;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="text-decoration: underline;">java.util.concurrent.RejectedExecutionException</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:1477</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.reject(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:384</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.execute(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:867</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
TestThreadPool.main(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">TestThreadPool.java:22</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 9</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000080;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="text-decoration: underline;">java.util.concurrent.RejectedExecutionException</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:1477</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.reject(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:384</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
java.util.concurrent.ThreadPoolExecutor.execute(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">ThreadPoolExecutor.java:867</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #ff0000;">	at
TestThreadPool.main(</span>
<span style="color: #000080;"><span style="text-decoration: underline;">TestThreadPool.java:22</span>
</span>
<span style="color: #ff0000;">)</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.75cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 5</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">采用</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><span style="font-family: Monospace;"><strong>ThreadPoolExecutor.DiscardPolicy()</strong>
</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="color: #23ff23;"><span style="font-family: Monospace;"><strong>的</strong>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-weight: normal;">运行结果如下：</span>
</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-weight: normal;">put
task@ 1</span>
</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 1</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 2</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 5</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 3</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 6</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 7</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 8</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">put
task@ 9</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 4</span>
</span>
</span>
</p>
<p style="margin-left: 1.73cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;">start
..task@ 5</span>
</span>
</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">从运行结果可以看出不同的</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">Handler</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">策略对拒绝任务的处理方式。</span>
</span>
</span>
</span>
</span>
</p>
<p style="text-indent: 0.74cm; margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">目前还只偏重在使用层面的理解，底层细节的原理还有待日后学习，欢迎交流。</span>
</span>
</span></span></span></p>
<p style="margin-bottom: 0cm;" align="left"><span style="color: #000000;"><span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">本文部分内容和例子参考了：</span>
</span>
</span>
</span>
<span style="font-family: Monospace;"><span style="font-size: x-small;"><span style="font-family: Monospace;"><span style="font-weight: normal;">http://blog.csdn.net/imicro/archive/2007/08/29/1763955.aspx</span>
</span>
</span>
</span>
</span>
</p>
<p style="margin-bottom: 0cm;" align="left">&nbsp;</p>
<p>&nbsp;</p>
</div>

<!--192.168.100.34-->
  </div>
  <script type="text/javascript">
    //new Ad(4, 'ad_cen');
</script>
  <script type="text/javascript">
    var fileName = '4506759';
    var commentscount = 3;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="d-top" style="display:none;">
<a id="d-top-a" href="#" title="回到顶部">
<img src="http://static.blog.csdn.net/images/top.png" alt="TOP" /></a>
</div>
<script type="text/javascript">
    $(function(){
        var d_top=$('#d-top');
        document.onscroll=function(){
            var scrTop=(document.body.scrollTop||document.documentElement.scrollTop);
            if(scrTop>500){
                d_top.show();
            }else{
                d_top.hide();
            }
        }
        $('#d-top-a').click(function(){
            scrollTo(0,0);
            this.blur();
            return false;
        });
    });
</script>

<div class="clear"></div>
</div>
</div>

<div class="clear"></div>
</div>

<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js?v=1.1"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=631238"></script>

<script type="text/javascript">
document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date()/120000).toString(36) + '="></'+'script>');
</script>

<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js?v=1"></script>


<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>

<script type="text/javascript" src="http://zz.csdn.net/js/count.js"></script>

</div>
</body>
</html>