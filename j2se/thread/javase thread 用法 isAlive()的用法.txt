package com;
public class Ts {
	static void printThreadMessage(String message){
		String threadName=Thread.currentThread().getName();
		System.out.format("%s:%s%n",threadName,message);
	}
	private static class MessageLoop implements Runnable{
		@Override
		public void run() {
			String info[]={"消息1","消息2","消息3","消息4"};
			try {
				for(int i=0;i<info.length;i++){
					Thread.sleep(4000);
					printThreadMessage(info[i]);
				}
			} catch (Exception e) {
				printThreadMessage("不能正常工作");
			}
		}
	}
	public static void main(String[] args) throws InterruptedException {
		long delay=1000*60*60;
		if(args.length>0){
			try {
				delay=Long.parseLong(args[0])*1000;
			} catch (Exception e) {
				System.err.println("参数必须是整数");
				System.exit(1);
			}
		}
		printThreadMessage("启动MessageLoop线程...");
		long startTime=System.currentTimeMillis();
		Thread t=new Thread(new MessageLoop());
		t.start();
		printThreadMessage("等待MessageLoop线程结束...");
		while(t.isAlive()){
			printThreadMessage("继续等待...");
			t.join(1000);//终止当前线程一秒钟，等待t线程执行为止，最多等待1秒钟
			if(((System.currentTimeMillis()-startTime)>delay)&&t.isAlive()){
				printThreadMessage("时间太久，不再等待");
				t.interrupt();//线程中断
				t.join();//等待t线程结束为止
			}
		}
		printThreadMessage("MessageLoop线程结束!");
	}
}
--------------
package com;
public class To {
	public static void main(String[] args) throws InterruptedException {
		Thread thread1 = new Thread(new Runn());
		Thread thread2 = new Thread(new Runn());
		Thread thread3 = new Thread(new Runn());
		Thread thread4 = new Thread(new Runn());
		Thread thread5 = new Thread(new Runn());
		
		thread1.setName("线程1号");
		thread2.setName("线程2号");
		thread3.setName("线程3号");
		thread4.setName("线程4号");
		thread5.setName("线程5号");
		
		thread1.start();
		while (!thread1.isAlive())
            Thread.sleep(100);
		thread2.start();
		while (!thread1.isAlive())
            Thread.sleep(100);
		thread3.start();
		while (!thread1.isAlive())
            Thread.sleep(100);
		thread4.start();
		while (!thread1.isAlive())
            Thread.sleep(100);
		thread5.start();
		while (!thread1.isAlive())
            Thread.sleep(100);
	}
	public static class Runn implements Runnable{
		@Override
		public void run() {
			int i=0;
			while(true){
				System.out.println(Thread.currentThread().getName());
				i++;
			}
		}
	}
}
