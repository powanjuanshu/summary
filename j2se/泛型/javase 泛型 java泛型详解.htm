<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
     
    <html xmlns="http://www.w3.org/1999/xhtml">
    
<head>

    <script id="allmobilize" charset="utf-8" src="http://a.yunshipei.com/46aae4d1e2371e4aa769798941cef698/allmobilize.min.js"></script>
 <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />

    <title>Java泛型详解 - Jinuxwu的专栏
        - 博客频道 - CSDN.NET</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="1. 概述在引入范型之前，Java类型分为原始类型、复杂类型，其中复杂类型分为数组和类。引入范型后，一个复杂类型就可以在细分成更多的类型。例如原先的类型List，现在在细分成List, List等更多的类型。注意，现在List, List是两种不同的类型，他们" />
    <script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
        <!--new top-->
               <link rel="stylesheet" href="http://static.csdn.net/public/common/toolbar/css/index.css">        <!--new top-->

    <link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/light_blue/css/style.css?v=1.1" />
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/Jinuxwu/rss/list" />
    <link rel="shortcut icon" href="http://csdnimg.cn/public/favicon.ico" />
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
 


</head>
<body>
    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="http://static.csdn.net/public/common/toolbar/js/html.js" type="text/javascript"></script>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/jinuxwu">Jinuxwu的专栏</a></h2>
            <h3></h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>
                <li id="btnContents"><a href="http://blog.csdn.net/jinuxwu?viewmode=contents"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_mulu'])">
                    <img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/jinuxwu?viewmode=list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_zhaiyao'])">
                    <img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/jinuxwu/rss/list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_RSS'])">
                    <img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>                

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "Jinuxwu";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/jinuxwu";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod='popu_3' > 

<a href="http://bbs.csdn.net/topics/390812950?page=5#post-398523062"target="_blank">
<font color=blue>博客专家福利
</font></a>
&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/40047403">
<font color=red>有奖试读&征文——我们在互联网上奋斗的故事</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/41079173">
<font color=blue>10月推荐文章汇总
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/blogdevteam/article/details/39894901">
<font color=red>参与话题讨论，好礼等你拿（获奖名单公布）
</font></a>
&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/csdnproduct/article/details/40822727">
<font color=blue>公告：博客新皮肤上线啦
</font></a>


</div>                        </div>
                        

  
<link href="http://static.blog.csdn.net/css/comment1.css" type="text/css" rel="stylesheet" />
<link href="http://static.blog.csdn.net/css/style1.css" type="text/css" rel="stylesheet" />
<script language='JavaScript' type='text/javascript' src='http://download.csdn.net/js/jquery.cookie.js'></script>
<script type="text/javascript" src="http://csdnimg.cn/rabbit/search-service/main.js"></script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>


    <h1>
        <span class="link_title"><a href="/jinuxwu/article/details/6771121">
        Java泛型详解
        </a></span>
    </h1>
</div>

    <div class="article_manage">
    <span class="link_postdate">2011-09-13 16:09</span>
    <span class="link_view" title="阅读次数">17594人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_pinglun'])">评论</a>(5)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shoucang']);collectArticle('Java泛型详解','6771121');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_jubao']);report(6771121,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href='http://www.csdn.net/tag/java' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">java</a><a href='http://www.csdn.net/tag/class' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">class</a><a href='http://www.csdn.net/tag/integer' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">integer</a><a href='http://www.csdn.net/tag/list' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">list</a><a href='http://www.csdn.net/tag/jdbc' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">jdbc</a><a href='http://www.csdn.net/tag/%e7%bc%96%e8%af%91%e5%99%a8' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">编译器</a></div>

  
    
<div id="article_content" class="article_content">

<strong>1. 概述</strong><br>
在引入范型之前，Java类型分为原始类型、复杂类型，其中复杂类型分为数组和类。引入范型后，一个复杂类型<br>
就可以在细分成更多的类型。<br>
例如原先的类型List，现在在细分成List&lt;Object&gt;, List&lt;String&gt;等更多的类型。<br>
注意，现在List&lt;Object&gt;, List&lt;String&gt;是两种不同的类型，<br>
他们之间没有继承关系，即使String继承了Object。下面的代码是非法的<br>
&nbsp;&nbsp; &nbsp;List&lt;String&gt; ls = new ArrayList&lt;String&gt;();<br>
&nbsp;&nbsp; &nbsp;List&lt;Object&gt; lo = ls;<br>
这样设计的原因在于，根据lo的声明，编译器允许你向lo中添加任意对象（例如Integer），但是此对象是<br>
List&lt;String&gt;，破坏了数据类型的完整性。<br>
在引入范型之前，要在类中的方法支持多个数据类型，就需要对方法进行重载，在引入范型后，可以解决此问题<br>
（多态），更进一步可以定义多个参数以及返回&#20540;之间的关系。<br>
例如<br>
public void write(Integer i, Integer[] ia);<br>
public void write(Double&nbsp; d, Double[] da);<br>
的范型版本为<br>
public &lt;T&gt; void write(T t, T[] ta);<br>
<br>
<strong>2. 定义&amp;使用</strong><br>
&nbsp;类型参数的命名风&#26684;为：<br>
&nbsp;推荐你用简练的名字作为形式类型参数的名字(如果可能，单个字符)。最好避免小写字母，这使它和其他的普通<br>
&nbsp;的形式参数很容易被区分开来。<br>
&nbsp;使用T代表类型，无论何时都没有比这更具体的类型来区分它。这经常见于泛型方法。如果有多个类型参数，我们<br>
&nbsp;可能使用字母表中T的临近的字母，比如S。<br>
&nbsp;如果一个泛型函数在一个泛型类里面出现，最好避免在方法的类型参数和类的类型参数中使用同样的名字来避免混<br>
&nbsp;淆。对内部类也是同样。<br>
&nbsp;<br>
<strong>&nbsp;2.1 定义带类型参数的类</strong><br>
&nbsp;在定义带类型参数的类时，在紧跟类命之后的&lt;&gt;内,指定一个或多个类型参数的名字，同时也可以对类型参数的取<br>
&nbsp;&#20540;范围进行限定，多个类型参数之间用,号分隔。<br>
&nbsp;定义完类型参数后，可以在定义位置之后的类的几乎任意地方（静态块，静态属性，静态方法除外）使用类型参数，<br>
&nbsp;就像使用普通的类型一样。<br>
&nbsp;注意，父类定义的类型参数不能被子类继承。<br>
&nbsp;public class TestClassDefine&lt;T, S extends T&gt; {<br>
&nbsp;&nbsp;&nbsp; &nbsp;.... &nbsp;<br>
&nbsp;}<br>
&nbsp;<br>
<strong>&nbsp;2.2 定义待类型参数方法</strong><br>
&nbsp;在定义带类型参数的方法时，在紧跟可见范围修饰（例如public）之后的&lt;&gt;内,指定一个或多个类型参数的名字，<br>
&nbsp;同时也可以对类型参数的取&#20540;范围进行限定，多个类型参数之间用,号分隔。<br>
&nbsp;定义完类型参数后，可以在定义位置之后的方法的任意地方使用类型参数，就像使用普通的类型一样。<br>
&nbsp;例如：<br>
&nbsp;public &lt;T, S extends T&gt; T testGenericMethodDefine(T t, S s){<br>
&nbsp;&nbsp;&nbsp; &nbsp;...<br>
&nbsp;}<br>
&nbsp;注意：定义带类型参数的方法，骑主要目的是为了表达多个参数以及返回&#20540;之间的关系。例如本例子中T和S的继<br>
&nbsp;承关系， 返回&#20540;的类型和第一个类型参数的&#20540;相同。<br>
&nbsp;如果仅仅是想实现多态，请优先使用通配符解决。通配符的内容见下面章节。<br>
&nbsp;public &lt;T&gt; void testGenericMethodDefine2(List&lt;T&gt; s){<br>
&nbsp;&nbsp;&nbsp; &nbsp;...<br>
&nbsp;}<br>
&nbsp;应改为<br>
&nbsp;public void testGenericMethodDefine2(List&lt;？&gt; s){<br>
&nbsp;&nbsp;&nbsp; &nbsp;...<br>
&nbsp;}<br>
&nbsp;<br>
<strong>3. 类型参数赋&#20540;</strong><br>
&nbsp;当对类或方法的类型参数进行赋&#20540;时，要求对所有的类型参数进行赋&#20540;。否则，将得到一个编译错误。<br>
&nbsp;<br>
<strong>&nbsp;3.1 对带类型参数的类进行类型参数赋&#20540;</strong><br>
&nbsp;对带类型参数的类进行类型参数赋&#20540;有两种方式<br>
&nbsp;第一声明类变量或者实例化时。例如<br>
&nbsp;List&lt;String&gt; list;<br>
&nbsp;list = new ArrayList&lt;String&gt;;<br>
&nbsp;第二继承类或者实现接口时。例如<br>
&nbsp;public class MyList&lt;E&gt; extends ArrayList&lt;E&gt; implements List&lt;E&gt; {...} <br>
&nbsp;<br>
<strong>&nbsp;3.2 对带类型参数方法进行赋&#20540;</strong><br>
&nbsp;当调用范型方法时，编译器自动对类型参数进行赋&#20540;，当不能成功赋&#20540;时报编译错误。例如<br>
&nbsp;public &lt;T&gt; T testGenericMethodDefine3(T t, List&lt;T&gt; list){<br>
&nbsp;&nbsp;&nbsp; &nbsp;...<br>
&nbsp;}<br>
&nbsp;public &lt;T&gt; T testGenericMethodDefine4(List&lt;T&gt; list1, List&lt;T&gt; list2){<br>
&nbsp;&nbsp;&nbsp; &nbsp;...<br>
&nbsp;}<br>
&nbsp;<br>
&nbsp;Number n = null;<br>
&nbsp;Integer i = null;<br>
&nbsp;Object o = null;<br>
&nbsp;testGenericMethodDefine(n, i);//此时T为Number, S为Integer<br>
&nbsp;testGenericMethodDefine(o, i);//T为Object, S为Integer<br>
&nbsp;<br>
&nbsp;List&lt;Number&gt; list1 = null;<br>
&nbsp;testGenericMethodDefine3(i, list1)//此时T为Number<br>
&nbsp;<br>
&nbsp;List&lt;Integer&gt; list2 = null;<br>
&nbsp;testGenericMethodDefine4(list1, list2)//编译报错<br>
&nbsp;<br>
<strong>&nbsp;3.3 通配符</strong><br>
&nbsp;在上面两小节中，对是类型参数赋予具体的&#20540;，除此，还可以对类型参数赋予不确定&#20540;。例如<br>
&nbsp;List&lt;?&gt; unknownList;<br>
&nbsp;List&lt;? extends Number&gt; unknownNumberList;<br>
&nbsp;List&lt;? super Integer&gt; unknownBaseLineIntgerList; <br>
&nbsp;注意： 在Java集合框架中，对于参数&#20540;是未知类型的容器类，只能读取其中元素，不能像其中添加元素，<br>
&nbsp;因为，其类型是未知，所以编译器无法识别添加元素的类型和容器的类型是否兼容，唯一的例外是NULL<br>
<br>
&nbsp;List&lt;String&gt; listString;<br>
&nbsp;List&lt;?&gt; unknownList2 = listString;<br>
&nbsp;unknownList = unknownList2;<br>
&nbsp;listString = unknownList;//编译错误<br>
&nbsp;<br>
<strong>4. 数组范型</strong><br>
&nbsp;可以使用带范型参数&#20540;的类声明数组，却不可有创建数组<br>
&nbsp;List&lt;Integer&gt;[] iListArray;<br>
&nbsp;new ArrayList&lt;Integer&gt;[10];//编译时错误<br>
&nbsp;<br>
<strong>5. 实现原理<br>
<br>
5.1. Java范型时编译时技术，在运行时不包含范型信息，仅仅Class的实例中包含了类型参数的定义信息。</strong><br>
泛型是通过java编译器的称为擦除(erasure)的前端处理来实现的。你可以（基本上就是）把它认为是一个从源<br>
码到源码的转换，它把泛型版本转换成非泛型版本。<br>
基本上，擦除去掉了所有的泛型类型信息。所有在尖括号之间的类型信息都被扔掉了，因此，比如说一个<br>
List&lt;String&gt;类型被转换为List。所有对类型变量的引用被替换成类型变量的上限(通常是Object)。而且，<br>
无论何时结果代码类型不正确，会插入一个到合适类型的转换。<br>
&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &lt;T&gt; T badCast(T t, Object o) {<br>
&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return (T) o; // unchecked warning<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
类型参数在运行时并不存在。这意味着它们不会添加任何的时间或者空间上的负担，这很好。不幸的是，这也意味<br>
着你不能依靠他们进行类型转换。<br>
<br>
<strong>5.2.一个泛型类被其所有调用共享</strong><br>
下面的代码打印的结果是什么？<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;String&gt; l1 = new ArrayList&lt;String&gt;();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;Integer&gt; l2 = new ArrayList&lt;Integer&gt;();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(l1.getClass() == l2.getClass());<br>
或许你会说false，但是你想错了。它打印出true。因为一个泛型类的所有实例在运行时具有相同的运行时类(class)，<br>
而不管他们的实际类型参数。<br>
事实上，泛型之所以叫泛型，就是因为它对所有其可能的类型参数，有同样的行为；同样的类可以被当作许多不同<br>
的类型。作为一个结果，类的静态变量和方法也在所有的实例间共享。这就是为什么在静态方法或静态初始化代码<br>
中或者在静态变量的声明和初始化时使用类型参数（类型参数是属于具体实例的）是不合法的原因。<br>
<strong><br>
5.3. 转型和instanceof</strong><br>
泛型类被所有其实例(instances)共享的另一个暗示是检查一个实例是不是一个特定类型的泛型类是没有意义的。<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Collection cs = new ArrayList&lt;String&gt;();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (cs instanceof Collection&lt;String&gt;) { ...} // 非法<br>
类&#20284;的，如下的类型转换<br>
Collection&lt;String&gt; cstr = (Collection&lt;String&gt;) cs;<br>
得到一个unchecked warning，因为运行时环境不会为你作这样的检查。<br>
<br>
<strong>6. Class的范型处理</strong><br>
Java 5之后，Class变成范型化了。<br>
JDK1.5中一个变化是类 java.lang.Class是泛型化的。这是把泛型扩展到容器类之外的一个很有意思的例子。<br>
现在，Class有一个类型参数T, 你很可能会问，T 代表什么？它代表Class对象代表的类型。比如说，<br>
String.class类型代表 Class&lt;String&gt;，Serializable.class代表 Class&lt;Serializable&gt;。<br>
这可以被用来提高你的反射代码的类型安全。<br>
特别的，因为 Class的 newInstance() 方法现在返回一个T, 你可以在使用反射创建对象时得到更精确的类型。<br>
比如说，假定你要写一个工具方法来进行一个数据库查询，给定一个SQL语句，并返回一个数据库中符合查询条件<br>
的对象集合(collection)。<br>
一个方法是显式的传递一个工厂对象，像下面的代码：<br>
interface Factory&lt;T&gt; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public T[] make();<br>
}<br>
public &lt;T&gt; Collection&lt;T&gt; select(Factory&lt;T&gt; factory, String statement) { <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Collection&lt;T&gt; result = new ArrayList&lt;T&gt;();<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;/* run sql query using jdbc */<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;for ( int i=0; i&lt;10; i&#43;&#43; ) { /* iterate over jdbc results */<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;T item = factory.make();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* use reflection and set all of item’s fields from sql results */<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;result.add( item );<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return result;<br>
}<br>
你可以这样调用：<br>
select(new Factory&lt;EmpInfo&gt;(){ <br>
&nbsp;&nbsp; &nbsp;public EmpInfo make() { <br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return new EmpInfo();<br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } , ”selection string”);<br>
也可以声明一个类 EmpInfoFactory 来支持接口 Factory：<br>
class EmpInfoFactory implements Factory&lt;EmpInfo&gt; { ...<br>
&nbsp;&nbsp; &nbsp;public EmpInfo make() { return new EmpInfo();}<br>
}<br>
然后调用：<br>
select(getMyEmpInfoFactory(), &quot;selection string&quot;);<br>
这个解决方案的缺点是它需要下面的二者之一：<br>
调用处那冗长的匿名工厂类，或为每个要使用的类型声明一个工厂类并传递其对象给调用的地方<br>
这很不自然。<br>
使用class类型参数&#20540;是非常自然的，它可以被反射使用。没有泛型的代码可能是：<br>
Collection emps = sqlUtility.select(EmpInfo.class, ”select * from emps”); ...<br>
public static Collection select(Class c, String sqlStatement) { <br>
&nbsp;&nbsp; &nbsp;Collection result = new ArrayList();<br>
&nbsp;&nbsp; &nbsp;/* run sql query using jdbc */<br>
&nbsp;&nbsp; &nbsp;for ( /* iterate over jdbc results */ ) { <br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Object item = c.newInstance();<br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/* use reflection and set all of item’s fields from sql results */<br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;result.add(item);<br>
&nbsp;&nbsp; &nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return result;<br>
}<br>
但是这不能给我们返回一个我们要的精确类型的集合。现在Class是泛型的，我们可以写：<br>
Collection&lt;EmpInfo&gt; emps=sqlUtility.select(EmpInfo.class, ”select * from emps”); ...<br>
public static &lt;T&gt; Collection&lt;T&gt; select(Class&lt;T&gt;c, String sqlStatement) { <br>
&nbsp;&nbsp; &nbsp;Collection&lt;T&gt; result = new ArrayList&lt;T&gt;();<br>
&nbsp;&nbsp; &nbsp;/* run sql query using jdbc */<br>
&nbsp;&nbsp; &nbsp;for ( /* iterate over jdbc results */ ) { <br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;T item = c.newInstance();<br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;/* use reflection and set all of item’s fields from sql results */<br>
&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;result.add(item);<br>
&nbsp;&nbsp; &nbsp;} <br>
&nbsp;&nbsp; &nbsp;return result;<br>
}<br>
来通过一种类型安全的方式得到我们要的集合。<br>
这项技术是一个非常有用的技巧，它已成为一个在处理注释(annotations)的新API中被广泛使用的习惯用法。<br>
<br>
<strong>7. 新老代码兼容<br>
<br>
7.1. 为了保证代码的兼容性，下面的代码编译器（javac）允许，类型安全有你自己保证</strong><br>
List l = new ArrayList&lt;String&gt;();<br>
List&lt;String&gt; l = new ArrayList();<br>
<br>
<strong>7.2. 在将你的类库升级为范型版本时，慎用协变式返回&#20540;。</strong><br>
例如，将代码<br>
public class Foo { <br>
&nbsp;&nbsp;&nbsp; public Foo create(){<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Foo();<br>
&nbsp;&nbsp;&nbsp; }<br>
}<br>
<br>
public class Bar extends Foo { <br>
&nbsp;&nbsp;&nbsp; public Foo create(){<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Bar();<br>
&nbsp;&nbsp;&nbsp; } <br>
}<br>
采用协变式返回&#20540;风&#26684;，将Bar修改为<br>
public class Bar extends Foo { <br>
&nbsp;&nbsp;&nbsp; public Bar create(){<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return new Bar();<br>
&nbsp;&nbsp;&nbsp; } <br>
}<br>
要小心你类库的客户端。<br>
<br>
<strong>8. 参考资料</strong><br>
http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf<br>

</div>




<!-- Baidu Button BEGIN -->

<div class="bdsharebuttonbox" style="float: right;">
<a href="#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"  style="background-position:0 -52px !important"></a>
<a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"style="background-position:0 -104px !important"></a>
<a href="#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"style="background-position:0 -260px !important"></a>
<a href="#" class="bds_renren" data-cmd="renren" title="分享到人人网"style="background-position:0 -208px !important"></a>
<a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"style="background-position:0 -1612px !important" ></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

<!--192.168.100.35-->
<ul class="article_next_prev">
            <li class="prev_article"><span  onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian']);location.href='/jinuxwu/article/details/6216993';">上一篇</span><a href="/jinuxwu/article/details/6216993" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian'])">正则表达式抽取特定字符窜</a></li>
            <li class="next_article"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian']);location.href='/jinuxwu/article/details/6866733';">下一篇</span><a href="/jinuxwu/article/details/6866733" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian'])">Java获取IP地址</a></li>
</ul>

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" ></script>
<script type="text/javascript" id="bdshell_js"></script>
<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->


</div>
      <dl class="blog-associat-tag">
        <dt>主题推荐</dt>
        <dd>
                <a href="http://www.csdn.net/tag/java" target="_blank" class="blog-tage-red" >java</a> 
                <a href="http://www.csdn.net/tag/解决方案" target="_blank" class="blog-tage-red" >解决方案</a> 
                <a href="http://www.csdn.net/tag/编译器" target="_blank" class="blog-tage-red" >编译器</a> 
                <a href="http://www.csdn.net/tag/数据库" target="_blank" class="blog-tage-red" >数据库</a> 
                <a href="http://www.csdn.net/tag/interface" target="_blank" class="blog-tage-red" >interface</a> 
        </dd>
    </dl> 


<dl class="blog-ass-articl tracking-ad"  data-mod="popu_36" id="res-relatived"> 
     <dt><span>猜你在找</span></dt>    
</dl>

<script type="text/javascript">
    var searchtitletags = 'Java泛型详解' + ',' + 'java,解决方案,编译器,数据库,interface';
    searchService({
        index: 'blog',
        query: searchtitletags,
        from: 10,
        size: 10,
        appendTo: '#res-relatived',
        url: 'recommend',
        his: 2,
        client: "blog_cf_enhance",
        tmpl: '<dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="#{ url }" title="#{ title }" strategy="#{ strategy }">#{ title }</a></dd>'
    });

 </script>   


    <div id="ad_cen">
   
          <script type="text/javascript">
              new Ad(4, 'ad_cen');
          </script>
    </div>
<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list">
    </div>
    <div id="comment_bar">
    </div>
    <div id="comment_form">
    </div>

    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '6771121';
    var commentscount = 5;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
    <div id="ad_bot">
    </div>
    <script type="text/javascript">
    new Ad(5, 'ad_bot');
    </script>
<div id="report_dialog">
</div>

<div id="d-top"  style="bottom:60px;">
        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="http://static.blog.csdn.net/images/blog-icon-reply.png" alt="快速回复">
        </a>    

    <a id="d-top-a" class="btn btn-top backtop"  style="display: none;" title="返回顶部" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_huidaodingbu'])" style="">         
         <img src="http://static.blog.csdn.net/images/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");
        
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);
        

        if($("#comment_content").length>0)
        {
            $("#quick-reply").show();

            $("#quick-reply").click(function(){
                setEditorFocus();
            });
        }       
     
        var d_top = $('#d-top-a');
        document.onscroll = function ()
        {
            var scrTop = (document.body.scrollTop || document.documentElement.scrollTop);
            if (scrTop > 500)
            {
                d_top.show();
            } else
            {
                d_top.hide();
            }
        }
        $('#d-top-a').click(function ()
        {
            scrollTo(0, 0);
            this.blur();
            return false;
        });
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>
<div class="tag_list">
    <h5>
        <a href="http://www.csdn.net/tag/" target="_blank">核心技术类目</a></h5>
    <div class="classify">
<a title="全部主题" href="http://www.csdn.net/tag" target="_blank" onclick="LogClickCount(this,336);">全部主题</a>
<a title="Hadoop" href="http://g.csdn.net/5272865" target="_blank" onclick="LogClickCount(this,336);">Hadoop</a>
<a title="AWS" href="http://g.csdn.net/5272866" target="_blank" onclick="LogClickCount(this,336);">AWS</a>
<a title="移动游戏" href="http://g.csdn.net/5272870" target="_blank" onclick="LogClickCount(this,336);">移动游戏</a>
<a title="Java" href="http://g.csdn.net/5272871" target="_blank" onclick="LogClickCount(this,336);">Java</a>
<a title="Android" href="http://g.csdn.net/5272872" target="_blank" onclick="LogClickCount(this,336);">Android</a>
<a title="iOS" href="http://g.csdn.net/5272873" target="_blank" onclick="LogClickCount(this,336);">iOS</a>
<a title="Swift" href="http://g.csdn.net/5272868" target="_blank" onclick="LogClickCount(this,336);">Swift</a>
<a title="智能硬件" href="http://g.csdn.net/5272869" target="_blank" onclick="LogClickCount(this,336);">智能硬件</a>
<a title="Docker" href="http://g.csdn.net/5272867" target="_blank" onclick="LogClickCount(this,336);">Docker</a>
<a title="OpenStack" href="http://g.csdn.net/5272925" target="_blank" onclick="LogClickCount(this,336);">OpenStack</a>
<a title="VPN" href="http://www.csdn.net/tag/vpn" target="_blank" onclick="LogClickCount(this,336);">VPN</a>
<a title="Spark" href="http://g.csdn.net/5272924" target="_blank" onclick="LogClickCount(this,336);">Spark</a>
<a title="ERP" href="http://www.csdn.net/tag/erp" target="_blank" onclick="LogClickCount(this,336);">ERP</a>
<a title="IE10" href="http://www.csdn.net/tag/ie10" target="_blank" onclick="LogClickCount(this,336);">IE10</a>
<a title="Eclipse" href="http://www.csdn.net/tag/eclipse" target="_blank" onclick="LogClickCount(this,336);">Eclipse</a>
<a title="CRM" href="http://www.csdn.net/tag/crm" target="_blank" onclick="LogClickCount(this,336);">CRM</a>
<a title="JavaScript" href="http://www.csdn.net/tag/javascript" target="_blank" onclick="LogClickCount(this,336);">JavaScript</a>
<a title="数据库" href="http://www.csdn.net/tag/数据库" target="_blank" onclick="LogClickCount(this,336);">数据库</a>
<a title="Ubuntu" href="http://www.csdn.net/tag/ubuntu" target="_blank" onclick="LogClickCount(this,336);">Ubuntu</a>
<a title="NFC" href="http://www.csdn.net/tag/nfc" target="_blank" onclick="LogClickCount(this,336);">NFC</a>
<a title="WAP" href="http://www.csdn.net/tag/wap" target="_blank" onclick="LogClickCount(this,336);">WAP</a>
<a title="jQuery" href="http://www.csdn.net/tag/jquery" target="_blank" onclick="LogClickCount(this,336);">jQuery</a>
<a title="BI" href="http://www.csdn.net/tag/bi" target="_blank" onclick="LogClickCount(this,336);">BI</a>
<a title="HTML5" href="http://www.csdn.net/tag/html5" target="_blank" onclick="LogClickCount(this,336);">HTML5</a>
<a title="Spring" href="http://www.csdn.net/tag/spring" target="_blank" onclick="LogClickCount(this,336);">Spring</a>
<a title="Apache" href="http://www.csdn.net/tag/apache" target="_blank" onclick="LogClickCount(this,336);">Apache</a>
<a title=".NET" href="http://www.csdn.net/tag/.net" target="_blank" onclick="LogClickCount(this,336);">.NET</a>
<a title="API" href="http://www.csdn.net/tag/api" target="_blank" onclick="LogClickCount(this,336);">API</a>
<a title="HTML" href="http://www.csdn.net/tag/html" target="_blank" onclick="LogClickCount(this,336);">HTML</a>
<a title="SDK" href="http://www.csdn.net/tag/sdk" target="_blank" onclick="LogClickCount(this,336);">SDK</a>
<a title="IIS" href="http://www.csdn.net/tag/iis" target="_blank" onclick="LogClickCount(this,336);">IIS</a>
<a title="Fedora" href="http://www.csdn.net/tag/fedora" target="_blank" onclick="LogClickCount(this,336);">Fedora</a>
<a title="XML" href="http://www.csdn.net/tag/xml" target="_blank" onclick="LogClickCount(this,336);">XML</a>
<a title="LBS" href="http://www.csdn.net/tag/lbs" target="_blank" onclick="LogClickCount(this,336);">LBS</a>
<a title="Unity" href="http://www.csdn.net/tag/unity" target="_blank" onclick="LogClickCount(this,336);">Unity</a>
<a title="Splashtop" href="http://www.csdn.net/tag/splashtop" target="_blank" onclick="LogClickCount(this,336);">Splashtop</a>
<a title="UML" href="http://www.csdn.net/tag/uml" target="_blank" onclick="LogClickCount(this,336);">UML</a>
<a title="components" href="http://www.csdn.net/tag/components" target="_blank" onclick="LogClickCount(this,336);">components</a>
<a title="Windows Mobile" href="http://www.csdn.net/tag/windowsmobile" target="_blank" onclick="LogClickCount(this,336);">Windows Mobile</a>
<a title="Rails" href="http://www.csdn.net/tag/rails" target="_blank" onclick="LogClickCount(this,336);">Rails</a>
<a title="QEMU" href="http://www.csdn.net/tag/qemu" target="_blank" onclick="LogClickCount(this,336);">QEMU</a>
<a title="KDE" href="http://www.csdn.net/tag/kde" target="_blank" onclick="LogClickCount(this,336);">KDE</a>
<a title="Cassandra" href="http://www.csdn.net/tag/cassandra" target="_blank" onclick="LogClickCount(this,336);">Cassandra</a>
<a title="CloudStack" href="http://www.csdn.net/tag/cloudstack" target="_blank" onclick="LogClickCount(this,336);">CloudStack</a>
<a title="FTC" href="http://www.csdn.net/tag/ftc" target="_blank" onclick="LogClickCount(this,336);">FTC</a>
<a title="coremail" href="http://www.csdn.net/tag/coremail" target="_blank" onclick="LogClickCount(this,336);">coremail</a>
<a title="OPhone " href="http://www.csdn.net/tag/ophone " target="_blank" onclick="LogClickCount(this,336);">OPhone </a>
<a title="CouchBase" href="http://www.csdn.net/tag/couchbase" target="_blank" onclick="LogClickCount(this,336);">CouchBase</a>
<a title="云计算" href="http://www.csdn.net/tag/云计算" target="_blank" onclick="LogClickCount(this,336);">云计算</a>
<a title="iOS6" href="http://www.csdn.net/tag/iOS6" target="_blank" onclick="LogClickCount(this,336);">iOS6</a>
<a title="Rackspace " href="http://www.csdn.net/tag/rackspace " target="_blank" onclick="LogClickCount(this,336);">Rackspace </a>
<a title="Web App" href="http://www.csdn.net/tag/webapp" target="_blank" onclick="LogClickCount(this,336);">Web App</a>
<a title="SpringSide" href="http://www.csdn.net/tag/springside" target="_blank" onclick="LogClickCount(this,336);">SpringSide</a>
<a title="Maemo" href="http://www.csdn.net/tag/maemo" target="_blank" onclick="LogClickCount(this,336);">Maemo</a>
<a title="Compuware" href="http://www.csdn.net/tag/compuware" target="_blank" onclick="LogClickCount(this,336);">Compuware</a>
<a title="大数据" href="http://www.csdn.net/tag/大数据" target="_blank" onclick="LogClickCount(this,336);">大数据</a>
<a title="aptech" href="http://www.csdn.net/tag/aptech" target="_blank" onclick="LogClickCount(this,336);">aptech</a>
<a title="Perl" href="http://www.csdn.net/tag/perl" target="_blank" onclick="LogClickCount(this,336);">Perl</a>
<a title="Tornado" href="http://www.csdn.net/tag/tornado" target="_blank" onclick="LogClickCount(this,336);">Tornado</a>
<a title="Ruby" href="http://www.csdn.net/tag/ruby" target="_blank" onclick="LogClickCount(this,336);">Ruby</a>
<a title="Hibernate" href="http://www.csdn.net/hibernate" target="_blank" onclick="LogClickCount(this,336);">Hibernate</a>
<a title="ThinkPHP" href="http://www.csdn.net/tag/thinkphp" target="_blank" onclick="LogClickCount(this,336);">ThinkPHP</a>
<a title="HBase" href="http://www.csdn.net/tag/hbase" target="_blank" onclick="LogClickCount(this,336);">HBase</a>
<a title="Pure" href="http://www.csdn.net/tag/pure" target="_blank" onclick="LogClickCount(this,336);">Pure</a>
<a title="Solr" href="http://www.csdn.net/tag/solr" target="_blank" onclick="LogClickCount(this,336);">Solr</a>
<a title="Angular" href="http://www.csdn.net/tag/angular" target="_blank" onclick="LogClickCount(this,336);">Angular</a>
<a title="Cloud Foundry" href="http://www.csdn.net/tag/cloudfoundry" target="_blank" onclick="LogClickCount(this,336);">Cloud Foundry</a>
<a title="Redis" href="http://www.csdn.net/tag/redis" target="_blank" onclick="LogClickCount(this,336);">Redis</a>
<a title="Scala" href="http://www.csdn.net/tag/scala" target="_blank" onclick="LogClickCount(this,336);">Scala</a>
<a title="Django" href="http://www.csdn.net/tag/django" target="_blank" onclick="LogClickCount(this,336);">Django</a>
<a title="Bootstrap" href="http://www.csdn.net/tag/bootstrap" target="_blank" onclick="LogClickCount(this,336);">Bootstrap</a>
    </div>
</div>


<script type="text/javascript">
    $(function(){
        setTimeout(function(){
            $(".comment_body:contains('回复')").each(function(index,item){
                var u=$(this).text().split('：')[0].toString().replace("回复","")
                var thisComment=$(this);
                if(u)
                {
                    $.getJSON("https://passport.csdn.net/get/nick?callback=?", {users: u}, function(a) {
                        if(a!=null&&a.data!=null&&a.data.length>0)
                        {
                            nick=a.data[0].n; 
                            if(u!=nick)
                            {
                                thisComment.text(thisComment.text().replace(u,nick));  
                            }
                        }       
                    });  
                }
            });
        },200);  
        
        setTimeout(function(){
            $("a img[src='http://js.tongji.linezing.com/stats.gif']").parent().css({"position":"absolute","left":"50%"});
        },300);
    });
</script>      

                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
            <div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/Jinuxwu" target="_blank">
    <img src="http://avatar.csdn.net/A/E/C/1_jinuxwu.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/Jinuxwu" class="user_name" target="_blank">Jinuxwu</a></span>
</div>
<div class="interact">
<a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_guanzhu'])"></a>

 <a href="javascript:void(0);" class="letter"  title="[发私信]" onclick="window.open('http://msg.csdn.net/letters/model?receiver=Jinuxwu','_blank','height=350,width=700');_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_sixin'])"></a>  
</div>
<div id="blog_medal">
                <div id="bms_box">
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>52969次</span></li>
    <li>积分：<span>937</span> </li>    
    <li >等级： <span style="position:relative;display:inline-block;z-index:1" >
            <img src="http://csdnimg.cn/jifen/images/xunzhang/jianzhang/blog3.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：937 </div>
        </span>  </li>
    <li>排名：<span>第19332名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>41篇</span></li>
    <li>转载：<span>2篇</span></li>
    <li>译文：<span>0篇</span></li>
    <li>评论：<span>20条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="button" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {           
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url = "http://so.csdn.net/so/search/s.do?q=" + encodeURIComponent($("#inputSearch").val()) + "&u=" + username + "&t=blog";
            window.location.href = url;
        }   
    });
</script>
<div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">
             <li>
                <a href="http://blog.csdn.net/jinuxwu/article/category/741283" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">JavaScript</a><span>(11)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/jinuxwu/article/category/671800" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">UML</a><span>(2)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/jinuxwu/article/category/738360" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">XML</a><span>(0)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/jinuxwu/article/category/688396" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">随笔</a><span>(6)</span>
            </li>
             <li>
                <a href="http://blog.csdn.net/jinuxwu/article/category/663693" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">需求分析</a><span>(0)</span>
            </li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="http://blog.csdn.net/jinuxwu/article/month/2012/08">2012年08月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2012/07">2012年07月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2012/06">2012年06月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2012/01">2012年01月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2011/10">2011年10月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2011/09">2011年09月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2011/03">2011年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/10">2010年10月</a><span>(12)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/09">2010年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/08">2010年08月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/07">2010年07月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/06">2010年06月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/05">2010年05月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/04">2010年04月</a><span>(7)</span></li><li><a href="http://blog.csdn.net/jinuxwu/article/month/2010/03">2010年03月</a><span>(1)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="/jinuxwu/article/details/6771121" title="Java泛型详解">Java泛型详解</a><span>(17474)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5441096" title="JDialog总结">JDialog总结</a><span>(5264)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5666202" title="Java控制台清屏">Java控制台清屏</a><span>(3559)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5711300" title="Java内存大小限制">Java内存大小限制</a><span>(1803)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5933302" title="textarea标签的innerHTML和innerText">textarea标签的innerHTML和innerText</a><span>(1639)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5914395" title="XML文件和XSD文件的关系">XML文件和XSD文件的关系</a><span>(1551)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5581717" title="事务并发控制、隔离级别及JDBC事务">事务并发控制、隔离级别及JDBC事务</a><span>(1476)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5933316" title="jre/lib/fontconfig.properties 格式说明">jre/lib/fontconfig.properties 格式说明</a><span>(1363)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5785062" title="从JDK6开始类型参数的值(泛型)算入方法签名(method signature)">从JDK6开始类型参数的值(泛型)算入方法签名(method signature)</a><span>(1229)</span>
</li>
<li>
<a href="/jinuxwu/article/details/6873299" title="Java声明详解(Annotations)">Java声明详解(Annotations)</a><span>(1036)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/jinuxwu/article/details/6771121" title="Java泛型详解">Java泛型详解</a><span>(5)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5666202" title="Java控制台清屏">Java控制台清屏</a><span>(2)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5457180" title="association中aggregation和composition说明">association中aggregation和composition说明</a><span>(2)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5661576" title="JUnit3.81的设计">JUnit3.81的设计</a><span>(2)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5581717" title="事务并发控制、隔离级别及JDBC事务">事务并发控制、隔离级别及JDBC事务</a><span>(2)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5881472" title="Struts Tiles中的组合模式(Composite Pattern)">Struts Tiles中的组合模式(Composite Pattern)</a><span>(1)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5785062" title="从JDK6开始类型参数的值(泛型)算入方法签名(method signature)">从JDK6开始类型参数的值(泛型)算入方法签名(method signature)</a><span>(1)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5643984" title="关于Java和.net的争论">关于Java和.net的争论</a><span>(1)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5648616" title="电信宽度的速度单位">电信宽度的速度单位</a><span>(1)</span>
</li>
<li>
<a href="/jinuxwu/article/details/5542550" title="Java应用程序的类加载器树">Java应用程序的类加载器树</a><span>(1)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="/jinuxwu/article/details/6771121#comments">Java泛型详解</a>
    <p style="margin:0px;"><a href="/lanhao000" class="user_name">lanhao000</a>:

    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/6771121#comments">Java泛型详解</a>
    <p style="margin:0px;"><a href="/zdb_cn" class="user_name">zdb_cn</a>:
asdfasdfasdfasfdasdfasdfasdfasdfalert(&quot;hello&quot;)
    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/6771121#comments">Java泛型详解</a>
    <p style="margin:0px;"><a href="/u011543368" class="user_name">u011543368</a>:
其实我想知道泛型下限的问题。
    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/6771121#comments">Java泛型详解</a>
    <p style="margin:0px;"><a href="/oLiuMangTu12345" class="user_name">oLiuMangTu12345</a>:
感谢楼主的分享，发现两个问题1：List list1 = null; testGenericMeth...
    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/5666202#comments">Java控制台清屏</a>
    <p style="margin:0px;"><a href="/flash8627" class="user_name">flash8627</a>:

    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/5480712#comments">Cookie &amp; Session</a>
    <p style="margin:0px;"><a href="/z1047564482" class="user_name">z1047564482</a>:

    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/5643984#comments">关于Java和.net的争论</a>
    <p style="margin:0px;"><a href="/yzbcgs" class="user_name">yzbcgs</a>:
有时间两个都要学习，都要在工作中使用啊。
    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/5881472#comments">Struts Tiles中的组合模式(Composite Pattern)</a>
    <p style="margin:0px;"><a href="/yzbcgs" class="user_name">yzbcgs</a>:
虽然看不懂，不顶不行，多多写些文章。争取早日成为java牛人。
    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/5785062#comments">从JDK6开始类型参数的值(泛型)算入方法签名(method signature)</a>
    <p style="margin:0px;"><a href="/Jinuxwu" class="user_name">Jinuxwu</a>:
总结了一个星期的结果，自己顶一下
    </p>
    </li>
    <li>
   
         <a href="/jinuxwu/article/details/5581717#comments">事务并发控制、隔离级别及JDBC事务</a>
    <p style="margin:0px;"><a href="/匿名用户" class="user_name">匿名用户</a>:

    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>
</div>

            <div class="clear">
            </div>
        </div>
        

<script type="text/javascript" src="http://csdnimg.cn/rabbit/cnick/cnick.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js"></script>


<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=803896"></script>
<script type="text/javascript">
    document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date() / 120000).toString(36) + '="></' + 'script>');
</script>
    <script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>
<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>
<script type="text/javascript" src="http://zz.csdn.net/js/count.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a>"
                    + "<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });
    });
</script>

    </div>
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnId="header_notice_num" wrapId="note1" count="5" subCount="5" type="text/javascript" src="http://static.csdn.net/public/common/toolbar/js/toolbar.js"></script>     <!--new top-->
</body>
</html>
