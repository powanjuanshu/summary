package com.cairh.xpe.sisap.channels.action.test;
public class Person{
    private int id;
    private String name;
    public String getName() {
        return name;  
    }
    public void setName(String name) {
        this.name = name;  
    }
    public int getId() {
        return id;  
    }
    public void setId(int id) {
        this.id = id;
    }
}

package com.cairh.xpe.sisap.channels.action.test;
import java.text.Collator;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
/** 
 * @Description: 中文字符排序 
 */  
public class SortChineseName implements Comparator<Person>{  
    Collator cmp = Collator.getInstance(java.util.Locale.CHINA);  
    @Override  
    public int compare(Person o1, Person o2) {  
        if (cmp.compare(o1.getName(), o2.getName())>0){
            return 1;
        }else if (cmp.compare(o1.getName(), o2.getName())<0){
            return -1;
        }
        return 0;
    }
    public static void main(String args[]){  
        List<Person> list = new ArrayList<Person>();  
        Person p1 = new Person();  
        p1.setId(1);  
        p1.setName("王三");  
        Person p2 = new Person();
        p2.setId(2);  
        p2.setName("李四");  
        Person p3 = new Person();  
        p3.setId(3);  
        p3.setName("王五");
        Person p4 = new Person();  
        p4.setId(4);  
        p4.setName("李六");
        list.add(p1);
        list.add(p2);
        list.add(p3);
        list.add(p4);
        //正序
        Collections.sort(list, new SortChineseName());
        System.out.println("中文名称正序排列:");
        for (Person pp:list){
            System.out.println(pp.getId()+","+pp.getName());
        }
        System.out.println("---------------神奇的分割线1--------------------");
        //倒序
        Collections.reverse(list);
        System.out.println("中文名称倒序排列1:");
        for (Person pp:list){
            System.out.println(pp.getId()+","+pp.getName());
        }
    }
}

