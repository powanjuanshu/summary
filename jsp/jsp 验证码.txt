a.jsp:
<%@ page language="java" contentType="text/html; charset=utf-8"%>
<script type="text/javascript" src="jquery-1.7.2.min.js"></script>
<script type="text/javascript">
	function e(){
		if($("#a").val()===""){
			alert("请输入验证码。");
			return false;
		}
		$.ajax({
			url:"ValidateServlet",
			data:{"g":$("#a").attr("value")},
			dataType:"text",
			cache:false,
			async:false,
			success:function(data){
				if(!eval(data)){
					alert("校验码输入错误，请重新输入！");
					$("#a").val("");
				}else{
					alert("验证码输入正确！");
				}
			},
			error:function(){
				alert('超时');//此设置将覆盖全局设置
			},
			complete:function(){
				//alert('不管成功还是超时，只要请求完成，必须做的事');
			}
		});
	}
	function d(){
		//为了使每次生成图片不一致，即不让浏览器读缓存，所以需要加上时间戳
		$("#b").attr("src","c?timestamp="+(new Date()).valueOf());
	}
</script>
验证码：<input id="a">
<img id="b" src="AjaxxServlet"><a href="javascript:void(0)" onclick="d()">换一张</a>
<a href="javascript:void(0)" onclick="e()">提交</a>
----
AjaxxServlet.java:
package com;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
public class AjaxxServlet extends HttpServlet{
	private static final long serialVersionUID = -8528089553110914425L;
	private int width=75;
	private int height=20;
	private int codeCount=4;
	private int x=0;
	private int fontHeight;
	private int codeY;
	char[] codeSequence={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R',
			'S','T','U','V','W','X','Y','Z','0','1','2','3','4','5','6','7','8','9'};
	@Override
	public void init() throws ServletException {
		String strWidth=this.getInitParameter("width");
		String strHeight=this.getInitParameter("height");
		String strCodeCount=this.getInitParameter("codeCount");
		try {
			if(strWidth!=null&&strWidth.length()!=0){
				width=Integer.parseInt(strWidth);
			}
			if(strHeight!=null&&strHeight.length()!=0){
				width=Integer.parseInt(strHeight);
			}
			if(strCodeCount!=null&&strCodeCount.length()!=0){
				width=Integer.parseInt(strCodeCount);
			}
		} catch (NumberFormatException e) {
			
		}
		x=width/(codeCount+1);
		fontHeight=height-2;
		codeY=height-4;
	}
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		BufferedImage bufferedImage=new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
		Graphics2D g=bufferedImage.createGraphics();
		Random random=new Random();
		g.setColor(Color.WHITE);
		g.fillRect(0, 0, width,height);
		
		Font font=new Font("Fixedsys", Font.PLAIN, fontHeight);
		g.setFont(font);
		
		g.setColor(Color.BLACK);
		g.drawRect(0, 0, width-1, height-1);
		
		g.setColor(Color.BLACK);
		for(int i=0;i<15;i++){
			int x=random.nextInt(width);
			int y=random.nextInt(height);
			int x1=random.nextInt(12);
			int y1=random.nextInt(12);
			g.drawLine(x, y, x+x1, y+y1);
		}
		
		StringBuffer randomCode=new StringBuffer();
		int red=0;
		int green=0;
		int blue=0;
		for(int i=0;i<codeCount;i++){
			String strRand=String.valueOf(codeSequence[random.nextInt(36)]);
			red=random.nextInt(127);
			green=random.nextInt(127);
			blue=random.nextInt(127);
			g.setColor(new Color(red, green, blue));
			g.drawString(strRand, (i+1)*x, codeY);
			randomCode.append(strRand);
		}
		HttpSession session=req.getSession();
		session.setAttribute("validateCode", randomCode.toString());
		resp.setHeader("Pragma", "no-cache");
		resp.setHeader("Cache-Control", "no-cache");
		resp.setDateHeader("Expires", 0);
		resp.setContentType("image/jpeg");
		ServletOutputStream servletOutputStream=resp.getOutputStream();
		ImageIO.write(bufferedImage,"jpeg", servletOutputStream);
		servletOutputStream.close();
	}
}
----
ValidateServlet.java:
package com;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class ValidateServlet extends HttpServlet{
	private static final long serialVersionUID = -4689347666001157039L;
	@Override
	protected void doGet(HttpServletRequest req,HttpServletResponse resp)throws ServletException,IOException{
		doPost(req,resp);
	}
	protected void doPost(HttpServletRequest req,HttpServletResponse resp)throws ServletException,IOException{
		resp.setContentType("text/html;charset=utf-8");
		String validateC=(String)req.getSession().getAttribute("validateCode");
		String veryCode=req.getParameter("g");
		PrintWriter out=resp.getWriter();
		if(validateC.equalsIgnoreCase(veryCode)){
			out.println(true);
		}else{
			out.println(false);
		}
		out.flush();
		out.close();
	}
}





