<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
<script type="text/javascript" src="/demo/js/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
var max = 10,
	fn = function(x) {
		if (x > max) {
			console.log(x);
		}
	};

(function(f) {
	var max = 100;
	f(15);
})(fn)
</script>
</head>
<body>
<input onclick="sya()" value="click" id="cli">
</body>
</html>






--------
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
<script type="text/javascript" src="/demo/js/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
/*var 声明的变量,作用域是当前 function没有声明的变量,直接赋值的话,会自动创建变量但作用域是全局的.*/
var name = "The Window";
var object = {
	name : "My Object",
	getNameFunc : function() {
		return function() {
			return this.name;
		};
	}
};
//alert(object.getNameFunc()()); // The Window // 等价于 var f = object.getNameFunc(); f();


var name = "The Window";
var object = {
	name : "My Object",
	getNameFunc : function(){
		var that = this;
		return function(){
			return that.name;
		};
	}
};
//alert(object.getNameFunc()()); // My Object // 等价于 var f = object.getNameFunc(); f();
var f = object.getNameFunc();

f();



/*
你分开来看就看得清了：
object.getNameFunc()();
把它拆解开
var f = object.getNameFunc();
f();
你看，发现没，调用f()是直接调用的！形象一点说就是裸调用。这样调用f没有和任何对象绑定，因此f()内部默认绑定到全局对象，所以里面的this指向的就是全局对象。
如果我们改成下面这样：
var f = object.getNameFunc();
f.apply(object); // 绑定了哟！
那么 f 里面的this就会指向object了。
关键是理解 Javascript 中函数调用时的 this 绑定概念。这是 Javascript 非常特别的一点，很容易出错。
*/
/* var name = "The Window";
var object = {
	name : "My Object",
	getNameFunc : function() {
		alert(this.name);
		return function() {
			alert(this.name);
			return this.name;
		};
	}
}; */
//alert(object.getNameFunc()()); // 依次是:My Object,The Window
/* 
 等价于
var f = object.getNameFunc(); //My Object
alert("----");
f(); //The Window
*/


</script>
</head>
<body>
<input onclick="sya()" value="click" id="cli">
</body>
</html>