<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="zh-cn">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>Linux添加/删除用户和用户组 - 茄子_2008 - 博客园</title>
<link type="text/css" rel="stylesheet" href="/bundles/blog-common.css?v=MPHU_6XiwRKBps_JMy-p1nOSURHFA1eDz3OgfjnXnGk1"/>
<link id="MainCss" type="text/css" rel="stylesheet" href="/skins/StylePink/bundle-StylePink.css?v=LaTf1YlYqEyoPuFAcUNbhQnLDrGVyOd5U_ibaMAuOA81"/>
<link title="RSS" type="application/rss+xml" rel="alternate" href="http://www.cnblogs.com/xd502djj/rss"/>
<link title="RSD" type="application/rsd+xml" rel="EditURI" href="http://www.cnblogs.com/xd502djj/rsd.xml"/>
<link type="application/wlwmanifest+xml" rel="wlwmanifest" href="http://www.cnblogs.com/xd502djj/wlwmanifest.xml"/>
<script src="http://common.cnblogs.com/script/jquery.js" type="text/javascript"></script>  
<script type="text/javascript">var currentBlogApp = 'xd502djj', cb_enable_mathjax=false;</script>
<script src="/bundles/blog-common.js?v=nJDx8UubQZX9VogT9qEbaBjq1TmUREeH09Yin8VSvFo1" type="text/javascript"></script>
</head>
<body>
<a name="top"></a>
<!--PageBeginHtml Block Begin-->
<b>声明：现大部分文章为寻找问题时在网上相互转载，在此博客中做个记录，方便自己也方便有类似问题的朋友，故原出处已不好查到，如有侵权，请发邮件表明文章和原出处地址，我一定在文章中注明。谢谢。</b>
<!--PageBeginHtml Block End-->

<!--done-->
<div id="banner">
<!--done-->
<div class="header">
	<div class="headerText">
		<a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/xd502djj/">董俊杰</a><br>
		<div class="headerDis">xd502djj@163.com---识大势，懂取舍！分主次，懂先后！</div>
	</div>
</div>
</div>
<div id="main">
	<!-- right starts -->
	<div id="right">
		<div id="right_content">
			<DIV id="mystats">
				
					
<!--done-->
<div class="blogStats">
随笔- 305&nbsp;
文章- 0&nbsp;
评论- 43&nbsp;

</div>
				
			</DIV>
			<div id="mylinks">
<!--done-->
<a id="MyLinks1_HomeLink" class="menu" href="http://www.cnblogs.com/">博客园</a>&nbsp;&nbsp;<a id="MyLinks1_MyHomeLink" class="menu" href="http://www.cnblogs.com/xd502djj/">首页</a>&nbsp;&nbsp;<a id="MyLinks1_NewPostLink" class="menu" rel="nofollow" href="http://i.cnblogs.com/EditPosts.aspx?opt=1">新随笔</a>&nbsp;&nbsp;<a id="MyLinks1_ContactLink" accesskey="9" class="menu" rel="nofollow" href="http://space.cnblogs.com/msg/send/%e8%8c%84%e5%ad%90_2008">联系</a>&nbsp;&nbsp;<a id="MyLinks1_Admin" class="menu" rel="nofollow" href="http://i.cnblogs.com/">管理</a>&nbsp;&nbsp;<a id="MyLinks1_Syndication" class="menu" href="http://www.cnblogs.com/xd502djj/rss">订阅</a>&nbsp;<a id="MyLinks1_XMLLink" href="http://www.cnblogs.com/xd502djj/rss"><img src="http://www.cnblogs.com/images/xml.gif" alt="订阅" /></a></div>
			<div id="topics">
				

<!--done-->
<div class = "post">
	<div class = "postTitle">
		<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/xd502djj/archive/2011/11/23/2260094.html">Linux添加/删除用户和用户组</a>
	</div>
	<div id="cnblogs_post_body"><p>本文总结了Linux添加或者删除用户和用户组时常用的一些命令和参数。<br />1、建用户：<br />adduser phpq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //新建phpq用户<br />passwd phpq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //给phpq用户设置密码</p>
<p>2、建工作组<br />groupadd test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //新建test工作组</p>
<p>3、新建用户同时增加工作组<br />useradd -g test phpq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //新建phpq用户并增加到test工作组</p>
<p>注：：-g 所属组 -d 家目录 -s 所用的SHELL</p>
<p><br />4、给已有的用户增加工作组<br />usermod -G groupname username</p>
<p>或者：gpasswd -a user group</p>
<p>5、临时关闭：在/etc/shadow文件中属于该用户的行的第二个字段（密码）前面加上*就可以了。想恢复该用户，去掉*即可。</p>
<p>或者使用如下命令关闭用户账号：<br />passwd peter &ndash;l</p>
<p>重新释放：<br />passwd peter &ndash;u</p>
<p>6、永久性删除用户账号<br />userdel peter</p>
<p>groupdel peter</p>
<p>usermod &ndash;G peter peter&nbsp;&nbsp; （强制删除该用户的主目录和主目录下的所有文件和子目录）</p>
<p>7、从组中删除用户<br />编辑/etc/group 找到GROUP1那一行，删除 A<br />或者用命令<br />gpasswd -d A GROUP</p>
<p>8、显示用户信息<br />id user<br />cat /etc/passwd</p>
<p>更详细的用户和用户组的解说请参考<br />Linux 用户和用户组详细解说<br />本文主要讲述在Linux 系统中用户(user)和用户组(group)管理相应的概念；用户(user)和用户组(group)相关命令的列举；其中也对单用户多任务，多用户多任务也做以解说。</p>
<p>本篇文章来源于 PHP资讯 原文链接：<a href="http://www.phpq.net/linux/linux-add-delete-user-group.html">http://www.phpq.net/linux/linux-add-delete-user-group.html</a></p>
<p>&nbsp;</p>
<p>Linux 用户（user）和用户组（group）管理概述</p>
<p>&nbsp;</p>
<p>、理解Linux的单用户多任务，多用户多任务概念；<br /><br />Linux 是一个多用户、多任务的操作系统；我们应该了解单用户多任务和多用户多任务的概念；</p>
<p><span style="font-size: small;"><strong><br />1、Linux 的单用户多任务；<br /></strong></span><br />单用户多任务；比如我们以beinan 登录系统，进入系统后，我要打开gedit 来写文档，但在写文档的过程中，我感觉少点音乐，所以又打开xmms 来点音乐；当然听点音乐还不行，MSN 还得打开，想知道几个弟兄现在正在做什么，这样一样，我在用beinan 用户登录时，执行了gedit 、xmms以及msn等，当然还有输入法fcitx ；这样说来就有点简单了，一个beinan用户，为了完成工作，执行了几个任务；当然beinan这个用户，其它的人还能以远程登录过来，也能做其它的工作。</p>
<p><span style="font-size: small;"><strong><br />2、Linux 的多用户、多任务；<br /></strong></span></p>
<p>有时可能是很多用户同时用同一个系统，但并不所有的用户都一定都要做同一件事，所以这就有多用户多任务之说；</p>
<p>举个例子，比如LinuxSir.Org 服务器，上面有FTP 用户、系统管理员、web 用户、常规普通用户等，在同一时刻，可能有的弟兄正在访问论坛；有的可能在上传软件包管理子站，比如luma 或Yuking 兄在管理他们的主页系统和FTP ；在与此同时，可能还会有系统管理员在维护系统；浏览主页的用的是nobody 用户，大家都用同一个，而上传软件包用的是FTP用户；管理员的对系统的维护或查看，可能用的是普通帐号或超级权限root帐号；<strong>不同用户所具有的权限也不同，要完成不同的任务得需要不同的用户</strong>，也可以说<strong>不同的用户，可能完成的工作也不一样</strong>；</p>
<p>值得注意的是：多用户多任务并不是大家同时挤到一接在一台机器的的键盘和显示器前来操作机器，多用户可能通过远程登录来进行，比如对服务器的远程控制，只要有用户权限任何人都是可以上去操作或访问的；</p>
<p><span style="font-size: small;"><strong><br />3、用户的角色区分；<br /></strong></span></p>
<p>用户在系统中是分角色的，在Linux 系统中，由于角色不同，权限和所完成的任务也不同；值得注意的是用户的角色是通过UID和识别的，特别是UID；在系统管理中，系统管理员一定要坚守UID 唯一的特性；</p>
<p>root 用户：系统唯一，是真实的，可以登录系统，可以操作系统任何文件和命令，拥有最高权限；<br />虚拟用户：这类用户也被称之为伪用户或假用户，与真实用户区分开来，这类用户不具有登录系统的能力，但却是系统运行不可缺少的用户，比如bin、daemon、adm、ftp、mail等；这类用户都系统自身拥有的，而非后来添加的，当然我们也可以添加虚拟用户；<br />普通真实用户：这类用户能登录系统，但只能操作自己家目录的内容；权限有限；这类用户都是系统管理员自行添加的；</p>
<p><span style="font-size: small;"><strong><br />4、多用户操作系统的安全；<br /></strong></span></p>
<p>多用户系统从事实来说对系统管理更为方便。从安全角度来说，多用户管理的系统更为安全，比如beinan用户下的某个文件不想让其它用户看到，只是设置一下文件的权限，只有beinan一个用户可读可写可编辑就行了，这样一来只有beinan一个用户可以对其私有文件进行操作，Linux 在多用户下表现最佳，Linux能很好的保护每个用户的安全，但我们也得学会Linux 才是，再安全的系统，如果没有安全意识的管理员或管理技术，这样的系统也不是安全的。</p>
<p>从服务器角度来说，多用户的下的系统安全性也是最为重要的，我们常用的Windows 操作系统，它在系纺权限管理的能力只能说是一般般，根本没有没有办法和Linux或Unix 类系统相比；</p>
<p><span style="font-size: medium;"><strong><br />二、用户(user）和用户组（group）概念；<br /></strong></span><br /><span style="font-size: small;"><strong><br />1、用户（user）的概念；<br /></strong></span><br />通过前面对Linux 多用户的理解，我们明白Linux 是真正意义上的多用户操作系统，所以我们能在Linux系统中建若干用户（user）。比如我们的同事想用我的计算机，但我不想让他用我的用户名登录，因为我的用户名下有不想让别人看到的资料和信息（也就是隐私内容）这时我就可以给他建一个新的用户名，让他用我所开的用户名去折腾，这从计算机安全角度来说是符合操作规则的；</p>
<p>当然用户（user）的概念理解还不仅仅于此，在Linux系统中还有一些用户是用来完成特定任务的，比如nobody和ftp 等，我们访问LinuxSir.Org 的网页程序，就是nobody用户；我们匿名访问ftp 时，会用到用户ftp或nobody ；如果您想了解Linux系统的一些帐号，请查看 /etc/passwd ；</p>
<p><span style="font-size: small;"><strong><br />2、用户组（group）的概念；<br /></strong></span><br />用户组（group）就是具有相同特征的用户（user）的集合体；比如有时我们要让多个用户具有相同的权限，比如查看、修改某一文件或执行某个命令，这时我们需要用户组，我们把用户都定义到同一用户组，我们通过修改文件或目录的权限，让用户组具有一定的操作权限，这样用户组下的用户对该文件或目录都具有相同的权限，这是我们通过定义组和修改文件的权限来实现的；</p>
<p>举例：我们为了让一些用户有权限查看某一文档，比如是一个时间表，而编写时间表的人要具有读写执行的权限，我们想让一些用户知道这个时间表的内容，而不让他们修改，所以我们可以把这些用户都划到一个组，然后来修改这个文件的权限，让用户组可读，这样用户组下面的每个用户都是可读的；<br /><strong><br />用户和用户组的对应关系是：一对一、多对一、一对多或多对多；<br /></strong><br />一对一：某个用户可以是某个组的唯一成员；<br />多对一：多个用户可以是某个唯一的组的成员，不归属其它用户组；比如beinan和linuxsir两个用户只归属于beinan用户组；<br />一对多：某个用户可以是多个用户组的成员；比如beinan可以是root组成员，也可以是linuxsir用户组成员，还可以是adm用户组成员；<br />多对多：多个用户对应多个用户组，并且几个用户可以是归属相同的组；其实多对多的关系是前面三条的扩展；理解了上面的三条，这条也能理解；</p>
<p><span style="font-size: medium;"><strong><br />三、用户（user）和用户组（group）相关的配置文件、命令或目录；<br /></strong></span><br /><span style="font-size: small;"><strong><br />1、与用户（user）和用户组（group）相关的配置文件；<br /></strong></span></p>
<p><span style="font-size: x-small;"><strong><br />1）与用户（user）相关的配置文件；<br /></strong></span></p>
<p>/etc/passwd 注：用户（user）的配置文件；<br />/etc/shadow 注：用户（user）影子口令文件；</p>
<p><span style="font-size: x-small;"><strong><br />2）与用户组（group）相关的配置文件；<br /></strong></span><br />/etc/group 注：用户组（group）配置文件；<br />/etc/gshadow 注：用户组（group）的影子文件；</p>
<p><span style="font-size: small;"><strong><br />2、管理用户（user）和用户组（group）的相关工具或命令；<br /></strong></span><br /><span style="font-size: x-small;"><strong><br />1）管理用户（user）的工具或命令；<br /></strong></span></p>
<div class="codeblock"><code>useradd&nbsp;&nbsp;&nbsp; 注：添加用户 <br />adduser&nbsp;&nbsp;&nbsp; 注：添加用户<br />passwd&nbsp;&nbsp;&nbsp;&nbsp; 注：为用户设置密码<br />usermod&nbsp; 注：修改用户命令，可以通过usermod 来修改登录名、用户的家目录等等；<br />pwcov&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：同步用户从/etc/passwd 到/etc/shadow <br />pwck&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：pwck是校验用户配置文件/etc/passwd 和/etc/shadow 文件内容是否合法或完整；<br />pwunconv&nbsp; 注：是pwcov 的立逆向操作，是从/etc/shadow和 /etc/passwd 创建/etc/passwd ，然后会删除 /etc/shadow 文件；<br />finger&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：查看用户信息工具<br />id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：查看用户的UID、GID及所归属的用户组<br />chfn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：更改用户信息工具<br />su&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：用户切换工具<br />sudo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：sudo 是通过另一个用户来执行命令（execute a command as another user），su 是用来切换用户，然后通过切换到的用户来完成相应的任务，但sudo 能后面直接执行命令，比如sudo 不需要root 密码就可以执行root 赋与的执行只有root才能执行相应的命令；但得通过visudo 来编辑/etc/sudoers来实现；<br />visudo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：visodo 是编辑 /etc/sudoers 的命令；也可以不用这个命令，直接用vi 来编辑 /etc/sudoers 的效果是一样的；<br />sudoedit&nbsp; 注：和sudo 功能差不多；</code></div>
<p><br /><span style="font-size: x-small;"><strong><br />2）管理用户组（group）的工具或命令；<br /></strong></span></p>
<div class="codeblock"><code>groupadd&nbsp; 注：添加用户组；<br />groupdel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：删除用户组；<br />groupmod&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：修改用户组信息<br />groups&nbsp;&nbsp;&nbsp;&nbsp; 注：显示用户所属的用户组<br />grpck<br />grpconv&nbsp;&nbsp; 注：通过/etc/group和/etc/gshadow 的文件内容来同步或创建/etc/gshadow ，如果/etc/gshadow 不存在则创建；<br />grpunconv&nbsp;&nbsp; 注：通过/etc/group 和/etc/gshadow 文件内容来同步或创建/etc/group ，然后删除gshadow文件；</code></div>
<p>&nbsp;</p>
<p><span style="font-size: small;"><strong><br />3、/etc/skel 目录；<br /></strong></span><br />/etc/skel目录一般是存放用户启动文件的目录，这个目录是由root权限控制，当我们添加用户时，这个目录下的文件自动复制到新添加的用户的家目录下；/etc/skel 目录下的文件都是隐藏文件，也就是类似.file格式的；我们可通过修改、添加、删除/etc/skel目录下的文件，来为用户提供一个统一、标准的、默认的用户环境；</p>
<div class="codeblock"><code>[root@localhost beinan]# ls -la /etc/skel/<br />总用量 92<br />drwxr-xr-x&nbsp;&nbsp;&nbsp; 3 root root&nbsp; 4096&nbsp; 8月 11 23:32 .<br />drwxr-xr-x&nbsp; 115 root root 12288 10月 14 13:44 ..<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp;&nbsp;&nbsp; 24&nbsp; 5月 11 00:15 .bash_logout<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp;&nbsp; 191&nbsp; 5月 11 00:15 .bash_profile<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp;&nbsp; 124&nbsp; 5月 11 00:15 .bashrc<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp; 5619 2005-03-08&nbsp; .canna<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp;&nbsp; 438&nbsp; 5月 18 15:23 .emacs<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp;&nbsp; 120&nbsp; 5月 23 05:18 .gtkrc<br />drwxr-xr-x&nbsp;&nbsp;&nbsp; 3 root root&nbsp; 4096&nbsp; 8月 11 23:16 .kde<br />-rw-r--r--&nbsp;&nbsp;&nbsp; 1 root root&nbsp;&nbsp; 658 2005-01-17&nbsp; .zshrc</code></div>
<p>&nbsp;</p>
<p>/etc/skel 目录下的文件，一般是我们用useradd 和adduser 命令添加用户（user）时，系统自动复制到新添加用户（user）的家目录下；如果我们通过修改 /etc/passwd 来添加用户时，我们可以自己创建用户的家目录，然后把/etc/skel 下的文件复制到用户的家目录下，然后要用chown 来改变新用户家目录的属主；<br /><span style="font-size: small;"><strong><br />4、/etc/login.defs 配置文件；<br /></strong></span><br />/etc/login.defs 文件是当创建用户时的一些规划，比如创建用户时，是否需要家目录，UID和GID的范围；用户的期限等等，这个文件是可以通过root来定义的；</p>
<p>比如Fedora 的 /etc/logins.defs 文件内容；</p>
<div class="codeblock"><code># *REQUIRED*<br />#&nbsp;&nbsp; Directory where mailboxes reside, _or_ name of file, relative to the<br />#&nbsp;&nbsp; home directory.&nbsp; If you _do_ define both, MAIL_DIR takes precedence.<br />#&nbsp;&nbsp; QMAIL_DIR is for Qmail<br />#<br />#QMAIL_DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maildir<br />MAIL_DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /var/spool/mail&nbsp; 注：创建用户时，要在目录/var/spool/mail中创建一个用户mail文件；<br />#MAIL_FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .mail<br /><br /># Password aging controls:<br />#<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PASS_MAX_DAYS&nbsp;&nbsp; Maximum number of days a password may be used.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PASS_MIN_DAYS&nbsp;&nbsp; Minimum number of days allowed between password changes.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PASS_MIN_LEN&nbsp;&nbsp;&nbsp; Minimum acceptable password length.<br />#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PASS_WARN_AGE&nbsp;&nbsp; Number of days warning given before a password expires.<br />#<br />PASS_MAX_DAYS&nbsp;&nbsp; 99999&nbsp;&nbsp; 注：用户的密码不过期最多的天数；<br />PASS_MIN_DAYS&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：密码修改之间最小的天数；<br />PASS_MIN_LEN&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：密码最小长度；<br />PASS_WARN_AGE&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 注：<br /><br />#<br /># Min/max values for automatic uid selection in useradd<br />#<br />UID_MIN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 500&nbsp; 注：最小UID为500 ，也就是说添加用户时，UID 是从500开始的；<br />UID_MAX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 60000&nbsp;&nbsp; 注：最大UID为60000；<br /><br />#<br /># Min/max values for automatic gid selection in groupadd<br />#<br />GID_MIN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 500&nbsp;&nbsp; 注：GID 是从500开始；<br />GID_MAX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 60000<br /><br />#<br /># If defined, this command is run when removing a user.<br /># It should remove any at/cron/print jobs etc. owned by<br /># the user to be removed (passed as the first argument).<br />#<br />#USERDEL_CMD&nbsp;&nbsp;&nbsp; /usr/sbin/userdel_local<br /><br />#<br /># If useradd should create home directories for users by default<br /># On RH systems, we do. This option is ORed with the -m flag on<br /># useradd command line.<br />#<br />CREATE_HOME&nbsp;&nbsp;&nbsp;&nbsp; yes&nbsp;&nbsp; 注：是否创用户家目录，要求创建；</code></div>
<p>&nbsp;</p>
<p><span style="font-size: small;"><strong><br />5、/etc/default/useradd 文件；<br /></strong></span></p>
<p>通过useradd 添加用户时的规则文件；</p>
<div class="codeblock"><code># useradd defaults file<br />GROUP=100<br />HOME=/home&nbsp; 注：把用户的家目录建在/home中；<br />INACTIVE=-1&nbsp; 注：是否启用帐号过期停权，-1表示不启用；<br />EXPIRE=&nbsp;&nbsp; 注：帐号终止日期，不设置表示不启用；<br />SHELL=/bin/bash&nbsp; 注：所用SHELL的类型；<br />SKEL=/etc/skel&nbsp;&nbsp; 注： 默认添加用户的目录默认文件存放位置；也就是说，当我们用adduser添加用户时，用户家目录下的文件，都是从这个目录中复制过去的； </code></div>
<p>&nbsp;</p>
<p><span style="font-size: medium;"><strong><br />后记：<br /></strong></span></p>
<p>关于用户（user）和用户组（group）管理内容大约就是这么多；只要把上面所说的内容了解和掌握，用户（user）和用户组（group）管理就差不多了；由于用户（user）和用户组（group）是和文件及目录权限联系在一起的，所以文件及目录权限的操作也会独立成文来给大家介绍；</p>
<p>摘自 <a href="http://fedora.linuxsir.org/main/?q=node/91">http://fedora.linuxsir.org/main/?q=node/91</a></p></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory"></div>
<div id="EntryTag"></div>
<div id="blog_post_info">
</div>
<div class="clear"></div>
<div id="post_next_prev"></div>
</div>


	<div class = "postDesc">posted on <span id="post-date">2011-11-23 12:55</span> <a href='http://www.cnblogs.com/xd502djj/'>茄子_2008</a> 阅读(<span id="post_view_count">...</span>) 评论(<span id="post_comment_count">...</span>)  <a href ="http://i.cnblogs.com/EditPosts.aspx?postid=2260094" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(2260094);return false;">收藏</a></div>
</div>
<script type="text/javascript">var allowComments=true,isLogined=false,cb_blogId=48738,cb_entryId=2260094,cb_blogApp=currentBlogApp,cb_blogUserGuid='0a05470b-63cf-dd11-9e4d-001cf0cd104b',cb_entryCreatedDate='2011/11/23 12:55:00';loadViewCount(cb_entryId);</script>

<a name="!comments"></a><div id="blog-comments-placeholder"></div><script type="text/javascript">var commentManager = new blogCommentManager();commentManager.renderComments(0);</script>
<div id="comment_form" class="commentform">
<a name="commentform"></a>
<div id="divCommentShow"></div>
<div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" id="lnk_RefreshComments" onclick="return RefreshCommentList();">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
<div id="comment_form_container"></div>
<div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
<div id="site_nav_under"><a href="http://www.cnblogs.com/" target="_blank" title="开发者的网上家园">博客园首页</a><a href="http://q.cnblogs.com/" target="_blank" title="程序员问答社区">博问</a><a href="http://news.cnblogs.com/" target="_blank" title="IT新闻">新闻</a><a href="http://home.cnblogs.com/ing/" target="_blank">闪存</a><a href="http://job.cnblogs.com/" target="_blank">程序员招聘</a><a href="http://kb.cnblogs.com/" target="_blank">知识库</a></div>
<div id="opt_under_post"></div>
<script type="text/javascript">
    var enableGoogleAd = canShowAdsense(); var googletag = googletag || {}; googletag.cmd = googletag.cmd || [];
    fixPostBodyFormat();
</script>
<div id="ad_under_post_holder">
<script type='text/javascript'>
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        if (enableGoogleAd) {
            var gads = document.createElement('script');
            gads.async = true;
            gads.type = 'text/javascript';
            var useSSL = 'https:' == document.location.protocol;
            gads.src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
            var node = document.getElementsByTagName('script')[0];
            node.parentNode.insertBefore(gads, node);
        }
    })();
</script>
<script type='text/javascript'>
    try {
        if (enableGoogleAd) {
            googletag.cmd.push(function () {
                googletag.defineSlot('/1090369/cnblogs_blogpost_C1_sitehome', [300, 250], 'div-gpt-ad-1346480159711-0').addService(googletag.pubads());
                googletag.defineSlot('/1090369/cnblogs_blogpost_C2', [468, 60], 'div-gpt-ad-1410860226396-0').addService(googletag.pubads());
                googletag.pubads().enableSingleRequest();
                googletag.enableServices();
            });
        };
    } catch (e) { }
</script>
<div id="google_ad_c1" class="c_ad_block">
    <div id='div-gpt-ad-1346480159711-0' style='width:300px; height:250px;'>
    <script type='text/javascript'>
        try {
            if (enableGoogleAd) {
                googletag.cmd.push(function () { googletag.display('div-gpt-ad-1346480159711-0'); });            
            } else {
                $('#div-gpt-ad-1346480159711-0').hide();
            }
    } catch (e) { }
    </script>
    </div>
</div>
</div>
<div id="under_post_news"></div>
<div id="google_ad_c2" class="c_ad_block">
<div id='div-gpt-ad-1410860226396-0' style='width:468px; height:60px;'>
<script type='text/javascript'>
try {
    if (enableGoogleAd) {
        googletag.cmd.push(function () { googletag.display('div-gpt-ad-1410860226396-0'); });
    } else {
        $('#div-gpt-ad-1346480159711-0').hide();
    }
} catch (e) { }
</script>
</div>
</div>
<div id="under_post_kb"></div>
<div id="HistoryToday" class="c_ad_block"></div>
<script type="text/javascript">
$(function () {
    loadNewsAndKb();
    loadBlogSignature();
    LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
    GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate);
    loadOptUnderPost();
    GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    setTimeout(function () { incrementViewCount(cb_entryId); }, 200);
});
</script>
</div>

			</div>
		</div>
	</div>
	<!-- right ends -->
	<!-- left starts -->
	<div id="left">
		<!-- 左侧工具部分 -->
		<div id="left_content">
			<div id="calendar"><div id="blog-calendar" style="display:none"></div><script type="text/javascript">loadBlogDefaultCalendar();</script></div>
			
<!--done-->
<!-- <h1 class="listtitle">公告</h1> -->
<div class="newsItem">
	<div id="blog-news"></div><script type="text/javascript">loadBlogNews();</script>
</div>

			
				<DIV id="leftcontentcontainer">
					<div id="blog-sidecolumn"></div><script type="text/javascript">loadBlogSideColumn();</script>
				</DIV>
			
		</div>
		<!-- //右侧工具部分 -->
	</div>
	<!-- left ends -->	
	<div class="clear"></div>
</div>
<div id="footer">
	
<!--done-->
Copyright &copy;2014 茄子_2008
</div>

<!--PageEndHtml Block Begin-->
<b>声明：现大部分文章为寻找问题时在网上相互转载，在此博客中做个记录，方便自己也方便有类似问题的朋友，故原出处已不好查到，如有侵权，请发邮件表明文章和原出处地址，我一定在文章中注明。谢谢。</b>
<!--PageEndHtml Block End-->
</body>
</html>
