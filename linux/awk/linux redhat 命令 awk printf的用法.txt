awk里面的BEGIN，END结构：
BEGIN和END中的语句分别在开始读取文件(in_file)之前和读取完文件之后发挥作用，可以理解为初始化和扫尾。
-----------------
文件sx如下：
梁燕东:001:1080
顾玉建:002:1024
沈波波:003:2024
-----------------
输入命令如下：
awk 'BEGIN {FS=":";print "统计销售金额";total=0}{print $3;total=total+$3} END{printf "销售金额总计:%.2f\n",total}' sx
-----------------
结果如下：
统计销售金额
1080
1024
2024
销售金额总计:4128.00
-----------------
累计销售文件xs中的销售金额
BEGIN和END:
在Unix awk中两个特别的表达式，BEGIN和END，这两者都可用于pattern中（参考前面的awk语法），提供BEGIN和END的作用是给程序赋予初始状态和在程序结束之后执行一些扫尾的工作。
任何在BEGIN之后列出的操作（在{}内）将在Unix awk开始扫描输入之前执行，而END之后列出的操作将在扫描完全部的输入之后执行。因此，通常使用BEGIN来显示变量和预置（初始化）
变量，使用END来输出最终结果。
在这里，BEGIN预置了内部变量FS（字段分隔符）和自定义变量total,同时在扫描之前显示出输出行头。而END则在扫描完成后打印出总合计。











