From: <ÓÉ Windows Internet Explorer 8 ±£´æ>
Subject: =?gb2312?B?08NNYXZlbrm5vahKYXZhIFdlYr+qt6K7t76zo6hKZXR0ecjdxvejqdau0rs=?=
	=?gb2312?B?IC0g1ebKx774vNG1xM23z/GwoaOswabBv9S01LSyu7bPtdjTv8nP?=
	=?gb2312?B?wLSjoSAtIElUZXllvLzK9c341b4=?=
Date: Sun, 18 Aug 2013 15:33:32 +0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0026_01CE9C28.4B8A68F0"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5931

This is a multi-part message in MIME format.

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: base64
Content-Location: http://sarin.iteye.com/blog/784275

77u/PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlv
bmFsLy9FTiIgImh0dHA6Ly93d3cudzNjLm9yZy9UUi8xOTk5L1JFQy1odG1sNDAxLTE5OTkxMjI0
L2xvb3NlLmR0ZCI+DQo8SFRNTCBkaXI9bHRyIHhtbDpsYW5nPSJ6aC1DTiIgDQp4bWxucz0iaHR0
cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+PEhFQUQ+PFRJVExFPueUqE1hdmVu5p6E5bu6SmF2
YSBXZWLlvIDlj5Hnjq/looPvvIhKZXR0eeWuueWZqO+8ieS5i+S4gCAtIOecn+aYr+e7neS9s+ea
hOWktOWDj+WViu+8jOWKm+mHj+a6kOa6kOS4jeaWreWcsOa2jOS4iuadpe+8gSAtIElUZXll5oqA
5pyv572R56uZPC9USVRMRT4NCjxNRVRBIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYt
OCIgaHR0cC1lcXVpdj1Db250ZW50LVR5cGU+DQo8TUVUQSBuYW1lPWRlc2NyaXB0aW9uIA0KY29u
dGVudD0iJm5ic3A7Jm5ic3A7Jm5ic3A7IE1hdmVu5piv5p6E5bu6SmF2YeW6lOeUqOeahOS8mOen
gOeuoeeQhuW3peWFt++8jOaYr0FwYWNoZei9r+S7tuWfuumHkeS8mueahOmhtue6p+mhueebruOA
guWFtuWFt+acieW8gOWPkeebruW9leaehOW7uuWSjOeuoeeQhu+8jOe7n+S4gOeuoeeQhuesrOS4
ieaWueS+nei1lu+8jOe8luivke+8jOa1i+ivle+8jOaJk+WMhe+8jOWPkeW4g+etieWKn+iDveOA
guacgOWkp+eahOeJueeCueimgeaVsOesrOS4ieaWueS+nei1lueuoeeQhuS6hu+8jOWboOS4uuWF
tuWug+WKn+iDvemDveiDveS7jkFudOS4reaJvuWIsOi4quW9seOAguS7peW+gOavj+S4qumhueeb
rueLrOeri+euoeeQhuS+nei1lu+8jOS9v+W+l+avj+S4qumhueebruaJk+WMheWQjumDveaYr+W3
qOWkp+aXoOavlOeahO+8jOiAjOecn+ato+eahOeoi+W6j+aWh+S7tuWNtOayoeacieWkmuWwke+8
jE1hdmVu5o6l566h56ys5LiJ5pa55L6d6LWW5ZCO77yM5oiR5Lus55qE5bqU55So5bCx5Y+q5pyJ
56iL5bqP5paH5Lu25LqG77yM5rKh5pyJ5LqGamFy5YyF6L275ben5b6I5aSa77yM6ICMIC4uLiI+
DQo8TUVUQSBuYW1lPWtleXdvcmRzIA0KY29udGVudD0ibWF2ZW4sIFdlYiwgSmF2YSwg6aG555uu
566h55CGLCDlupTnlKjmnI3liqHlmagg55SoTWF2ZW7mnoTlu7pKYXZhIFdlYuW8gOWPkeeOr+Wi
g++8iEpldHR55a655Zmo77yJ5LmL5LiAIj48TElOSyANCnJlbD0ic2hvcnRjdXQgaWNvbiIgdHlw
ZT1pbWFnZS94LWljb24gaHJlZj0iL2ltYWdlcy9mYXZpY29uLmljbyI+PExJTksgDQp0aXRsZT1J
VGV5ZSByZWw9c2VhcmNoIHR5cGU9YXBwbGljYXRpb24vb3BlbnNlYXJjaGRlc2NyaXB0aW9uK3ht
bCANCmhyZWY9Ii9vcGVuX3NlYXJjaC54bWwiPjxMSU5LIHRpdGxlPeecn+aYr+e7neS9s+eahOWk
tOWDj+WViu+8jOWKm+mHj+a6kOa6kOS4jeaWreWcsOa2jOS4iuadpe+8gSByZWw9YWx0ZXJuYXRl
IA0KdHlwZT1hcHBsaWNhdGlvbi9yc3MreG1sIGhyZWY9Ii9yc3MiPjxMSU5LIHJlbD1zdHlsZXNo
ZWV0IHR5cGU9dGV4dC9jc3MgDQpocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9zdHlsZXNoZWV0
cy9ibG9nLmNzcz8xMzc0MDUyOTE4IiBtZWRpYT1zY3JlZW4+PExJTksgDQpyZWw9c3R5bGVzaGVl
dCB0eXBlPXRleHQvY3NzIA0KaHJlZj0iaHR0cDovL3d3dy5pdGV5ZS5jb20vc3R5bGVzaGVldHMv
dGhlbWVzL2Jsb2cvYmx1ZS5jc3M/MTMyNjE5MTMyNiIgDQptZWRpYT1zY3JlZW4+DQo8U0NSSVBU
IHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9qYXZhc2Ny
aXB0cy9hcHBsaWNhdGlvbi5qcz8xMzU4MjE0NTE4Ij48L1NDUklQVD4NCg0KPFNDUklQVCB0eXBl
PXRleHQvamF2YXNjcmlwdD4KCiAgdmFyIF9nYXEgPSBfZ2FxIHx8IFtdOwogIF9nYXEucHVzaChb
J19zZXRBY2NvdW50JywgJ1VBLTUzNTYwNS0xJ10pOwogIF9nYXEucHVzaChbJ19zZXREb21haW5O
YW1lJywgJ2l0ZXllLmNvbSddKTsKICBfZ2FxLnB1c2goWydfdHJhY2tQYWdldmlldyddKTsKCiAg
KGZ1bmN0aW9uKCkgewogICAgdmFyIGdhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0
Jyk7IGdhLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsgZ2EuYXN5bmMgPSB0cnVlOwogICAgZ2Eu
c3JjID0gKCdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8v
c3NsJyA6ICdodHRwOi8vd3d3JykgKyAnLmdvb2dsZS1hbmFseXRpY3MuY29tL2dhLmpzJzsKICAg
IHZhciBzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOyBzLnBh
cmVudE5vZGUuaW5zZXJ0QmVmb3JlKGdhLCBzKTsKICB9KSgpOwoKPC9TQ1JJUFQ+DQo8TElOSyBy
ZWw9c3R5bGVzaGVldCB0eXBlPXRleHQvY3NzIA0KaHJlZj0iaHR0cDovL3d3dy5pdGV5ZS5jb20v
amF2YXNjcmlwdHMvc3ludGF4aGlnaGxpZ2h0ZXIvU3ludGF4SGlnaGxpZ2h0ZXIuY3NzPzEzNDg4
MTk5NTMiIA0KbWVkaWE9c2NyZWVuPg0KPFNDUklQVCB0eXBlPXRleHQvamF2YXNjcmlwdCANCnNy
Yz0iaHR0cDovL3d3dy5pdGV5ZS5jb20vamF2YXNjcmlwdHMvc3ludGF4aGlnaGxpZ2h0ZXIvc2hD
b3JlQ29tbW9uLmpzPzEzMjU5MDczMzMiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9q
YXZhc2NyaXB0IA0Kc3JjPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9qYXZhc2NyaXB0cy9ob3RrZXku
anM/MTMyNDk5NDMwMyI+PC9TQ1JJUFQ+DQoNCjxTQ1JJUFQgdHlwZT10ZXh0L2phdmFzY3JpcHQg
DQpzcmM9Imh0dHA6Ly93d3cuaXRleWUuY29tL2phdmFzY3JpcHRzL2NvZGVfZmF2b3JpdGVzLmpz
PzEzNTgyMTQ1MTgiPjwvU0NSSVBUPg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0IA0K
c3JjPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9qYXZhc2NyaXB0cy93ZWlib3NoYXJlLmpzPzEzMjQ5
OTQzMDMiPjwvU0NSSVBUPg0KDQo8TUVUQSBuYW1lPUdFTkVSQVRPUiBjb250ZW50PSJNU0hUTUwg
OC4wMC42MDAxLjE4NzAyIj48L0hFQUQ+DQo8Qk9EWT4NCjxESVYgaWQ9aGVhZGVyPg0KPERJViBp
ZD1ibG9nX3NpdGVfbmF2PjxBIGNsYXNzPWhvbWVwYWdlIGhyZWY9Imh0dHA6Ly93d3cuaXRleWUu
Y29tLyI+6aaW6aG1PC9BPiA8QSANCmhyZWY9Imh0dHA6Ly93d3cuaXRleWUuY29tL25ld3MiPui1
hOiurzwvQT4gPEEgDQpocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9tYWdhemluZXMiPueyvuWN
jjwvQT4gPEEgDQpocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9mb3J1bXMiPuiuuuWdmzwvQT4g
PEEgDQpocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9hc2siPumXruetlDwvQT4gPEEgDQpocmVm
PSJodHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9ncyI+5Y2a5a6iPC9BPiA8QSANCmhyZWY9Imh0dHA6
Ly93d3cuaXRleWUuY29tL2Jsb2dzL3N1YmplY3RzIj7kuJPmoI88L0E+IDxBIA0KaHJlZj0iaHR0
cDovL3d3dy5pdGV5ZS5jb20vZ3JvdXBzIj7nvqTnu4Q8L0E+IDxBIGlkPW1zbmEgb25jbGljaz0i
cmV0dXJuIGZhbHNlOyIgDQpocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvNzg0Mjc1
IyI+PFU+5pu05aSaPC9VPiA8U01BTEw+4pa8PC9TTUFMTD48L0E+IA0KPERJViBzdHlsZT0iRElT
UExBWTogbm9uZSIgY2xhc3M9cXVpY2tfbWVudT48QSBocmVmPSJodHRwOi8vam9iLml0ZXllLmNv
bS9pdGV5ZSIgDQp0YXJnZXQ9X2JsYW5rPuaLm+iBmDwvQT4gPEEgaHJlZj0iaHR0cDovL3d3dy5p
dGV5ZS5jb20vc2VhcmNoIj7mkJzntKI8L0E+IDwvRElWPjwvRElWPg0KPERJViBpZD11c2VyX25h
dj48QSBjbGFzcz13ZWxjb21lIHRpdGxlPeeZu+W9lSANCmhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5
ZS5jb20vbG9naW4iPuaCqOi/mOacqueZu+W9lSAhPC9BPiA8QSANCmhyZWY9Imh0dHA6Ly9zYXJp
bi5pdGV5ZS5jb20vbG9naW4iPueZu+W9lTwvQT4gPEEgY2xhc3M9bm9iZyANCmhyZWY9Imh0dHA6
Ly9zYXJpbi5pdGV5ZS5jb20vc2lnbnVwIj7ms6jlhow8L0E+IDwvRElWPjwvRElWPg0KPERJViBp
ZD1wYWdlPg0KPERJViBpZD1icmFuZGluZyBjbGFzcz1jbGVhcmZpeD4NCjxESVYgaWQ9YmxvZ19u
YW1lPg0KPEgxPjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vIj7nnJ/mmK/nu53kvbPn
moTlpLTlg4/llYrvvIzlipvph4/mupDmupDkuI3mlq3lnLDmtozkuIrmnaXvvIE8L0E+PC9IMT48
L0RJVj4NCjxESVYgaWQ9ZmQ+PC9ESVY+DQo8RElWIGlkPWJsb2dfbmF2YmFyPg0KPFVMPg0KICA8
TEkgY2xhc3M9YmxvZ19uYXZiYXJfZm9yPjxBIA0KICBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUu
Y29tLyI+PFNUUk9ORz7ljZrlrqI8L1NUUk9ORz48L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0
dHA6Ly9zYXJpbi5pdGV5ZS5jb20vd2VpYm8iPuW+ruWNmjwvQT48L0xJPg0KICA8TEk+PEEgaHJl
Zj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9hbGJ1bSI+55u45YaMPC9BPjwvTEk+DQogIDxMST48
QSBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2xpbmsiPuaUtuiXjzwvQT48L0xJPg0KICA8
TEk+PEEgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9ibG9nL2d1ZXN0X2Jvb2siPueVmeio
gDwvQT48L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9ibG9nL3By
b2ZpbGUiPuWFs+S6juaIkTwvQT48L0xJPjwvVUw+DQo8RElWIGNsYXNzPXNlYXJjaD4NCjxGT1JN
IG1ldGhvZD1nZXQgYWN0aW9uPS9ibG9nL3NlYXJjaD48SU5QVVQgDQpzdHlsZT0iV0lEVEg6IDEx
MHB4OyBNQVJHSU4tTEVGVDogMTBweCIgaWQ9cXVlcnkgY2xhc3M9c2VhcmNoX3RleHQgdHlwZT10
ZXh0IA0KbmFtZT1xdWVyeT4gPElOUFVUIGNsYXNzPXN1Ym1pdF9zZWFyY2ggdHlwZT1zdWJtaXQ+
IDwvRk9STT48L0RJVj4NCjxESVYgaWQ9ZmQ+PC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGlkPWNv
bnRlbnQgY2xhc3M9Y2xlYXJmaXg+DQo8RElWIGlkPW1haW4+DQo8RElWIGNsYXNzPWJsb2dfbWFp
bj4NCjxESVYgY2xhc3M9YmxvZ190aXRsZT4NCjxIMz48QSBocmVmPSJodHRwOi8vc2FyaW4uaXRl
eWUuY29tL2Jsb2cvNzg0Mjc1Ij7nlKhNYXZlbuaehOW7ukphdmEgDQpXZWLlvIDlj5Hnjq/looPv
vIhKZXR0eeWuueWZqO+8ieS5i+S4gDwvQT4gPEVNIGNsYXNzPWFjdGlvbnM+PC9FTT48L0gzPg0K
PFVMIGNsYXNzPWJsb2dfY2F0ZWdvcmllcz48U1RST05HPuWNmuWuouWIhuexu++8mjwvU1RST05H
PiANCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vY2F0ZWdvcnkvOTM1NzEi
Puenr+WwkeaIkOWkmjwvQT48L0xJPjwvVUw+DQo8RElWIGNsYXNzPW5ld3NfdGFnPjxBIGhyZWY9
Imh0dHA6Ly93d3cuaXRleWUuY29tL2Jsb2dzL3RhZy9tYXZlbiI+bWF2ZW48L0E+PEEgDQpocmVm
PSJodHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9ncy90YWcvV2ViIj5XZWI8L0E+PEEgDQpocmVmPSJo
dHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9ncy90YWcvSmF2YSI+SmF2YTwvQT48QSANCmhyZWY9Imh0
dHA6Ly93d3cuaXRleWUuY29tL2Jsb2dzL3RhZy8lRTklQTElQjklRTclOUIlQUUlRTclQUUlQTEl
RTclOTAlODYiPumhueebrueuoeeQhjwvQT48QSANCmhyZWY9Imh0dHA6Ly93d3cuaXRleWUuY29t
L2Jsb2dzL3RhZy8lRTUlQkElOTQlRTclOTQlQTglRTYlOUMlOEQlRTUlOEElQTElRTUlOTklQTgi
PuW6lOeUqOacjeWKoeWZqDwvQT4mbmJzcDs8L0RJVj48L0RJVj4NCjxESVYgaWQ9YmxvZ19jb250
ZW50IGNsYXNzPWJsb2dfY29udGVudD4mbmJzcDsmbmJzcDsmbmJzcDsgDQpNYXZlbuaYr+aehOW7
ukphdmHlupTnlKjnmoTkvJjnp4DnrqHnkIblt6XlhbfvvIzmmK9BcGFjaGXova/ku7bln7rph5Hk
vJrnmoTpobbnuqfpobnnm67jgILlhbblhbfmnInlvIDlj5Hnm67lvZXmnoTlu7rlkoznrqHnkIbv
vIznu5/kuIDnrqHnkIbnrKzkuInmlrnkvp3otZbvvIznvJbor5HvvIzmtYvor5XvvIzmiZPljIXv
vIzlj5HluIPnrYnlip/og73jgILmnIDlpKfnmoTnibnngrnopoHmlbDnrKzkuInmlrnkvp3otZbn
rqHnkIbkuobvvIzlm6DkuLrlhbblroPlip/og73pg73og73ku45BbnTkuK3mib7liLDouKrlvbHj
gILku6XlvoDmr4/kuKrpobnnm67ni6znq4vnrqHnkIbkvp3otZbvvIzkvb/lvpfmr4/kuKrpobnn
m67miZPljIXlkI7pg73mmK/lt6jlpKfml6Dmr5TnmoTvvIzogIznnJ/mraPnmoTnqIvluo/mlofk
u7bljbTmsqHmnInlpJrlsJHvvIxNYXZlbuaOpeeuoeesrOS4ieaWueS+nei1luWQju+8jOaIkeS7
rOeahOW6lOeUqOWwseWPquacieeoi+W6j+aWh+S7tuS6hu+8jOayoeacieS6hmphcuWMhei9u+W3
p+W+iOWkmu+8jOiAjOe7n+S4gOeahOeuoeeQhu+8jOS9v+W+l+aIkeS7rOWPr+S7pemaj+aEj+iO
t+WPlmphcui1hOa6kOOAgiANCjxCUj4mbmJzcDsmbmJzcDsmbmJzcDsgDQrliJ3lrabogIXkvb/n
lKhNYXZlbuaAu+aYr+aEn+inieW+iOmavuS4iuaJi++8jOWFtuS4reS5n+acieS4gOmDqOWIhuS6
uuaYr+iiq01hdmVu5LiL6L296LWE5rqQ6YKj55av54uC55qE5YGa5rOV5ZCT6YCA55qE77yM6L+Z
5bCx5pivTWF2ZW7nmoTnsr7lt6fkuYvlpITjgILku45BcGFjaGXlrpjmlrnnvZHnq5nkuIvovb3n
moRNYXZlbuW3peWFt+S7heS7hTJN5aSn5bCP77yM5YW25Lit5piv5LiN5YyF5ZCr5oiR5Lus6KaB
5L2/55So55qE5L6d6LWW55qE77yM6YKj5LmI5bCx6KaB5LuO572R57uc5Lit6I635Y+W6L+Z5Lqb
5L6d6LWW77yM5bCx5piv6YKj5Liq55av54uC5LiL6L2955qE6L+H56iL44CC5LiL6Z2i5oiR5Lus
5LuO5aS05byA5aeL5p6E5bu6TWF2ZW7njq/looPvvIznm7TliLDov5DooYxKZXR0eeWuueWZqOaJ
p+ihjFdlYuW6lOeUqO+8jOi/meS4gOWIh+mDveW+iOeugOWNleOAgiANCjxCUj4mbmJzcDsmbmJz
cDsmbmJzcDsgDQrkuIvovb1NYXZlbueahOW8gOWPkeWMheS5i+WQju+8jOino+WOi+WIsOS4gOS4
quWbuuWumueahOaWh+S7tuWkue+8jOW7uuiuruS4jeimgeS9v+eUqOaxieWtl+W5tuWcqOejgeeb
mOeahOagueebruW9leS4i++8jOi/meaYr+avlOi+g+WlveeahOWunui3teOAgumCo+S5iOacrOaW
h+S7pU1hdmVuIA0KM+S4uuS+i+adpeivtOaYju+8jE1hdmVu55qE5L2N572u5pivRjpcTWF2ZW4g
DQoz55uu5b2V44CC6Kej5Y6L5ZCO5bCx6KaB5re75Yqg57O757uf546v5aKD5Y+Y6YeP77yM6L+Z
6YeM6KaB6K+05piO77yM5Zug5Li6TWF2ZW7kuZ/mmK9KYXZh5bqU55So77yM5omA5LulSkRL5bCx
5b+F6aG76KaB5o+Q5YmN5a6J6KOF5bm26K6+572u546v5aKD6YGN5Y6G44CC5bCGSkFWQV9IT01F
5ZKMTTNfSE9NReWNleeLrOiuvue9ru+8jOmYsuatouWFtuS9v+eUqOaXtuS4jeiDveeUqFBhdGjl
j5jph4/kuIvlj5HnjrDmiYDpnIDot6/lvoTjgILkuIvpnaLmmK9KQVZBX0hPTUXlkoxNM19IT01F
55qE6YWN572u5L2N572u77yM6L+Z5Liq5Zug5Lq66ICM5byC77yM5L2G5piv5pyA5aW95Zu65a6a
5LiN6KaB6ZqP5oSP5L+u5pS544CCIA0KPEJSPjxJTUcgDQpzcmM9Imh0dHA6Ly9kbC5pdGV5ZS5j
b20vdXBsb2FkL2F0dGFjaG1lbnQvMzMwNTU2LzkxYjU1N2VlLWMwM2UtMzY3OS1iOTkzLTFlOTAx
MDc4ODE4OS5qcGciPiANCjxCUj48SU1HIA0Kc3JjPSJodHRwOi8vZGwuaXRleWUuY29tL3VwbG9h
ZC9hdHRhY2htZW50LzMzMDU1OC9mOWU0OWFiZi0wYThkLTNkZTktYmUxYS0yYzQxMTI0NjE1OTIu
anBnIj4gDQo8QlI+Jm5ic3A7Jm5ic3A7Jm5ic3A7IOWcqFBhdGjkuK3vvIzov5nmoLfmnaXmt7vl
iqDljbPlj6/vvIzpnZ7luLjnroDljZXjgIIgPEJSPjxJTUcgDQpzcmM9Imh0dHA6Ly9kbC5pdGV5
ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMzMwNTYwL2MxOWEyOGMxLWJmN2EtMzY1Mi1hZjdhLThm
NTBkZDE4NzZhYS5qcGciPiANCjxCUj4mbmJzcDsmbmJzcDsmbmJzcDsg6Iez5q2kTWF2ZW7lt7Ln
u4/lronoo4XlrozmiJDkuobvvIzkuIvpnaLmiJHku6zmnaXpqozor4Hlronoo4XvvIzlnKhDTUTk
uK3ovpPlhaVtdm4g4oCTdiA8QlI+PElNRyANCnNyYz0iaHR0cDovL2RsLml0ZXllLmNvbS91cGxv
YWQvYXR0YWNobWVudC8zMzA1NjMvMGFiYmFmODctNDYxYy0zMjUwLWEyNDctMmYyMWFmZmE0MDBi
LmpwZyI+IA0KPEJSPiZuYnNwOyZuYnNwOyZuYnNwOyANCuWPr+S7peeci+WIsO+8jOW3sue7j+iv
huWIq212buWRveS7pOS6huOAguWBmueCueeugOWNleeahOiuvue9ru+8jOWwseaYr+esrOS4ieaW
ueS+nei1luS4i+i9veeahOaXtuWAmeeahOWtmOaUvuS9jee9ru+8jOm7mOiupOaYr+WcqEPnm5jn
lKjmiLfnm67lvZXnmoTlvZPliY3nlKjmiLfmlofku7blpLnkuIvvvIjlpoJDOlznlKjmiLdcQWRt
aW7vvIzov5nph4zmmK9XaW5kb3dzIA0KN+eahOWRveWQjeaWueW8j++8ie+8jOWcqOi/memHjE1h
dmVu5Lya5Yib5bu6Lm0y5paH5Lu25aS577yM6L+Z6YeM6Z2i5bCx5Lya5a2Y5pS+5LiL6L2955qE
57G75bqT44CC5b2T54S25oiR5LiN5oOz6L+Z5Lqb57G75bqT5pS+5ZyoQ+ebmOS4i++8jOS4jeaY
r+eJueWIq+WuieWFqO+8jOaIkeaDs+iuqeWug+S7rOWtmOaUvuWcqE1hdmVu5a6J6KOF55uu5b2V
5LiL77yM6YKj5LmI5bCx5Y+v5Lul6L+Z5qC36L+b6KGM77ya5ZyoTWF2ZW7lronoo4Xnm67lvZXn
moRjb25m5LiL5omT5byAc2V0dGluZ3MueG1s77yM6L+Z5piv5a+5TWF2ZW7ov5vooYzorr7nva7n
moRYTUzmlofku7bvvIzov5nph4zmiJHku6znroDljZXorr7nva7nrKzkuInmlrnkvp3otZbnmoTk
vY3nva7vvIzlpoLkuIvorr7nva7vvJogDQo8QlI+PFBSRSBjbGFzcz14bWwgbmFtZT0iY29kZSI+
Jmx0O2xvY2FsUmVwb3NpdG9yeSZndDtGOi9NYXZlbjMvcmVwb3NpdG9yeSZsdDsvbG9jYWxSZXBv
c2l0b3J5Jmd0OzwvUFJFPjxCUj4mbmJzcDsmbmJzcDsmbmJzcDsgDQrov5nmoLfvvIzpgqPkupvn
lq/ni4LkuIvovb3nmoTkvp3otZblsLHlnKjov5nkuKrkvY3nva7kuIvkuobvvIzopoHnlZnnu5no
trPlpJ/lpKfnmoTnqbrpl7TvvIzlm6DkuLrkvp3otZbkuIvovb3lvojlj6/og73ljaDnlKjlvojl
pKfnmoTkuIDlnZfnqbrpl7TjgILkuLrku4DkuYjvvJ/kuIvovb3lkI7ljrvnnIvnnIvlroPnmoTn
nJ/lrp7pnaLnm67lsLHnn6XpgZPkuobjgIIgDQo8QlI+Jm5ic3A7Jm5ic3A7Jm5ic3A7IOS4i+md
ouaIkeS7rOWwseadpeWIm+W7uuW6lOeUqOebruW9le+8jOS9v+eUqG12biANCmFyY2hldHlwZTpn
ZW5lcmF0ZeWRveS7pOS4gOatpeS4gOatpeagueaNruaPkOekuu+8jOmAieaLqemhueebruexu+We
i++8jOa3u+WKoGdyb3VwSWTlkoxhcnRpZmFjdElk5bCx5Y+v5Lul5Yib5bu66aG555uu5LqG77yM
5oiR5Lus5p2l55yL5LiA5LiL77yM6L+Z6YeM5omn6KGMbXZuIA0KYXJjaGV0eXBlOmdlbmVyYXRl
IA0KLURhcmNoZXR5cGVDYXRhbG9nPWludGVybmFs5ZG95Luk77yM6KaB5omL5bel6K6+572u5LiA
5LiL6aG555uu57G75Z6L5YiG57G75bGe5oCn77yM5Y+v6IO95Zug5Li657G75Z6L5aSq5aSa5a+8
6Ie05bGP5bmV5pi+56S65LiN5YWo77yM6YKj5LmI5oiR5Lus5bCx566A5Y2V5p2l55yL5Yeg5Liq
5bi455So55qE5bCx6KGM77yM5bCx5pivaW50ZXJuYWznsbvlnovjgILmiafooYzor6Xlkb3ku6Tl
kI7vvIzlnKjmjqfliLblj7DmiJHku6znnIvliLDmnInlpoLkuIvnmoTlhoXlrrnjgILvvIjliIfo
rrDov5nkuKrmk43kvZzkvY3nva7lsLHmmK/nlJ/miJDpobnnm67nm67lvZXnmoTkvY3nva7vvIkg
DQo8QlI+PElNRyANCnNyYz0iaHR0cDovL2RsLml0ZXllLmNvbS91cGxvYWQvYXR0YWNobWVudC8z
MzA1NjUvZWU4YjYyNjItMGI0Mi0zNDRiLTk0ZjItYjI3MTVhN2M4ZTc5LmpwZyI+IA0KPEJSPiZu
YnNwOyZuYnNwOyZuYnNwOyANCui/memHjOaIkeS7rOWFiOmAieaLqTE25pivbWF2ZW4tYXJjaGV0
eXBlLXF1aWNrc3RhcnTvvIzlsLHmmK/ln7rmnKznmoRKYXZhU0Xpobnnm67nu5PmnoTnmoTmnoTl
u7rvvIwxOeaYr21hdmVuLWFyY2hldHlwZS13ZWJhcHDvvIznlKjmnaXliJvlu7rnroDljZXnmoRK
YXZhIA0KV2Vi5bqU55So77yM5oiR5Lus5YWI6YCJ5oupMTbmnaXnnIvnnIvjgIIgPEJSPjxJTUcg
DQpzcmM9Imh0dHA6Ly9kbC5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMzMwNTY3L2JmMTU3
YmJhLTc1MGMtM2MzYy1hMDk1LWYzYWU2NDAwMmMwOC5qcGciPiANCjxCUj4mbmJzcDsmbmJzcDsm
bmJzcDsgDQrpgInmi6kxNuS5i+WQju+8jE1hdmVu5o+Q56S66L6T5Ye6Z3JvdXBJZO+8jOWwseaY
r+aIkeS7rOeahOmhueebruWRveWQjee7hOaIkOS5i+S4gO+8jOayoeS7gOS5iOi/h+Wkmuino+mH
iueahOS4nOilv++8jGFydGlmYWN0SWTnlKjmnaXmoIforrDpobnnm67lkI3np7DvvIzlroPku6zk
uKTkuKrmmK/ogZTlkIjkvb/nlKjnmoTjgILogIxwYWNrYWdl5a6a5LmJ55qE5piv5YyF5ZCN77yM
5oiR5Lus5Zyo5paH5Lu25aS55YaF5bCx5Y+R546w5LqGZGVtb+WRveWQjeeahOmhueebruaWh+S7
tuWkueOAgueci+eci+i/meS4quebruW9leeahOe7k+aehO+8jOi/meaYr01hdmVu5Li65oiR5Lus
5Yib5bu655qE77yM5bCx5piv5LiA5Liq5qCH5YeG55qE5qC85byP77yaIA0KPEJSPjxJTUcgDQpz
cmM9Imh0dHA6Ly9kbC5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMzMwNTcyLzU0ODI3OTg4
LWU4ODItM2E0Mi1hNWExLTkyYjJiOTZhYzMyNS5qcGciPiANCjxCUj4mbmJzcDsmbmJzcDsmbmJz
cDsgDQrmoLnnm67lvZXkuIvmnInkuIDkuKpwb20ueG1s77yM6L+Z5bCx5piv6aG555uu55qETWF2
ZW7phY3nva7mlofku7bvvIzmmoLml7bkuI3ku4vnu43lhbblvLrlpKfnmoTlip/og73vvIzku4Xk
u4XnroDljZXnnIvkuIDkuIvlrp7pmYXlupTnlKjvvIzov5nmmK/ln7rnoYDnmoTnm67lvZXnu5Pm
noTvvIxNYXZlbuS4uuaIkeS7rOWIm+W7uuS6huS4gOS4qkhlbGxvIA0KV29ybGTnmoTlsI/nqIvl
uo/vvIzmiJHku6zmnaXov5DooYzlroPjgILmg7PopoHov5DooYzov5nkuKrnqIvluo/vvIzpgqPk
uYjlsLHopoHnvJbor5HvvIxtdm7nmoTnvJbor5Hlkb3ku6TmmK9tdm4gDQpjb21waWxl77yM6L+Z
5qC35bCx5Li65oiR5Lus57yW6K+R5pW05Liq6aG555uu77yM6L+Z5Liq5pON5L2c6KaB5ZyoZGVt
b+ebruW9leS4i+WujOaIkOOAgiA8QlI+PElNRyANCnNyYz0iaHR0cDovL2RsLml0ZXllLmNvbS91
cGxvYWQvYXR0YWNobWVudC8zMzA1NzQvMzRhZWQ5MzctNDY2Zi0zNGFmLTg4NTQtNWQwNTc2ZWFi
NTMwLmpwZyI+IA0KPEJSPiZuYnNwOyZuYnNwOyZuYnNwOyANCuWbnuWktOeci+eci2RlbW/mlofk
u7blpLnvvIzlpJrlh7rkuIDkuKp0YXJnZXTnm67lvZXvvIzov5nlsLHmmK/miJHku6znmoTnsbvo
t6/lvoTkuobvvIxjbGFzc+aWh+S7tuWwseWcqOS4i+mdouOAgui/meS4quaTjeS9nOeahOmAhui/
h+eoi+aYr212biANCmNsZWFu77yM6aG+5ZCN5oCd5LmJ77yM5bCx5piv5riF55CG77yM5riF55CG
55Sf5oiQ55qE5Y+v5omn6KGM6YOo5YiG77yM5LuF55WZ5LiL5rqQ56CB6YOo5YiG77yM5aaC5LiL
77yaIDxCUj48SU1HIA0Kc3JjPSJodHRwOi8vZGwuaXRleWUuY29tL3VwbG9hZC9hdHRhY2htZW50
LzMzMDU3Ny80ZmUwNTlkMi01ZTc0LTM3NjItOTMxOC1iZmFhYzQ3NzU5ZGEuanBnIj4gDQo8QlI+
Jm5ic3A7Jm5ic3A7Jm5ic3A7IA0KTWF2ZW7miafooYzkuoZEZWxldGluZ+aTjeS9nO+8jOWIoOmZ
pOS6hnRhcmdldOebruW9leOAguWmguaenOaDs+aJp+ihjOeoi+W6j++8jOaYr+mcgOimgWNsYXNz
5paH5Lu25oiWamFy5paH5Lu255qE77yM5YmN6Z2i55qEbXZuIA0KY29tcGlsZeWRveS7pOS7heS7
heaYr+e8luivke+8jOiAjOayoeacieWvueW6lOeUqOi/m+ihjOaJk+WMheWPkeW4g++8jOiAjG12
biBwYWNrYWdl5ZG95Luk5Y+v5Lul5bCG5bqU55So5omT5YyF77yIamFy5oiWd2Fy562J77yJ77yM
6YKj5LmI5oiR5Lus5bCx5p2l5Li66aG555uu5omT5YyF5Y+R5biD77yaIA0KPEJSPjxJTUcgDQpz
cmM9Imh0dHA6Ly9kbC5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMzMwNTc5L2EyMGQyN2E4
LTljMDEtMzgwYi1hNzFiLWRlMDNhMzVjNjI1Yi5qcGciPiANCjxCUj4mbmJzcDsmbmJzcDsmbmJz
cDsgDQrov5nkuKrov4fnqIvvvIxNYXZlbuaJp+ihjOS6huW+iOWkmuaTjeS9nO+8jOacieaXpeW/
l+WPr+S7pee7hueci++8jOWFtuS4rei/mOaciea1i+ivlei/h+eoi++8jOi/meaYr0pVbml055qE
5rWL6K+V44CC5YW25a6e5oiR5Lus5Yib5bu66aG555uu5pe277yMTWF2ZW7kuLrmiJHku6zlvJXl
haXnmoTnrKzkuIDkuKrkvp3otZblsLHmmK9KVW5pdOOAguS4i+mdouaIkeS7rOadpeaJp+ihjGph
cuaWh+S7tu+8jOi/kOihjOeoi+W6j+OAgu+8iOW9k+eEtuaJp+ihjGNsYXNz5piv5LiA5qC355qE
5pWI5p6c77yJIA0KPEJSPjxJTUcgDQpzcmM9Imh0dHA6Ly9kbC5pdGV5ZS5jb20vdXBsb2FkL2F0
dGFjaG1lbnQvMzMwNTgxLzA2N2Y3MWEyLWI1MTMtMzZiNy1hZDVlLTU3MzRlOGY4N2VhNS5qcGci
PiANCjxCUj4mbmJzcDsmbmJzcDsmbmJzcDsg6L+Z5qC35bCx5b6X5Yiw5omn6KGM5pWI5p6c5LqG
77yMSGVsbG8gV29ybGQhIA0KPEJSPu+8iOacquWujOW+hee7re+8jOS4i+S4gOevh+Wwhue7k+WQ
iEVjbGlwc2Xku6Xlm77niYfmlrnlvI/mnaXor7TmmI5XZWLpobnnm67nmoTphY3nva7lkozov5Do
oYzvvIkgPEJSPiZuYnNwOyZuYnNwOyZuYnNwOyDkuIvkuIDnr4flnLDlnYDvvJo8QSANCmhyZWY9
Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vYmxvZy83ODQ2OTciIHRhcmdldD1fYmxhbms+56ys5LqM
6YOo5YiGPC9BPiA8L0RJVj4NCjxESVYgY2xhc3M9YXR0YWNobWVudHM+DQo8VUwgc3R5bGU9IkRJ
U1BMQVk6IG5vbmUiPg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3Vw
bG9hZC9hdHRhY2htZW50LzAwMzMvMDU1Ni85MWI1NTdlZS1jMDNlLTM2NzktYjk5My0xZTkwMTA3
ODgxODkuanBnIiANCiAgdGFyZ2V0PV9ibGFuaz48SU1HIGNsYXNzPW1hZ3BsdXMgdGl0bGU954K5
5Ye75p+l55yL5Y6f5aeL5aSn5bCP5Zu+54mHIA0KICBzcmM9Imh0dHA6Ly9kbDIuaXRleWUuY29t
L3VwbG9hZC9hdHRhY2htZW50LzAwMzMvMDU1Ni85MWI1NTdlZS1jMDNlLTM2NzktYjk5My0xZTkw
MTA3ODgxODktdGh1bWIuanBnIj48L0E+PC9MST4NCiAgPExJPuWkp+WwjzogMTAuNCBLQjwvTEk+
PC9VTD4NCjxVTCBzdHlsZT0iRElTUExBWTogbm9uZSI+DQogIDxMST48QSANCiAgaHJlZj0iaHR0
cDovL2RsMi5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTU4L2Y5ZTQ5YWJmLTBh
OGQtM2RlOS1iZTFhLTJjNDExMjQ2MTU5Mi5qcGciIA0KICB0YXJnZXQ9X2JsYW5rPjxJTUcgY2xh
c3M9bWFncGx1cyB0aXRsZT3ngrnlh7vmn6XnnIvljp/lp4vlpKflsI/lm77niYcgDQogIHNyYz0i
aHR0cDovL2RsMi5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTU4L2Y5ZTQ5YWJm
LTBhOGQtM2RlOS1iZTFhLTJjNDExMjQ2MTU5Mi10aHVtYi5qcGciPjwvQT48L0xJPg0KICA8TEk+
5aSn5bCPOiA5LjUgS0I8L0xJPjwvVUw+DQo8VUwgc3R5bGU9IkRJU1BMQVk6IG5vbmUiPg0KICA8
TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3VwbG9hZC9hdHRhY2htZW50LzAw
MzMvMDU2MC9jMTlhMjhjMS1iZjdhLTM2NTItYWY3YS04ZjUwZGQxODc2YWEuanBnIiANCiAgdGFy
Z2V0PV9ibGFuaz48SU1HIGNsYXNzPW1hZ3BsdXMgdGl0bGU954K55Ye75p+l55yL5Y6f5aeL5aSn
5bCP5Zu+54mHIA0KICBzcmM9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3VwbG9hZC9hdHRhY2htZW50
LzAwMzMvMDU2MC9jMTlhMjhjMS1iZjdhLTM2NTItYWY3YS04ZjUwZGQxODc2YWEtdGh1bWIuanBn
Ij48L0E+PC9MST4NCiAgPExJPuWkp+WwjzogMTAuNCBLQjwvTEk+PC9VTD4NCjxVTCBzdHlsZT0i
RElTUExBWTogbm9uZSI+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2RsMi5pdGV5ZS5jb20v
dXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTYzLzBhYmJhZjg3LTQ2MWMtMzI1MC1hMjQ3LTJmMjFh
ZmZhNDAwYi5qcGciIA0KICB0YXJnZXQ9X2JsYW5rPjxJTUcgY2xhc3M9bWFncGx1cyB0aXRsZT3n
grnlh7vmn6XnnIvljp/lp4vlpKflsI/lm77niYcgDQogIHNyYz0iaHR0cDovL2RsMi5pdGV5ZS5j
b20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTYzLzBhYmJhZjg3LTQ2MWMtMzI1MC1hMjQ3LTJm
MjFhZmZhNDAwYi10aHVtYi5qcGciPjwvQT48L0xJPg0KICA8TEk+5aSn5bCPOiAxOS40IEtCPC9M
ST48L1VMPg0KPFVMIHN0eWxlPSJESVNQTEFZOiBub25lIj4NCiAgPExJPjxBIA0KICBocmVmPSJo
dHRwOi8vZGwyLml0ZXllLmNvbS91cGxvYWQvYXR0YWNobWVudC8wMDMzLzA1NjUvZWU4YjYyNjIt
MGI0Mi0zNDRiLTk0ZjItYjI3MTVhN2M4ZTc5LmpwZyIgDQogIHRhcmdldD1fYmxhbms+PElNRyBj
bGFzcz1tYWdwbHVzIHRpdGxlPeeCueWHu+afpeeci+WOn+Wni+Wkp+Wwj+WbvueJhyANCiAgc3Jj
PSJodHRwOi8vZGwyLml0ZXllLmNvbS91cGxvYWQvYXR0YWNobWVudC8wMDMzLzA1NjUvZWU4YjYy
NjItMGI0Mi0zNDRiLTk0ZjItYjI3MTVhN2M4ZTc5LXRodW1iLmpwZyI+PC9BPjwvTEk+DQogIDxM
ST7lpKflsI86IDMwLjMgS0I8L0xJPjwvVUw+DQo8VUwgc3R5bGU9IkRJU1BMQVk6IG5vbmUiPg0K
ICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3VwbG9hZC9hdHRhY2htZW50
LzAwMzMvMDU2Ny9iZjE1N2JiYS03NTBjLTNjM2MtYTA5NS1mM2FlNjQwMDJjMDguanBnIiANCiAg
dGFyZ2V0PV9ibGFuaz48SU1HIGNsYXNzPW1hZ3BsdXMgdGl0bGU954K55Ye75p+l55yL5Y6f5aeL
5aSn5bCP5Zu+54mHIA0KICBzcmM9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3VwbG9hZC9hdHRhY2ht
ZW50LzAwMzMvMDU2Ny9iZjE1N2JiYS03NTBjLTNjM2MtYTA5NS1mM2FlNjQwMDJjMDgtdGh1bWIu
anBnIj48L0E+PC9MST4NCiAgPExJPuWkp+WwjzogNDQuNyBLQjwvTEk+PC9VTD4NCjxVTCBzdHls
ZT0iRElTUExBWTogbm9uZSI+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2RsMi5pdGV5ZS5j
b20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTcyLzU0ODI3OTg4LWU4ODItM2E0Mi1hNWExLTky
YjJiOTZhYzMyNS5qcGciIA0KICB0YXJnZXQ9X2JsYW5rPjxJTUcgY2xhc3M9bWFncGx1cyB0aXRs
ZT3ngrnlh7vmn6XnnIvljp/lp4vlpKflsI/lm77niYcgDQogIHNyYz0iaHR0cDovL2RsMi5pdGV5
ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTcyLzU0ODI3OTg4LWU4ODItM2E0Mi1hNWEx
LTkyYjJiOTZhYzMyNS10aHVtYi5qcGciPjwvQT48L0xJPg0KICA8TEk+5aSn5bCPOiAxNi44IEtC
PC9MST48L1VMPg0KPFVMIHN0eWxlPSJESVNQTEFZOiBub25lIj4NCiAgPExJPjxBIA0KICBocmVm
PSJodHRwOi8vZGwyLml0ZXllLmNvbS91cGxvYWQvYXR0YWNobWVudC8wMDMzLzA1NzQvMzRhZWQ5
MzctNDY2Zi0zNGFmLTg4NTQtNWQwNTc2ZWFiNTMwLmpwZyIgDQogIHRhcmdldD1fYmxhbms+PElN
RyBjbGFzcz1tYWdwbHVzIHRpdGxlPeeCueWHu+afpeeci+WOn+Wni+Wkp+Wwj+WbvueJhyANCiAg
c3JjPSJodHRwOi8vZGwyLml0ZXllLmNvbS91cGxvYWQvYXR0YWNobWVudC8wMDMzLzA1NzQvMzRh
ZWQ5MzctNDY2Zi0zNGFmLTg4NTQtNWQwNTc2ZWFiNTMwLXRodW1iLmpwZyI+PC9BPjwvTEk+DQog
IDxMST7lpKflsI86IDMzLjYgS0I8L0xJPjwvVUw+DQo8VUwgc3R5bGU9IkRJU1BMQVk6IG5vbmUi
Pg0KICA8TEk+PEEgDQogIGhyZWY9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3VwbG9hZC9hdHRhY2ht
ZW50LzAwMzMvMDU3Ny80ZmUwNTlkMi01ZTc0LTM3NjItOTMxOC1iZmFhYzQ3NzU5ZGEuanBnIiAN
CiAgdGFyZ2V0PV9ibGFuaz48SU1HIGNsYXNzPW1hZ3BsdXMgdGl0bGU954K55Ye75p+l55yL5Y6f
5aeL5aSn5bCP5Zu+54mHIA0KICBzcmM9Imh0dHA6Ly9kbDIuaXRleWUuY29tL3VwbG9hZC9hdHRh
Y2htZW50LzAwMzMvMDU3Ny80ZmUwNTlkMi01ZTc0LTM3NjItOTMxOC1iZmFhYzQ3NzU5ZGEtdGh1
bWIuanBnIj48L0E+PC9MST4NCiAgPExJPuWkp+WwjzogMjQuNiBLQjwvTEk+PC9VTD4NCjxVTCBz
dHlsZT0iRElTUExBWTogbm9uZSI+DQogIDxMST48QSANCiAgaHJlZj0iaHR0cDovL2RsMi5pdGV5
ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTc5L2EyMGQyN2E4LTljMDEtMzgwYi1hNzFi
LWRlMDNhMzVjNjI1Yi5qcGciIA0KICB0YXJnZXQ9X2JsYW5rPjxJTUcgY2xhc3M9bWFncGx1cyB0
aXRsZT3ngrnlh7vmn6XnnIvljp/lp4vlpKflsI/lm77niYcgDQogIHNyYz0iaHR0cDovL2RsMi5p
dGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTc5L2EyMGQyN2E4LTljMDEtMzgwYi1h
NzFiLWRlMDNhMzVjNjI1Yi10aHVtYi5qcGciPjwvQT48L0xJPg0KICA8TEk+5aSn5bCPOiAyNSBL
QjwvTEk+PC9VTD4NCjxVTCBzdHlsZT0iRElTUExBWTogbm9uZSI+DQogIDxMST48QSANCiAgaHJl
Zj0iaHR0cDovL2RsMi5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTgxLzA2N2Y3
MWEyLWI1MTMtMzZiNy1hZDVlLTU3MzRlOGY4N2VhNS5qcGciIA0KICB0YXJnZXQ9X2JsYW5rPjxJ
TUcgY2xhc3M9bWFncGx1cyB0aXRsZT3ngrnlh7vmn6XnnIvljp/lp4vlpKflsI/lm77niYcgDQog
IHNyYz0iaHR0cDovL2RsMi5pdGV5ZS5jb20vdXBsb2FkL2F0dGFjaG1lbnQvMDAzMy8wNTgxLzA2
N2Y3MWEyLWI1MTMtMzZiNy1hZDVlLTU3MzRlOGY4N2VhNS10aHVtYi5qcGciPjwvQT48L0xJPg0K
ICA8TEk+5aSn5bCPOiA5LjEgS0I8L0xJPjwvVUw+DQo8VUw+DQogIDxMST48QSANCiAgb25jbGlj
az0iJCQoJ2Rpdi5hdHRhY2htZW50cyB1bCcpLmludm9rZSgnc2hvdycpOyQodGhpcykudXAoMSku
aGlkZSgpO3JldHVybiBmYWxzZTsiIA0KICBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Js
b2cvNzg0Mjc1IyI+5p+l55yL5Zu+54mH6ZmE5Lu2PC9BPjwvTEk+PC9VTD48L0RJVj4NCjxESVYg
aWQ9Ym90dG9tcyBjbGFzcz1jbGVhcmZpeD4NCjxESVYgaWQ9ZGlnZ19ib3R0b20gY2xhc3M9Y2xl
YXJmaXg+DQo8RElWIGNsYXNzPWRpZ2dlZD48U1RST05HPjM0PC9TVFJPTkc+IDxCUj7pobY8L0RJ
Vj4NCjxESVYgY2xhc3M9ZGlnZ2VkPjxTVFJPTkc+NTwvU1RST05HPiA8QlI+6LipPC9ESVY+PC9E
SVY+DQo8RElWIGlkPXNoYXJlX3dlaWJvPuWIhuS6q+WIsO+8miA8QSB0aXRsZT3liIbkuqvliLDm
lrDmtarlvq7ljZogaHJlZj0iamF2YXNjcmlwdDo7IiANCmRhdGEtdHlwZT0ic2luYSI+PElNRyBz
cmM9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vaW1hZ2VzL3NpbmEuanBnIj48L0E+IDxBIA0KdGl0
bGU95YiG5Lqr5Yiw6IW+6K6v5b6u5Y2aIGhyZWY9ImphdmFzY3JpcHQ6OyIgZGF0YS10eXBlPSJx
cSI+PElNRyANCnNyYz0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9pbWFnZXMvdGVjLmpwZyI+PC9B
PiA8L0RJVj48L0RJVj4NCjxESVYgY2xhc3M9YmxvZ19uYXY+DQo8RElWIGNsYXNzPXByZV9uZXh0
PjxBIGNsYXNzPW5leHQgdGl0bGU9IueUqE1hdmVu5p6E5bu6SmF2YSBXZWLlvIDlj5Hnjq/looPv
vIhKZXR0eeWuueWZqO+8ieS5i+S6jCIgDQpocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Js
b2cvNzg0Njk3Ij7nlKhNYXZlbuaehOW7ukphdmEgV2Vi5byA5Y+R546v5aKD77yISmV0dHnlrrnl
maggLi4uPC9BPiB8IA0KPEEgY2xhc3M9cHJlIHRpdGxlPeS7juS4gOmBk05ldXNvZnTpopjkuK3m
g7PliLDnmoRJT+WSjENvbXBhcmF0b3IgDQpocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Js
b2cvNzY5ODIxIj7ku47kuIDpgZNOZXVzb2Z06aKY5Lit5oOz5Yiw55qESU/lkoxDb21wYXJhdG9y
PC9BPiANCjwvRElWPjwvRElWPg0KPERJViBjbGFzcz1ibG9nX2JvdHRvbT4NCjxVTD4NCiAgPExJ
PjIwMTAtMTAtMTMgMjM6MjY8L0xJPg0KICA8TEk+5rWP6KeIIDEyODA4PC9MST4NCiAgPExJPjxB
IGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vYmxvZy83ODQyNzUjY29tbWVudHMiPuivhOiu
uig3KTwvQT48L0xJPg0KICA8TEk+5YiG57G7OjxBIGhyZWY9Imh0dHA6Ly93d3cuaXRleWUuY29t
L2Jsb2dzL2NhdGVnb3J5L2xhbmd1YWdlIj7nvJbnqIvor63oqIA8L0E+PC9MST4NCiAgPExJIGNs
YXNzPWxhc3Q+PEEgY2xhc3M9bW9yZSBocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS93aWtpL2Js
b2cvNzg0Mjc1IiANCiAgdGFyZ2V0PV9ibGFuaz7nm7jlhbPmjqjojZA8L0E+PC9MST48L1VMPjwv
RElWPg0KPERJViBjbGFzcz1ibG9nX2NvbW1lbnQ+DQo8SDU+6K+E6K66PC9INT48QSBpZD1jb21t
ZW50cyBuYW1lPWNvbW1lbnRzPjwvQT4NCjxESVYgaWQ9YmMxNzMyNjE5Pg0KPERJViBjbGFzcz1j
b21tZW50X3RpdGxlPjcg5qW8IDxBIHRpdGxlPXNhcmluIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5
ZS5jb20vIiANCnRhcmdldD1fYmxhbms+c2FyaW48L0E+IDIwMTAtMTAtMjkmbmJzcDsmbmJzcDsg
PC9ESVY+DQo8RElWIGNsYXNzPWNvbW1lbnRfY29udGVudD4NCjxESVYgY2xhc3M9cXVvdGVfdGl0
bGU+c2VvdWwg5YaZ6YGTPC9ESVY+DQo8RElWIGNsYXNzPXF1b3RlX2Rpdj4lTTNfSE9NRSUg5bqU
6K+l5YaZ5oiQICVNM19IT01FJVxiaW4gPEJSPjxCUj7kuI3nhLZDTUTnqpflj6PmiafooYxtdm4g
LXYgDQrmj5DnpLrigJzkuI3mmK/lhoXpg6jmiJblpJbpg6jlkb3ku6TjgILjgILjgILigJ0gPEJS
PjxCUj7miJbogIXopoHlnKhDTUTnqpflj6MgY2QgJU0zX0hPTUUlXGJpbiDlkI7vvIzmiY3og73m
iafooYxtdm4gDQotdjwvRElWPjxCUj7lr7nvvIzmiJHmiKrlm77msqHmmL7npLrlhag8L0RJVj48
L0RJVj4NCjxESVYgaWQ9YmMxNzMyNTEzPg0KPERJViBjbGFzcz1jb21tZW50X3RpdGxlPjYg5qW8
IDxBIHRpdGxlPXNlb3VsIGhyZWY9Imh0dHA6Ly9zZW91bC5pdGV5ZS5jb20vIiANCnRhcmdldD1f
Ymxhbms+c2VvdWw8L0E+IDIwMTAtMTAtMjkmbmJzcDsmbmJzcDsgPC9ESVY+DQo8RElWIGNsYXNz
PWNvbW1lbnRfY29udGVudD4lTTNfSE9NRSUg5bqU6K+l5YaZ5oiQICVNM19IT01FJVxiaW4gPEJS
PjxCUj7kuI3nhLZDTUTnqpflj6PmiafooYxtdm4gLXYgDQrmj5DnpLrigJzkuI3mmK/lhoXpg6jm
iJblpJbpg6jlkb3ku6TjgILjgILjgILigJ0gPEJSPjxCUj7miJbogIXopoHlnKhDTUTnqpflj6Mg
Y2QgJU0zX0hPTUUlXGJpbiDlkI7vvIzmiY3og73miafooYxtdm4gLXY8L0RJVj48L0RJVj4NCjxE
SVYgaWQ9YmMxNzIzMDk3Pg0KPERJViBjbGFzcz1jb21tZW50X3RpdGxlPjUg5qW8IDxBIHRpdGxl
PXNhcmluIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vIiANCnRhcmdldD1fYmxhbms+c2Fy
aW48L0E+IDIwMTAtMTAtMjMmbmJzcDsmbmJzcDsgPC9ESVY+DQo8RElWIGNsYXNzPWNvbW1lbnRf
Y29udGVudD4NCjxESVYgY2xhc3M9cXVvdGVfdGl0bGU+bGlzb241NTY2IOWGmemBkzwvRElWPg0K
PERJViBjbGFzcz1xdW90ZV9kaXY+5LiA6Iis55qESjJFRSANCndlYumhueebruaIkeS7rOmDveaY
r+aJk+WMhXdlYnJvb3TkuIvpnaLnmoTmlofku7bvvIzlpoLmnpzmjIltYXZlbueahOWMhee7k+ae
hO+8jFJlc291cmNl5LiL6Z2i5piv55So5p2l5pS+6YWN572u5paH5Lu255qE77yb6K+36Zeu5oiR
6K+l5aaC5L2V5bu656uL55uu5b2V5a2Y5pS+d2ViLnhtbOaWh+S7tuS7peaWueS+v212biANCnBh
Y2thZ2XnlJ/miJDnmoR3YXLog73lnKjlupTnlKjmnI3liqHlmajkuK3ov5DooYzvvJ88L0RJVj48
QlI+TWF2ZW7nmoR3ZWLpobnnm67nm67lvZXmmK93ZWJhcHDvvIzov5nkuKrlkI3lrZflkozlj5Hl
uIPmsqHmnInlhbPns7vlkKfvvIzlj5HluIPml7bku4Xku4XmlL7nva7ov5nkuKrnm67lvZXkuIvn
moTmlofku7bliLDmnI3liqHlmajnq6/vvIzmnI3liqHlmajog73oh6rlt7Hmib7liLBXRUItSU5G
5LiL55qEd2ViLnhtbO+8jOi/meS4qui3r+W+hOS4jeeuoeeUqOS7gOS5iOW3peWFt++8jOmDveaY
r+ebuOWQjOeahOOAgjwvRElWPjwvRElWPg0KPERJViBpZD1iYzE3MjMwNjA+DQo8RElWIGNsYXNz
PWNvbW1lbnRfdGl0bGU+NCDmpbwgPEEgdGl0bGU9bGlzb241NTY2IA0KaHJlZj0iaHR0cDovL2xp
c29uNTU2Ni5pdGV5ZS5jb20vIiB0YXJnZXQ9X2JsYW5rPmxpc29uNTU2NjwvQT4gDQoyMDEwLTEw
LTIzJm5ic3A7Jm5ic3A7IDwvRElWPg0KPERJViBjbGFzcz1jb21tZW50X2NvbnRlbnQ+5LiA6Iis
55qESjJFRSANCndlYumhueebruaIkeS7rOmDveaYr+aJk+WMhXdlYnJvb3TkuIvpnaLnmoTmlofk
u7bvvIzlpoLmnpzmjIltYXZlbueahOWMhee7k+aehO+8jFJlc291cmNl5LiL6Z2i5piv55So5p2l
5pS+6YWN572u5paH5Lu255qE77yb6K+36Zeu5oiR6K+l5aaC5L2V5bu656uL55uu5b2V5a2Y5pS+
d2ViLnhtbOaWh+S7tuS7peaWueS+v212biANCnBhY2thZ2XnlJ/miJDnmoR3YXLog73lnKjlupTn
lKjmnI3liqHlmajkuK3ov5DooYzvvJ88L0RJVj48L0RJVj4NCjxESVYgaWQ9YmMxNzIyNzcyPg0K
PERJViBjbGFzcz1jb21tZW50X3RpdGxlPjMg5qW8IDxBIHRpdGxlPWx1Y2thd2F5IGhyZWY9Imh0
dHA6Ly9sdWNrYXdheS5pdGV5ZS5jb20vIiANCnRhcmdldD1fYmxhbms+bHVja2F3YXk8L0E+IDIw
MTAtMTAtMjMmbmJzcDsmbmJzcDsgPC9ESVY+DQo8RElWIA0KY2xhc3M9Y29tbWVudF9jb250ZW50
PuW+iOivpue7huOAgumdnuW4uOWlve+8gTxCUj48QlI+5aaC5p6c6KaB5L2/55SoTWF2ZW7vvIzm
nIDlpb3ov5jmmK9lY2xpcHNl6KOF5LiKTWF2ZW7mj5Lku7bvvIzmiZPpgKDlrozlloTnmoRJREU8
L0RJVj48L0RJVj4NCjxESVYgaWQ9YmMxNzEyMTU2Pg0KPERJViBjbGFzcz1jb21tZW50X3RpdGxl
PjIg5qW8IDxBIHRpdGxlPWhvbmdqbiBocmVmPSJodHRwOi8vZHNicnl6Lml0ZXllLmNvbS8iIA0K
dGFyZ2V0PV9ibGFuaz5ob25nam48L0E+IDIwMTAtMTAtMTUmbmJzcDsmbmJzcDsgPC9ESVY+DQo8
RElWIGNsYXNzPWNvbW1lbnRfY29udGVudD7lvojlpb3vvIzmnIDov5HkuZ/lnKjnoJTnqbZNYXZl
bu+8jOacn+W+heWQjue7reeahOS9nOWTgTwvRElWPjwvRElWPg0KPERJViBpZD1iYzE3MDk2NDk+
DQo8RElWIGNsYXNzPWNvbW1lbnRfdGl0bGU+MSDmpbwgPEEgdGl0bGU9ZWltaGVlIGhyZWY9Imh0
dHA6Ly9leHRqczIuaXRleWUuY29tLyIgDQp0YXJnZXQ9X2JsYW5rPmVpbWhlZTwvQT4gMjAxMC0x
MC0xNCZuYnNwOyZuYnNwOyA8L0RJVj4NCjxESVYgY2xhc3M9Y29tbWVudF9jb250ZW50Pmdvb2Qg
am9iPC9ESVY+PC9ESVY+PC9ESVY+DQo8RElWIGNsYXNzPWJsb2dfY29tbWVudD4NCjxINT7lj5Ho
oajor4Torro8L0g1Pg0KPFAgc3R5bGU9IlRFWFQtQUxJR046IGNlbnRlcjsgTUFSR0lOLVRPUDog
MzBweDsgTUFSR0lOLUJPVFRPTTogMHB4Ij48QSANCnN0eWxlPSJCQUNLR1JPVU5ELUNPTE9SOiB3
aGl0ZSIgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9sb2dpbiI+PElNRyANCnN0eWxlPSJW
RVJUSUNBTC1BTElHTjogbWlkZGxlOyBNQVJHSU4tUklHSFQ6IDEwcHgiIA0Kc3JjPSJodHRwOi8v
c2FyaW4uaXRleWUuY29tL2ltYWdlcy9sb2dpbl9pY29uLnBuZyI+PC9BPjxBIA0KaHJlZj0iaHR0
cDovL3NhcmluLml0ZXllLmNvbS9sb2dpbiI+IOaCqOi/mOayoeacieeZu+W9lSzor7fmgqjnmbvl
vZXlkI7lho3lj5Hooajor4TorrogPC9BPjwvUD48L0RJVj48L0RJVj4NCjxTQ1JJUFQgdHlwZT10
ZXh0L2phdmFzY3JpcHQ+CiAgZHAuU3ludGF4SGlnaGxpZ2h0ZXIuSGlnaGxpZ2h0QWxsKCdjb2Rl
JywgdHJ1ZSwgdHJ1ZSk7CgogICQkKCcjbWFpbiAuYmxvZ19jb250ZW50IHByZVtuYW1lPWNvZGVd
JykuZWFjaChmdW5jdGlvbihwcmUsIGluZGV4KXsgLy8gYmxvZyBjb250ZW50CiAgICB2YXIgcG9z
dF9pZCA9IDc4NDI3NTsKICAgIHZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjsKICAgIHNv
dXJjZV91cmwgPSBsb2NhdGlvbi5wcm90b2NvbCArICIvLyIgKyBsb2NhdGlvbi5ob3N0ICsgbG9j
YXRpb24ucGF0aG5hbWUgKyBsb2NhdGlvbi5zZWFyY2g7CiAgICBwcmUud3JpdGVBdHRyaWJ1dGUo
J2NvZGVhYmxlX2lkJywgcG9zdF9pZCk7CiAgICBwcmUud3JpdGVBdHRyaWJ1dGUoJ2NvZGVhYmxl
X3R5cGUnLCAiQmxvZyIpOwogICAgcHJlLndyaXRlQXR0cmlidXRlKCdzb3VyY2VfdXJsJywgc291
cmNlX3VybCk7CiAgICBwcmUud3JpdGVBdHRyaWJ1dGUoJ3ByZV9pbmRleCcsIGluZGV4KTsKICAg
IHByZS53cml0ZUF0dHJpYnV0ZSgndGl0bGUnLCAn55SoTWF2ZW7mnoTlu7pKYXZhIFdlYuW8gOWP
keeOr+Wig++8iEpldHR55a655Zmo77yJ5LmL5LiAJyk7CiAgfSk7CgogIGZpeF9pbWFnZV9zaXpl
KCQkKCdkaXYuYmxvZ19jb250ZW50IGltZycpLCA3MDApOwoKICBmdW5jdGlvbiBwcm9jZXNzQ29t
bWVudCgpIHsKICAgICQkKCcjbWFpbiAuYmxvZ19jb21tZW50ID4gZGl2JykuZWFjaChmdW5jdGlv
bihjb21tZW50KXsvLyBjb21tZW50CiAgICAgIHZhciBwb3N0X2lkID0gY29tbWVudC5pZC5zdWJz
dHIoMik7CiAgICAgICQkKCIjIitjb21tZW50LmlkKyIgcHJlW25hbWU9Y29kZV0iKS5lYWNoKGZ1
bmN0aW9uKHByZSwgaW5kZXgpewogICAgICAgIHZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlv
bjsKICAgICAgICBzb3VyY2VfdXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyAiLy8iICsgbG9jYXRp
b24uaG9zdCArIGxvY2F0aW9uLnBhdGhuYW1lICsgbG9jYXRpb24uc2VhcmNoOwogICAgICAgIHNv
dXJjZV91cmwgKz0gIiMiICsgY29tbWVudC5pZDsKICAgICAgICBwcmUud3JpdGVBdHRyaWJ1dGUo
J2NvZGVhYmxlX2lkJywgcG9zdF9pZCk7CiAgICAgICAgcHJlLndyaXRlQXR0cmlidXRlKCdjb2Rl
YWJsZV90eXBlJywgIkJsb2dDb21tZW50Iik7CiAgICAgICAgcHJlLndyaXRlQXR0cmlidXRlKCdz
b3VyY2VfdXJsJywgc291cmNlX3VybCk7CiAgICAgICAgcHJlLndyaXRlQXR0cmlidXRlKCdwcmVf
aW5kZXgnLCBpbmRleCk7CiAgICAgICAgcHJlLndyaXRlQXR0cmlidXRlKCd0aXRsZScsICfnlKhN
YXZlbuaehOW7ukphdmEgV2Vi5byA5Y+R546v5aKD77yISmV0dHnlrrnlmajvvInkuYvkuIAnKTsK
ICAgICAgfSk7CiAgICB9KTsKICB9CgogIGZ1bmN0aW9uIHF1b3RlX2NvbW1lbnQoaWQpIHsKICAg
IG5ldyBBamF4LlJlcXVlc3QoJy9lZGl0b3IvcXVvdGUnLCB7CiAgICAgIHBhcmFtZXRlcnM6IHsn
aWQnOmlkLCAndHlwZSc6J0Jsb2dDb21tZW50J30sCiAgICAgIG9uU3VjY2VzczpmdW5jdGlvbihy
ZXNwb25zZSl7ZWRpdG9yLmJiY29kZV9lZGl0b3IudGV4dGFyZWEuaW5zZXJ0QWZ0ZXJTZWxlY3Rp
b24ocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsKICAgICAgICBFbGVtZW50LnNjcm9sbFRvKGVkaXRv
ci5iYmNvZGVfZWRpdG9yLnRleHRhcmVhLmVsZW1lbnQpO30KICAgIH0pOwogIH0KCiAgY29kZV9m
YXZvcml0ZXNfaW5pdCgpOwogIHByb2Nlc3NDb21tZW50KCk7CiAgbmV3IFdlaWJvU2hhcmUoe3No
YXJlX2J1dHRvbnM6ICQoJ3NoYXJlX3dlaWJvJyksIGltZ19zY29wZTogJCgnYmxvZ19jb250ZW50
Jyl9KTsKPC9TQ1JJUFQ+DQo8L0RJVj4NCjxESVYgaWQ9bG9jYWw+DQo8RElWIGNsYXNzPWxvY2Fs
X3RvcD48L0RJVj4NCjxESVYgaWQ9YmxvZ19vd25lcj4NCjxESVYgaWQ9YmxvZ19vd25lcl9sb2dv
PjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vIj48SU1HIGNsYXNzPWxvZ28gDQp0aXRs
ZT0ic2FyaW7nmoTljZrlrqI6IOecn+aYr+e7neS9s+eahOWktOWDj+WViu+8jOWKm+mHj+a6kOa6
kOS4jeaWreWcsOa2jOS4iuadpe+8gSIgYWx0PXNhcmlu55qE5Y2a5a6iIA0Kc3JjPSJodHRwOi8v
d3d3Lml0ZXllLmNvbS91cGxvYWQvbG9nby91c2VyLzgxODQ3MC84YWY5YmQ0Zi1lOWI2LTNlZmYt
YTdmZi1hMjQzNjk4MmIwMDkucG5nPzEzNjM2MjM1MjUiPjwvQT48L0RJVj4NCjxESVYgaWQ9Ymxv
Z19vd25lcl9uYW1lPnNhcmluPC9ESVY+PC9ESVY+DQo8RElWIGlkPWJsb2dfYWN0aW9ucz4NCjxV
TD4NCiAgPExJPua1j+iniDogNTkxMDI3IOasoTwvTEk+DQogIDxMST7mgKfliKs6IDxJTUcgdGl0
bGU955S3IGFsdD1JY29uX21pbmlnZW5kZXJfMSANCiAgc3JjPSJodHRwOi8vd3d3Lml0ZXllLmNv
bS9pbWFnZXMvaWNvbl9taW5pZ2VuZGVyXzEuZ2lmPzEzMjQ5OTQzMDMiPjwvTEk+DQogIDxMST7m
naXoh6o6IOWkp+i/njwvTEk+DQogIDxMST48SU1HIHNyYz0iaHR0cDovL3NhcmluLml0ZXllLmNv
bS9pbWFnZXMvc3RhdHVzL29mZmxpbmUuZ2lmIj48L0xJPjwvVUw+PC9ESVY+DQo8RElWIGlkPXVz
ZXJfdmlzaXRzIGNsYXNzPWNsZWFyZml4Pg0KPEg1PuacgOi/keiuv+WuoiA8U1BBTiANCnN0eWxl
PSJQQURESU5HLUxFRlQ6IDMwcHg7IEZPTlQtU0laRTogMTJweDsgRk9OVC1XRUlHSFQ6IG5vcm1h
bCI+PEEgDQpocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvdXNlcl92aXNpdHMiPuab
tOWkmuiuv+WuoiZndDsmZ3Q7PC9BPjwvU1BBTj48L0g1Pg0KPERJViBjbGFzcz11c2VyX3Zpc2l0
Pg0KPERJViBjbGFzcz1sb2dvPjxBIGhyZWY9Imh0dHA6Ly9vbmV6bHMuaXRleWUuY29tLyIgdGFy
Z2V0PV9ibGFuaz48SU1HIGNsYXNzPWxvZ28gDQp0aXRsZT0ib25lemxz55qE5Y2a5a6iOiBvbmV6
bHMiIGFsdD1vbmV6bHPnmoTljZrlrqIgDQpzcmM9Imh0dHA6Ly93d3cuaXRleWUuY29tL2ltYWdl
cy91c2VyLWxvZ28tdGh1bWIuZ2lmPzEzMjQ5OTQzMDMiPjwvQT48L0RJVj4NCjxESVYgY2xhc3M9
bGVmdD48QSB0aXRsZT1vbmV6bHMgaHJlZj0iaHR0cDovL29uZXpscy5pdGV5ZS5jb20vIiANCnRh
cmdldD1fYmxhbms+b25lemxzPC9BPjwvRElWPjwvRElWPg0KPERJViBjbGFzcz11c2VyX3Zpc2l0
Pg0KPERJViBjbGFzcz1sb2dvPjxBIGhyZWY9Imh0dHA6Ly9keWxpbnNoaTEyNi5pdGV5ZS5jb20v
IiB0YXJnZXQ9X2JsYW5rPjxJTUcgDQpjbGFzcz1sb2dvIHRpdGxlPSJkeWxpbnNoaTEyNueahOWN
muWuojogIiBhbHQ9ZHlsaW5zaGkxMjbnmoTljZrlrqIgDQpzcmM9Imh0dHA6Ly93d3cuaXRleWUu
Y29tL2ltYWdlcy91c2VyLWxvZ28tdGh1bWIuZ2lmPzEzMjQ5OTQzMDMiPjwvQT48L0RJVj4NCjxE
SVYgY2xhc3M9bGVmdD48QSB0aXRsZT1keWxpbnNoaTEyNiBocmVmPSJodHRwOi8vZHlsaW5zaGkx
MjYuaXRleWUuY29tLyIgDQp0YXJnZXQ9X2JsYW5rPmR5bGluc2hpMTI2PC9BPjwvRElWPjwvRElW
Pg0KPERJViBjbGFzcz11c2VyX3Zpc2l0Pg0KPERJViBjbGFzcz1sb2dvPjxBIGhyZWY9Imh0dHA6
Ly9maWxlcjMyNS5pdGV5ZS5jb20vIiB0YXJnZXQ9X2JsYW5rPjxJTUcgDQpjbGFzcz1sb2dvIHRp
dGxlPSJmaWxlcjMyNeeahOWNmuWuojogIiBhbHQ9ZmlsZXIzMjXnmoTljZrlrqIgDQpzcmM9Imh0
dHA6Ly93d3cuaXRleWUuY29tL3VwbG9hZC9sb2dvL3VzZXIvMjc4MDg5L2U2NGQ1MzJiLTUwZjUt
MzFmNy04OTRlLTk3ZTJmZGJjNzcyMS10aHVtYi5qcGc/MTI3OTE2MjA5OCI+PC9BPjwvRElWPg0K
PERJViBjbGFzcz1sZWZ0PjxBIHRpdGxlPWZpbGVyMzI1IGhyZWY9Imh0dHA6Ly9maWxlcjMyNS5p
dGV5ZS5jb20vIiANCnRhcmdldD1fYmxhbms+ZmlsZXIzMjU8L0E+PC9ESVY+PC9ESVY+DQo8RElW
IGNsYXNzPXVzZXJfdmlzaXQ+DQo8RElWIGNsYXNzPWxvZ28+PEEgaHJlZj0iaHR0cDovL2Vhc2F5
Lml0ZXllLmNvbS8iIHRhcmdldD1fYmxhbms+PElNRyBjbGFzcz1sb2dvIA0KdGl0bGU9ImVhc2F5
55qE5Y2a5a6iOiAiIGFsdD1lYXNheeeahOWNmuWuoiANCnNyYz0iaHR0cDovL3d3dy5pdGV5ZS5j
b20vdXBsb2FkL2xvZ28vdXNlci81NzU4NjIvYjAyMGE0ZTItMTJmOS0zZjI2LThlZDAtMzlmMDA2
YzBmOTYyLXRodW1iLmpwZz8xMzE5NTEwNDA2Ij48L0E+PC9ESVY+DQo8RElWIGNsYXNzPWxlZnQ+
PEEgdGl0bGU9ZWFzYXkgaHJlZj0iaHR0cDovL2Vhc2F5Lml0ZXllLmNvbS8iIA0KdGFyZ2V0PV9i
bGFuaz5lYXNheTwvQT48L0RJVj48L0RJVj48L0RJVj4NCjxESVY+DQo8SDU+5Y2a5a6i5LiT5qCP
PC9INT4NCjxETCBzdHlsZT0iUEFERElORy1CT1RUT006IDVweCIgY2xhc3M9c2VyaWVzPg0KICA8
RFQ+PEEgaHJlZj0iaHR0cDovL3d3dy5pdGV5ZS5jb20vYmxvZ3Mvc3ViamVjdHMvc2FyaW4iIHRh
cmdldD1fYmxhbms+PElNRyANCiAgYWx0PUUzYjE0ZDFmLTRjYzUtMzdkZC1iODIwLWI2YWY5NTE3
NDBiYyANCiAgc3JjPSJodHRwOi8vd3d3Lml0ZXllLmNvbS91cGxvYWQvbG9nby9ibG9nX3dpa2kv
NjAxNjc4L2UzYjE0ZDFmLTRjYzUtMzdkZC1iODIwLWI2YWY5NTE3NDBiYy5qcGc/MTMyMzI0NjIx
OSI+PC9BPiANCiAgPC9EVD4NCiAgPEREPjxBIHRpdGxlPVNwcmluZ+aVsOaNruW6k+iuv+mXruez
u+WIlyBocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9ncy9zdWJqZWN0cy9zYXJpbiIgDQog
IHRhcmdldD1fYmxhbms+U3ByaW5n5pWw5o2u5bqT6K6/6Zeu57O75YiXLi4uPC9BPjxCUj48U1BB
TiBjbGFzcz12aXNpdGVkPua1j+iniOmHj++8mjc5OTg2PC9TUEFOPiANCiAgPC9ERD48L0RMPg0K
PERMIHN0eWxlPSJQQURESU5HLUJPVFRPTTogNXB4IiBjbGFzcz1zZXJpZXM+DQogIDxEVD48QSBo
cmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9ncy9zdWJqZWN0cy9sZWFybmluZ2FuZHJvaWQi
IA0KICB0YXJnZXQ9X2JsYW5rPjxJTUcgYWx0PUMyMDgzZGM1LTY0NzQtMzllMi05OTNlLTI2MzY1
MmQyNzc5NSANCiAgc3JjPSJodHRwOi8vd3d3Lml0ZXllLmNvbS91cGxvYWQvbG9nby9ibG9nX3dp
a2kvNzExNDA4L2MyMDgzZGM1LTY0NzQtMzllMi05OTNlLTI2MzY1MmQyNzc5NS5wbmc/MTM0Mjky
MTkxMCI+PC9BPiANCiAgPC9EVD4NCiAgPEREPjxBIHRpdGxlPUFuZHJvaWTlrabkuaDnrJTorrAg
DQogIGhyZWY9Imh0dHA6Ly93d3cuaXRleWUuY29tL2Jsb2dzL3N1YmplY3RzL2xlYXJuaW5nYW5k
cm9pZCIgDQogIHRhcmdldD1fYmxhbms+QW5kcm9pZOWtpuS5oOeslOiusDwvQT48QlI+PFNQQU4g
Y2xhc3M9dmlzaXRlZD7mtY/op4jph4/vvJo1NzU2NjwvU1BBTj4gPC9ERD48L0RMPg0KPERMIHN0
eWxlPSJQQURESU5HLUJPVFRPTTogNXB4IiBjbGFzcz1zZXJpZXM+DQogIDxEVD48QSBocmVmPSJo
dHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9ncy9zdWJqZWN0cy9pYmF0aXNkZXYiIHRhcmdldD1fYmxh
bms+PElNRyANCiAgYWx0PTVmNDBhMDk1LWIzM2MtM2U4ZS04ODkxLTYwNmZjZjNiOGQyNyANCiAg
c3JjPSJodHRwOi8vd3d3Lml0ZXllLmNvbS91cGxvYWQvbG9nby9ibG9nX3dpa2kvNzI4Njg2LzVm
NDBhMDk1LWIzM2MtM2U4ZS04ODkxLTYwNmZjZjNiOGQyNy5naWY/MTM0NTg5NDg3MiI+PC9BPiAN
CiAgPC9EVD4NCiAgPEREPjxBIHRpdGxlPWlCYXRpc+W8gOWPkeivpuinoyBocmVmPSJodHRwOi8v
d3d3Lml0ZXllLmNvbS9ibG9ncy9zdWJqZWN0cy9pYmF0aXNkZXYiIA0KICB0YXJnZXQ9X2JsYW5r
PmlCYXRpc+W8gOWPkeivpuinozwvQT48QlI+PFNQQU4gY2xhc3M9dmlzaXRlZD7mtY/op4jph4/v
vJo1NzQ5NTwvU1BBTj4gPC9ERD48L0RMPg0KPERMIHN0eWxlPSJQQURESU5HLUJPVFRPTTogNXB4
IiBjbGFzcz1zZXJpZXM+DQogIDxEVD48QSBocmVmPSJodHRwOi8vd3d3Lml0ZXllLmNvbS9ibG9n
cy9zdWJqZWN0cy9vYmplY3RpdmUtYyIgDQogIHRhcmdldD1fYmxhbms+PElNRyBhbHQ9QjI3MmEz
MWQtZTdiZC0zZWZmLThjYzQtYzA2MjRlZTc1ZmVlIA0KICBzcmM9Imh0dHA6Ly93d3cuaXRleWUu
Y29tL3VwbG9hZC9sb2dvL2Jsb2dfd2lraS83ODc0NzUvYjI3MmEzMWQtZTdiZC0zZWZmLThjYzQt
YzA2MjRlZTc1ZmVlLmJtcD8xMzU3MTM0MDczIj48L0E+IA0KICA8L0RUPg0KICA8REQ+PEEgdGl0
bGU9T2JqZWN0aXZlLUPlrabkuaDnrJTorrAgDQogIGhyZWY9Imh0dHA6Ly93d3cuaXRleWUuY29t
L2Jsb2dzL3N1YmplY3RzL29iamVjdGl2ZS1jIiANCiAgdGFyZ2V0PV9ibGFuaz5PYmplY3RpdmUt
Q+WtpuS5oC4uLjwvQT48QlI+PFNQQU4gY2xhc3M9dmlzaXRlZD7mtY/op4jph4/vvJoxMTY2OTwv
U1BBTj4gDQogIDwvREQ+PC9ETD48L0RJVj4NCjxESVYgaWQ9YmxvZ19tZW51Pg0KPEg1PuaWh+er
oOWIhuexuzwvSDU+DQo8VUw+DQogIDxMST48QSBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29t
LyI+5YWo6YOo5Y2a5a6iICgxMDkpPC9BPjwvTEk+DQogIDxMST48QSBocmVmPSJodHRwOi8vc2Fy
aW4uaXRleWUuY29tL2NhdGVnb3J5LzgyNDg3Ij7lvIDlj5HmioDlt6cgKDExKTwvQT48L0xJPg0K
ICA8TEk+PEEgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9jYXRlZ29yeS85MzU3MSI+56ev
5bCR5oiQ5aSaICg0NCk8L0E+PC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5
ZS5jb20vY2F0ZWdvcnkvODczNDUiPuahhuaetuaKgOacryAoMzQpPC9BPjwvTEk+DQogIDxMST48
QSBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2NhdGVnb3J5Lzk1MTgyIj7mjqLntKLlrp7o
t7UgDQooMjcpPC9BPjwvTEk+PC9VTD48L0RJVj4NCjxESVYgaWQ9bW9udGhfYmxvZ3M+DQo8SDU+
56S+5Yy654mI5Z2XPC9INT4NCjxVTD4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5
ZS5jb20vYmxvZy9uZXdzIj7miJHnmoTotYTorq88L0E+ICgzKTwvTEk+DQogIDxMST48QSBocmVm
PSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvcG9zdCI+5oiR55qE6K665Z2bPC9BPiAoMzE0
KSA8L0xJPg0KICA8TEk+PEEgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9ibG9nL2Fuc3dl
cmVkX3Byb2JsZW1zIj7miJHnmoTpl67nrZQ8L0E+IA0KKDcpPC9MST48L1VMPjwvRElWPg0KPERJ
ViBpZD1tb250aF9ibG9ncz4NCjxINT7lrZjmoaPliIbnsbs8L0g1Pg0KPFVMPg0KICA8TEk+PEEg
aHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9ibG9nL21vbnRoYmxvZy8yMDEzLTAzIj4yMDEz
LTAzPC9BPiANCiAgKDMpPC9MST4NCiAgPExJPjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5j
b20vYmxvZy9tb250aGJsb2cvMjAxMy0wMSI+MjAxMy0wMTwvQT4gDQogICg2KTwvTEk+DQogIDxM
ST48QSBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvbW9udGhibG9nLzIwMTItMTIi
PjIwMTItMTI8L0E+IA0KICAoOCk8L0xJPg0KICA8TEk+PEEgDQpocmVmPSJodHRwOi8vc2FyaW4u
aXRleWUuY29tL2Jsb2cvbW9udGhibG9nX21vcmUiPuabtOWkmuWtmOahoy4uLjwvQT48L0xJPjwv
VUw+PC9ESVY+DQo8RElWIGlkPWNvbW1lbnRzX3RvcD4NCjxINT7or4TorrrmjpLooYzmppw8L0g1
Pg0KPFVMPg0KICA8TEk+PEEgdGl0bGU9aUJhdGlz5Lit5L2/55SoWE1MIA0KICBocmVmPSJodHRw
Oi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvMTY2NzE2MSI+aUJhdGlz5Lit5L2/55SoWE1MPC9BPjwv
TEk+DQogIDxMST48QSB0aXRsZT1BbmRyb2lk5a2m5Lmg56yU6K6wMTfvvJrkuK3nuqfop4blm77n
u4Tku7ZEYXRlUGlja2Vy5ZKMVGltZVBpY2tlciANCiAgaHJlZj0iaHR0cDovL3NhcmluLml0ZXll
LmNvbS9ibG9nLzE3NjI1NTQiPkFuZHJvaWTlrabkuaDnrJTorrAxN++8muS4ree6p+inhuWbvue7
hOS7tkRhdGVQaWNrIA0KICAuLi48L0E+PC9MST4NCiAgPExJPjxBIHRpdGxlPWlCYXRpc+afpeiv
ouWkjeadgumbhuWQiCANCiAgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9ibG9nLzE2NzE0
NDIiPmlCYXRpc+afpeivouWkjeadgumbhuWQiDwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9T2Jq
ZWN0aXZlLUPlrabkuaDnrJTorrDkuIPvvJrnsbvnmoTlrprkuYnkuIAgDQogIGhyZWY9Imh0dHA6
Ly9zYXJpbi5pdGV5ZS5jb20vYmxvZy8xNzYxNTc2Ij5PYmplY3RpdmUtQ+WtpuS5oOeslOiusOS4
g++8muexu+eahOWumuS5ieS4gDwvQT48L0xJPg0KICA8TEk+PEEgdGl0bGU9aUJhdGlz5omn6KGM
6Z2e5p+l6K+i6K+t5Y+lKENSVUTvvIzlh73mlbDlkozov4fnqIspIA0KICBocmVmPSJodHRwOi8v
c2FyaW4uaXRleWUuY29tL2Jsb2cvMTY2MzI5MCI+aUJhdGlz5omn6KGM6Z2e5p+l6K+i6K+t5Y+l
KENSVUTvvIzlh73mlbDlkozov4fnqIspPC9BPjwvTEk+PC9VTD48L0RJVj4NCjxESVYgaWQ9Z3Vl
c3RfYm9va3M+DQo8SDU+5pyA5paw6K+E6K66PC9INT4NCjxVTD4NCiAgPExJPjxBIHRpdGxlPeaB
tumtlOecvOedmyBocmVmPSJodHRwOi8vYW5kcmV3LTgzMjMuaXRleWUuY29tLyIgdGFyZ2V0PV9i
bGFuaz7mgbbprZTnnLznnZs8L0E+77yaIA0KICDmsqHmnInku7vkvZXmlYjmnpzlh7rnjrDjgILm
iJHpgq7nrrE4NzY3NTY1MkBxcS5jb23vvIzlj6/ku6Xnu5kgLi4uPEJSPjxBIA0KICBocmVmPSJo
dHRwOi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvNjg1MzU0I2JjMjMyMjY1OCI+5L2/55SoT3BlbiBG
bGFzaCANCiAgQ2hhcnQoT0ZDKeWItuS9nOWbvuihqChTdHJ1dHMy5aSE55CGKTwvQT4gPC9MST4N
CiAgPExJPjxBIHRpdGxlPem7keecvOedm+eUqOadpee/u+eZveecvCBocmVmPSJodHRwOi8vMTM0
MjYxMzU2MjYuaXRleWUuY29tLyIgDQogIHRhcmdldD1fYmxhbms+6buR55y8552b55So5p2l57+7
55m955y8PC9BPu+8miDkuI3plJnvvIzlvojmuIXmmbA8QlI+PEEgDQogIGhyZWY9Imh0dHA6Ly9z
YXJpbi5pdGV5ZS5jb20vYmxvZy82MDM2ODQjYmMyMzIxMTYzIj5KYXZhIFN0cmluZ+Wvueixoeea
hOe7j+WFuOmXrumimChuZXcgDQogIFN0cmluZygpKTwvQT4gPC9MST4NCiAgPExJPjxBIHRpdGxl
PXNodXNoZXl1IGhyZWY9Imh0dHA6Ly9zaHVzaGV5dS5pdGV5ZS5jb20vIiANCiAgdGFyZ2V0PV9i
bGFuaz5zaHVzaGV5dTwvQT7vvJogW2JdW2ldW3Vd5byV55SoW2xpc3RdIFsqXVtsaXN0XSBbKl0g
Li4uPEJSPjxBIA0KICBocmVmPSJodHRwOi8vc2FyaW4uaXRleWUuY29tL2Jsb2cvNTgwMzExI2Jj
MjMyMTA5MSI+TXlTUUzmlbDmja7lupPov57mjqXotoXml7Yod2FpdF90aW1lb3V0KemXrumimOea
hOWkhOeQhjwvQT4gDQogIDwvTEk+DQogIDxMST48QSB0aXRsZT1jaGluYWdkdmVhIGhyZWY9Imh0
dHA6Ly9jaGluYWdkdmVhLml0ZXllLmNvbS8iIA0KICB0YXJnZXQ9X2JsYW5rPmNoaW5hZ2R2ZWE8
L0E+77yaIOaIkeaDs+efpemBk+alvOS4u+S9oOeahC9sb2dpbui/meS4qmFjdGlvbuS9oOeahOWu
nueOsOWcqOWTqumHjDxCUj48QSANCiAgaHJlZj0iaHR0cDovL3NhcmluLml0ZXllLmNvbS9ibG9n
LzgzMDgzMSNiYzIzMjA1MzciPlNwcmluZyAz5LmLTVZDICZhbXA7IA0KICBTZWN1cml0eeeugOWN
leaVtOWQiOW8gOWPke+8iOS6jO+8iTwvQT4gPC9MST4NCiAgPExJPjxBIHRpdGxlPWJ5Zzc2MCBo
cmVmPSJodHRwOi8vYnlnNzYwLml0ZXllLmNvbS8iIHRhcmdldD1fYmxhbms+YnlnNzYwPC9BPu+8
miANCiAgbWFyay4uLi4uPEJSPjxBIGhyZWY9Imh0dHA6Ly9zYXJpbi5pdGV5ZS5jb20vYmxvZy82
ODUzNTQjYmMyMzIwMjAzIj7kvb/nlKhPcGVuIA0KICBGbGFzaCBDaGFydChPRkMp5Yi25L2c5Zu+
6KGoKFN0cnV0czLlpITnkIYpPC9BPiA8L0xJPjwvVUw+PC9ESVY+DQo8RElWIGNsYXNzPWxvY2Fs
X2JvdHRvbT48L0RJVj48L0RJVj48L0RJVj4NCjxESVYgaWQ9Zm9vdGVyIGNsYXNzPWNsZWFyZml4
Pg0KPERJViBpZD1jb3B5cmlnaHQ+DQo8SFI+DQrlo7DmmI7vvJpJVGV5ZeaWh+eroOeJiOadg+Wx
nuS6juS9nOiAhe+8jOWPl+azleW+i+S/neaKpOOAguayoeacieS9nOiAheS5pumdouiuuOWPr+S4
jeW+l+i9rOi9veOAguiLpeS9nOiAheWQjOaEj+i9rOi9ve+8jOW/hemhu+S7pei2hemTvuaOpeW9
ouW8j+agh+aYjuaWh+eroOWOn+Wni+WHuuWkhOWSjOS9nOiAheOAgjxCUj7CqSAyMDAzLTIwMTIg
DQpJVGV5ZS5jb20uIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFsg5LqsSUNQ6K+BMTEwMTUx5Y+3IOS6
rOWFrOe9keWuieWkhzExMDEwNTAxMDYyMCBdIA0KPC9ESVY+PC9ESVY+PC9ESVY+DQo8U0NSSVBU
IHR5cGU9dGV4dC9qYXZhc2NyaXB0PgogIGRvY3VtZW50LndyaXRlKCI8aW1nIHNyYz0naHR0cDov
L3N0YXQuaXRleWUuY29tLz91cmw9IisgZW5jb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LmxvY2F0
aW9uLmhyZWYpICsgIiZyZWZlcnJlcj0iICsgZW5jb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LnJl
ZmVycmVyKSArICImdXNlcl9pZD0nIHdpZHRoPScwJyBoZWlnaHQ9JzAnIC8+Iik7CjwvU0NSSVBU
Pg0KDQo8U0NSSVBUIHR5cGU9dGV4dC9qYXZhc2NyaXB0PgoKICB2YXIgX2dhcSA9IF9nYXEgfHwg
W107CiAgX2dhcS5wdXNoKFsnX3NldEFjY291bnQnLCAnVUEtMTk1NTc1MzMtMSddKTsKICBfZ2Fx
LnB1c2goWydfdHJhY2tQYWdldmlldyddKTsKCiAgKGZ1bmN0aW9uKCkgewogICAgdmFyIGdhID0g
ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7IGdhLnR5cGUgPSAndGV4dC9qYXZhc2Ny
aXB0JzsgZ2EuYXN5bmMgPSB0cnVlOwogICAgZ2Euc3JjID0gKCdodHRwczonID09IGRvY3VtZW50
LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8vc3NsJyA6ICdodHRwOi8vd3d3JykgKyAnLmdv
b2dsZS1hbmFseXRpY3MuY29tL2dhLmpzJzsKICAgIHZhciBzID0gZG9jdW1lbnQuZ2V0RWxlbWVu
dHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOyBzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGdhLCBz
KTsKICB9KSgpOwoKPC9TQ1JJUFQ+DQo8L0JPRFk+PC9IVE1MPg0K

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330556/91b557ee-c03e-3679-b993-1e9010788189.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACVAWkDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDrby61
O51m4srG5FtDbhfMlMYc5YZCqD375PTjg5qx9nvP+gxf/wDfMH/xulth/wATDVf+vsf+iIqztW19
NPu2t4hHNKirmEbi5Z2AX7oYgAZydp5Kjqaht3sWkrGh9nu/+gvf/wDfMH/xuj7Pef8AQYv/APvm
D/43WXZ69fFpTe6aRGiPIXjSZMKOQD5saLnHfd+Aqnd+Jr2GO3LpbWburF1neBiTnHANwnHUeuQe
BRqGh0H2e7/6C9//AN8wf/G6Ps95/wBBe/8A++YP/jVY914nNnpNldOdNmkuARtN4IwzDspAdfqS
2Ae9WrHWzc+dPNLYLbW0ReRraZrhfxk2qqkf3eSc9u5qGhe+z3n/AEF7/wD75g/+NUfZ7z/oL3//
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
SS6l5yQJY2qRtNG4fOZN0ZBGSwdiqqB90pjOed7SbdrTRtItrpZEnhhjjKoSQHEeCG28Y69eM474
oA0qKKKACiiigApku0JJLLceRFEu53JUADnJJI4Ap9Rz3ttp8ElzezLDApRWkbou5toz6DJHPQUA
V7a8067VmtdainVGVWMc0TBSxwoOB1J4HqafLcWUH2jztXSP7Nt8/fLGPK3fd3cfLntnrXPXsN9f
aBb2Omqxe9v7qVZfnVFTfLJHJ5iqdo3eUy/3uMcE1cSO61XVdNvWtZIYLuCOW7ilRkMLQMzKmSoJ
JklUj7uREeoOKANxIVkZ1S9kZo22uAUJU4BweODgg/QimSCGKeKCTUCk02fKjZkDPgZO0YycDris
Pw/LqCa7cz3VtOLbU2kaNysgKmJ2VS6FQIy0RQDJ5EQzya0ddhlub3SIYJLmFhdNI00MQby1EMgy
SylRksBz1zx7AEkN5p1xLDFBrUUsk6lokSaJjIBnJUAcj5W6eh9Kb/aGleX5n9vW+zZ5m7z4sbN2
3dnHTd8ufXiue0SG4GiwWL2d2lxLcWMyq9s6gLEtuH3MRhSDDJwSCcDGdwzk2Gj3VjpU5Nlfbv7E
mtFXyGYlnWGQDAGc+ZNKvsE5+6xoA76ze1v4jLY6mLmMNtLwvG4B9MgdeR+dWPsrf8/M35L/APE1
R8O4FnOM3cj/AGhy891bmF5s4YHBAJAUqmcAfJgAACtagCv9lb/n5m/Jf/iaPsrf8/M35L/8TVii
gCv9lb/n5m/Jf/iaPsrf8/M35L/8TViigCv9lb/n5m/Jf/iaPsrf8/M35L/8TViigCv9lb/n5m/J
f/iaPsrf8/M35L/8TViigCv9lb/n5m/Jf/iaPsrf8/M35L/8TViigCv9lb/n5m/Jf/iaPsrf8/M3
5L/8TViigCv9lb/n5m/Jf/iaPsrf8/M35L/8TViigCv9lb/n5m/Jf/iaPsrf8/M35L/8TViigCv9
lb/n5m/Jf/iaPsrf8/M35L/8TViigCqYzEwBldwR/EBx+Qqrqv8AyCbz/rg//oJq9N99fof6VR1X
/kE3n/XB/wD0E0AhusLi0jP/AE923/o+OtasXVXYwICSR9rtv/R8dbVShsxIf+P/AFT/AK+x/wCi
Iqn03/j2f/rvN/6MaoIf+Qhqn/X2P/REVT6b/wAez/8AXeb/ANGNSXxMb2RNPbwXHl/aIY5fKcSJ
vUNsYdGGehHrRc28F3A0F1DHNC+N0ciBlODnkH3qWirJM+XQtGmleWXSbCSR2LM7WyEsT1JOOTU9
np1jYb/sNlbW3mY3+TEqbsdM4HPU/nVmigCL7PB9l+y+TH9n2eX5W0bNuMbcdMY4xT5Y0mieKVFk
jdSrKwyGB6gjuKdRQBTtNK02xlMtlp9pbyFdpeKFUJHpkDpwKuUUUAFFFFABRRRQAUqsVJIxz7Ul
RSzOjhY7aWY4ydhUY/76IoBuxY8xv9n8qPMb/Z/Kqnn3P/QNuf8AvqL/AOLo8+5/6Btz/wB9Rf8A
xdOwrk1zHFdwNBdwQzwvjdHIgZTg5GQeOoqKysrPT9/2CxtLXzMb/JhCbsdM469T+dJ59z/0Dbn/
AL6i/wDi6PPuf+gbc/8AfUX/AMXRYLlvzG/2fyo8xv8AZ/Kqnn3P/QNuf++ov/i6PPuf+gbc/wDf
UX/xdFguW/Mb/Z/KjzG/2fyqp59z/wBA25/76i/+Lo8+5/6Btz/31F/8XRYLlvzG/wBn8qPMb/Z/
Kqnn3P8A0Dbn/vqL/wCLo8+5/wCgbc/99Rf/ABdFguW/Mb/Z/KjzG/2fyqp59z/0Dbn/AL6i/wDi
6PPuf+gbc/8AfUX/AMXRYLlvzG/2fyo8xv8AZ/Kqnn3P/QNuf++ov/i6PPuf+gbc/wDfUX/xdFgu
W/Mb/Z/KjzG/2fyqp59z/wBA25/76i/+Lo8+5/6Btz/31F/8XRYLlvzG/wBn8qPMb/Z/Kqnn3P8A
0Dbn/vqL/wCLo8+5/wCgbc/99Rf/ABdFguW/Mb/Z/KjzG/2fyqp59z/0Dbn/AL6i/wDi6PPuf+gb
c/8AfUX/AMXRYLlvzG/2fyo8xv8AZ/Kqnn3P/QNuf++ov/i6PPuf+gbc/wDfUX/xdFguW/Mb/Z/K
jzG/2fyqp59z/wBA25/76i/+Lo8+5/6Btz/31F/8XRYLlvzG/wBn8qPMb/Z/Kqnn3P8A0Dbn/vqL
/wCLo8+5/wCgbc/99Rf/ABdFguiyxLEFscelU9V/5BN5/wBcH/8AQTUsUzu+yS2lhOMjeVOf++Sa
i1X/AJBN5/1wf/0E0mNalfU/9Sv/AF92/wD6PjrcrD1P/Ur/ANfdv/6PjrcqY7FS3MSL/kIap/19
j/0RFU+m/wDHs/8A13m/9GNVeL/kIap/19j/ANERVY03/j1f/rvN/wCjGpL4mN7Ig18xpp3nTySR
W8LiSaSOSVWVBnJAiIY/ngZ3HO3B5q0s08yxijudRW7mhIn8976FLm4Coc7jjHyRyDPbj5TjFdhd
x3MsQS1uFgYt8zmPedvfbzgN6Egj2NZ8eh/ZPKk067kiniTYDOPOjIOMjZkbBx92MoMgcEACrIOK
8SSxR6vq8VzHpkkz3cW2SW3iMiKUiwRvmBwB2KlSQc4BIGhpTvLoupLAlkLO61OC3kjt0WNQjiJJ
Nux3XkMBgMCMsc54Gzqvh6+1K4eQ6osaNKjqqrOANrAqMCcLn5RyFHqMHmrUGjXS2TWtzfLKv2iG
dW2ykjY6uRmSRzg7QOCMcnmgDkXvC/iSZ2uWDzXwtGiW8ZSEE7LkYuQ+cMTjZtHYAZJ7TUGln1S1
sEnkgjkhlmZ4iA+5GjCjJzxl84xztAORkHJ/4Ra/3bv7Xjz9p+1Y8qbZu83zMbPP2Yz7frzXQXlp
9o2SxP5NzFnypQM4z1BH8SnAyPYEYIBABi6HPeazbu097NGIbeGCVYwqMt0FDyN06jcq7TxkOCuK
1dLu573SdOvGSPdcwpJLgkBdyZ+Uc55wME9O/GDBa6bexwyW897CIJGZyLWB4n3M+5vmMjYBy3TB
GeCMCtBbeJEhSNfLSH/VpGSqgYIAwOCMHoeOnoKAJaKKKACiiigAqvd2S6hFJbtLLDzFIske3crI
+9SNwI6qOoqxVW+tzdQvB580AdoyZIiwbarhmXKkEZGRkHvTQia1gvLWKRZLxr5mlBRpwsZRPlBG
UUAkfMRwM5A96ikkktteiMjsYL2IQoM8JKm5+B6spbnjHlAc5FPt7eztoDDCJwC4kZi8jO7AjBZy
dzdAOSeBjpxUs4trjy/NViYnEiEKwKsO4I56ZB9QSDwSKVmF0c/p2p6lZ2moX98bu8srRrgOzrAG
YRylQYwu3gKrFt2DkDb3rYfVglukpsbsPNL5dvCQivN8pbIBYBRtDHDlT8pGM4BjXS9MXS59N2XJ
tbhmaRWmmJbcct8xO7BPUZwcn1NTz29ncWsdtKJysWNjh5BIpAxkODuzjIJzkgnPU0WYXRVuvEVr
D9i+z29zeG+RZIBCFUurYwQHZSeDk4ztHLYGDUthrK30csosL6KKHzBI0kYOHRirIApJY8dVBB6Z
zxVO90dJdQhurC7ksgkSQlI0kACISV2qrKuRuP31deny4yDftLLT7Ozls4o5Xt5WZpEmaSUMW+9n
fng85HTJPqaLMLozR4wsXjha2tbm5aRzGUhaJtjBo1ALb9pyZo/uk9ecYON61uIru1hurd98MyLJ
G2CMqRkHB56VkxaHo8VwbgRXLyllYtLPNIchkYH5mPOYo/wUDpxWjai2tLWG1t1ZIYUWONdrHCgY
AyeelFmF0YXh+51aW8v2upr65gtfNRFkjhAuGEzquwqFwQI8HceS+cKACbNzdzSaLpWpWd7cosj2
uVdI8zJLJGp3/LwcMfukcn6VdtLOxs7OW0t/tKxSszNmWVmy33iGJLAk5PB6knrUD6PpT2NtYlbs
W9rjykW4nXbggjkNk4IGM5xjjFFmFyS+16wsNVt9OuJMTz7cfMoxuYqnBOWywI+UHHVsDmovt51j
+09LtkubOaNHiNwWjzGxyqsFD7xn7ykgZAznpVhrOxaWCX/SRJAqqHWWVS4XoHIP7wDn72ep9Tkh
s7GG/a+X7S1wysu6SWVwoYgsFViQoyo6AdBRZhcpalf3Nx4RudStZ5bK5t4JZGVAj7ZIwwaMllII
DqRkAZxwcVYm1W30m4s9PvbmeaW4bas8oRSxZsKMDbuOSB8inAwWwDktvNLtLrcguLuCCXzBPBFx
HMHxvDAqcZweV2nLMc5YmpNQ0/TdRdXukn3Lt+aKSWInady52EZweRnoScYzRZhcitPEEd0+0aff
IV80yZVHMQjJUkhGJ5YMqgAlirYGBmoH1qG+01NWspWEOn3G67jEisNmwhsshKsFVxJgFslQOvTR
W104SXkn2ZS17j7SWjLeaAu0A5HTAxjpyfU1FaafptolykaTyLd/69Z5JZhJxt53k9sD3AHoKLML
k95d+RfWEBE4FzKyBkCbMiNm2tnnBAJG0dV5OODga1rF2Zr5tPuLmCGHTrqRH2RFGlgdASuQW4JZ
TuAB6r61rG1Z761eS5za2bb4I/JcybvLKfPIzHcMM3YHOOeDmK70PR7yWSSaK5zIrqyxzzRoQ+C4
2qwGGIyeOTycmizC6IptblvLBLvTA0VuL+GHz3COtwhnEb+Xhjge5HQ8dcjoKx5NH0qVJEdbvErx
yPi4nBZ4wArZDZyAF57lQTkgGtASRCVpMy7mUKR82MDPQdAeTz1PHoKLMLoxPDGpXd55cmoPcq17
apcQxSxxBB03mMoSdvzxgB/m9zzi/qL3Euq2lhBdS2qywSzNJEqF8o0YA+dWGP3hzxngc9ckGn6b
b+Z5KTpvQxjEkv7pD1WPn92OBwmOg9BiW9t7O+2GcThkzteJ5InAPUbkIODgZGcHA9BRZhdDtHu5
L/RbG9mVVkuLeOVwowAWUE49uao6Y2qSSyg3qzYiKyu0YMUdxx8sW0KzIp3BtxJ4UZyHxLIt/Gwj
0+6sbe1RQsUTae7FAABjIkUY+gGBRZ6Zp1lEYrZr5YzF5IQ3U7BF/wBkFvlIxwRgjtRZhdE+hXEt
3oGnXVw++aa1ikkbAGWKAk4HHU1fqnYx2mn2cVpaiVYIV2orF3Kj0y2TgfoKn+0R/wC1/wB8H/Ci
zC6GT/8AHxH/ALjfzWqeq/8AIJvP+uD/APoJq1I4knQqGwqnJIx1I/wqrqv/ACCbz/rg/wD6CaHs
NFbU/wDVL/192/8A6PjrdrC1L/VL/wBfdv8A+j463amOxUtzDj/4/wDVP+vsf+iIqsab/wAer/8A
Xeb/ANGNVaP/AJCGqf8AX2P/AERFVnTf+PV/+u83/oxqS+Jjfwot0UUVZAUUUUAFFFFABRRRQAUU
UUAFFFFABRRRQAUUUUAFFFFABRRRQAUUVnHULiSaRbSz85I2KFmk28jr2NVGLlsRKcY7mjRWd9r1
L/oGp/3/AP8A7Gj7XqX/AEDU/wC//wD9jVezkT7aH9JmjRWZLf30MTyy2ESRopZma4wFA6knbwKd
9r1L/oGp/wB//wD7Gj2cg9tD+kzRorMjv76VS0dhE4DFSVuMjIOCPu9QQR+FO+16l/0DU/7/AP8A
9jR7OQe2h/SZo0Vnfa9S/wCgan/f/wD+xoN5qIBJ01cD/pv/APY0ezkL28P6TNGiobS4W6tknQEB
s8HqCDgj86jM9w88sdtBGyxEKzSSFcnAOBhT2IqHoappq6LVFVt1/wD8+9r/AOBDf/EUbr//AJ97
X/wIb/4ikMs0VW3X/wDz72v/AIEN/wDEUbr/AP597X/wIb/4igCzRVR5rxGRXis1aRtqA3LAscE4
HycnAJ/A07df/wDPva/+BDf/ABFAFmiq26//AOfe1/8AAhv/AIijdf8A/Pva/wDgQ3/xFAFmqmq/
8gm8/wCuD/8AoJqW2naYSLJH5ckT7HXdkZwDwfTBFRar/wAgm8/64P8A+gmhgirqX+qX/r7t/wD0
fHW9WDqX+rX/AK+7f/0fHW9UQ2KluYSf8hDVP+vsf+iIqs6Z/wAer/8AXeb/ANGNVVf+Qhqf/X2P
/RENWtM/49W/67zf+jGoXxMb+FFuiiirICiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
KKKKACszSpAhuwc/8fMn/oRrTrBDTWdxcI1rO4eVnVo4ywIJJ7fWtaaumjCs7OLNrz196PPX3rI+
2yf8+V3/AN+W/wAKPtsn/Pld/wDflv8ACq9mT7Zf0jmtSvYLTVNZkXSrWIyFIvMbaNyiSEuXUFQd
3n5OXAYKoYDBzBoV8Z9Ju2jS3ihg2X0y2s5tFG5JAykwlzhQqYXCscZYZ67ctlZy3/246Zdi4Z1Z
3EL5kxtIB46Aoh4xyvoWBallCjMottR8ho4ofIMR2eXGG2p93JGWJOSc9DxkGfZsft4/0iiWj+2X
diPKtLxpBGc+IrhZHdkXaygqdxwVAyOq4xxXceevvXKRWk8EkzW9zrUYlfew8lH5ChRy0ZJ4UDkk
8c5OTWp9tk/58rv/AL8t/hTVNidZf0jX89fekeZfLbr0rJ+2yf8APld/9+W/wpGvZCpAsrvn/pi3
+FNQE6ya/wCAXdD/AOQXH/vyf+htT4JAk95nvP8A+00o0mGSDToo5V2vlmIPbLE/1qCUmK6uA6Sg
PIHVliZwRsUfwg4OV71lP4mbUk1BJl3zx70eePeqHnL6T/8AgNL/APE0ecvpP/4DS/8AxNSaHL+K
IrY+I3nmsrVrfFk1zNLAh2jz2BJYsCMqMH5WyBg4FX9GF15mrW5aWdfuCO9kklQ/vpvkO4nGYvL9
eGViDnm3dabpt1OtxJaEXCyJJ562T+ZlGBHzbM/wgfShbC2CurteSLKP36vDKRMcg7m+X8MDAK/K
RgAAA5/U9VjGrSpb3MEcUDo0b+apaUG32hyzXCEnbKfmAydq/Mccdhot4J9DsJvKji8y2jby4l2o
uVBwo7AdqqpFHGbtonuke6fezC2kJRtiplcpjooPOeadZpFZ2UFrF9pMcEaxqWt5MkKMDPy+1AGr
5496PPHvVDzl9J//AAGl/wDiaPOX0n/8Bpf/AImgC3aHdcXp9Zl/9FJSar/yCbz/AK4P/wCgmk08
MRPIyOiyS5XeMEgIq5x25U0uq/8AIJvP+uD/APoJoAqaj/q1/wCvu3/9Hx1v1z+ofcX/AK+7f/0f
HXQVENip7mAP+Qhqf/X2P/RENW9M/wCPVv8ArvN/6MaqAlT+2dVt8/vFmSXH+y0SKD+aGpI2uYQy
QzxBC7OA8BYjcxY87x3PpSulJ3KteKsa1FZn2i9/5+Lf/wABm/8Ai6PtF7/z8W//AIDN/wDF0+dE
8jNOisz7Re/8/Fv/AOAzf/F0faL3/n4t/wDwGb/4unzoORmnRWZ9ovf+fi3/APAZv/i6PtF7/wA/
Fv8A+Azf/F0c6DkZp0VmfaL3/n4t/wDwGb/4uj7Re/8APxb/APgM3/xdHOg5GadFZn2i9/5+Lf8A
8Bm/+Lo+0Xv/AD8W/wD4DN/8XRzoORmnRWZ9ovf+fi3/APAZv/i6PtF7/wA/Fv8A+Azf/F0c6DkZ
p0VmfaL3/n4t/wDwGb/4uj7Re/8APxb/APgM3/xdHOg5GadFZn2i9/5+Lf8A8Bm/+Lo+0Xv/AD8W
/wD4DN/8XRzoORmnRWZ9ovf+fi3/APAZv/i6PtF7/wA/Fv8A+Azf/F0c6DkZp0VmfaL3/n4t/wDw
Gb/4uj7Re/8APxb/APgM3/xdHOg5GadFZn2i9/5+Lf8A8Bm/+Lo+0Xv/AD8W/wD4DN/8XRzoORmn
RWZ9ovf+fi3/APAZv/i6PtF7/wA/Fv8A+Azf/F0c6DkZp0VmfaL3/n4t/wDwGb/4uj7Re/8APxb/
APgM3/xdHOg5GadFZn2i9/5+Lf8A8Bm/+Lo+0Xv/AD8W/wD4DN/8XRzoORmnRWZ9ovf+fi3/APAZ
v/i6PtF7/wA/Fv8A+Azf/F0c6DkZp0VmfaL3/n4t/wDwGb/4uj7Re/8APxb/APgM3/xdHOg5GadF
Zn2i9/5+Lf8A8Bm/+Lo+0Xv/AD8W/wD4DN/8XRzoORmnRWZ9ovf+fi3/APAdv/i6T7Re/wDPxb/+
Azf/ABdHOg5GalFZf2i9/wCfi3/8Bm/+Lo+0Xv8Az8W//gM3/wAXRzofIzUorL+0Xv8Az8W//gM3
/wAXS/aL3/n4t/8AwGP/AMXRzoORmnVTVf8AkE3n/XB//QTVf7Re/wDPxb/+Azf/ABdMna7uIJIJ
LiHZIpRttuQcEYOPnpc6DkYmofcX/r7t/wD0fHXQVzWpTon2ZGOGuL2BUHqRKrH9FNdLRDYJ7mRf
+H7W+vvtpnuoLjoHhcKQMAY6dOBweKd/Y8n/AEFrz/v3b/8AxuiiqaRNw/saT/oLXv8A37t//jdH
9jSf9Ba9/wC/dv8A/G6KKLILsP7Gk/6C17/37t//AI3R/Y0n/QWvf+/dv/8AG6KKLILsP7Gk/wCg
te/9+7f/AON0f2NJ/wBBa9/792//AMbooosguw/saT/oLXv/AH7t/wD43R/Y0n/QWvf+/dv/APG6
KKLILsP7Gk/6C17/AN+7f/43R/Y0n/QWvf8Av3b/APxuiiiyC7D+xpP+gte/9+7f/wCN0f2NJ/0F
r3/v3b//ABuiiiyC7D+xpP8AoLXv/fu3/wDjdH9jSf8AQWvf+/dv/wDG6KKLILsP7Gk/6C17/wB+
7f8A+N0f2NJ/0Fr3/v3b/wDxuiiiyC7D+xpP+gte/wDfu3/+N0f2NJ/0Fr3/AL92/wD8booosguw
/saT/oLXv/fu3/8AjdH9jSf9Ba9/792//wAbooosguw/saT/AKC17/37t/8A43R/Y0n/AEFr3/v3
b/8AxuiiiyC7D+xpP+gte/8Afu3/APjdH9jSf9Ba9/792/8A8booosguw/saT/oLXv8A37t//jdH
9jSf9Ba9/wC/dv8A/G6KKLILsP7Gk/6C17/37t//AI3R/Y0n/QWvf+/dv/8AG6KKLILsP7Gk/wCg
te/9+7f/AON0f2NJ/wBBa9/792//AMbooosguw/saT/oLXv/AH7t/wD43R/Y0n/QWvf+/dv/APG6
KKLILsP7Gk/6C17/AN+7f/43R/Y0n/QWvf8Av3b/APxuiiiyC7D+xpP+gte/9+7f/wCN0f2NJ/0F
r3/v3b//ABuiiiyC7D+xpP8AoLXv/fu3/wDjdH9jSf8AQWvf+/dv/wDG6KKLILsP7Gk/6C17/wB+
7f8A+N0f2NJ/0Fr3/v3b/wDxuiiiyC7D+xpP+gte/wDfu3/+N0f2NJ/0Fr3/AL92/wD8booosguy
CPwzajUI76a8vLieNgyGV1wvOcABQAOO2K3KKKYmf//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330558/f9e49abf-0a8d-3de9-be1a-2c4112461592.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACVAWkDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDrby61
O51m4srG5FtDbhfMlMYc5YZCqD375PTjg5qx9nvP+gxf/wDfMH/xulth/wATDVf+vsf+iIqztW19
NPu2t4hHNKirmEbi5Z2AX7oYgAZydp5Kjqaht3sWkrGh9nu/+gvf/wDfMH/xuj7Pef8AQYv/APvm
D/43WXZ69fFpTe6aRGiPIXjSZMKOQD5saLnHfd+Aqnd+Jr2GO3LpbWburF0neBiTnHANwnHUeuQe
BRqGh0H2e7/6C9//AN8wf/G6Ps95/wBBe/8A++YP/jVY914nNnpNldOdNmkuARtN4IwzDspAdfqS
2Ae9WrHW/tPnTzS2C21tEXka2ma4X8ZNqqpH93knPbuahoXvs95/0F7/AP75g/8AjVH2e8/6C9//
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330560/c19a28c1-bf7a-3652-af7a-8f50dd1876aa.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACVAWkDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDrby61
O51m4srG5FtDbhfMlMYc5YZCqD375PTjg5qx9nvP+gxf/wDfMH/xulth/wATDVf+vsf+iIqztW19
NPu2t4hHNKirmEbi5Z2AX7oYgAZydp5Kjqaht3sWkrGh9nu/+gvf/wDfMH/xuj7Pef8AQYv/APvm
D/43WXZ69fFpTe6aRGiPIXjSZMKOQD5saLnHfd+Aqnd+Jr2GO3LpbWburF0neBiTnHANwnHUeuQe
BRqGh0H2e7/6C9//AN8wf/G6Ps95/wBBe/8A++YP/jVY914nNnpNldOdNmkuARtN4IwzDspAdfqS
2Ae9WrHWzc+dPNLp621vEXka2ma4X8ZNqqpH93knPbuahoXvs95/0F7/AP75g/8AjVH2e8/6C9//
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
OcABQAOO2K3KKKaEz//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330563/0abbaf87-461c-3250-a247-2f21affa400b.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCADeAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59Q
udWuYYbpra1tiqkrGrM7FQ2BuBAABH51L5d1/wBBS8/75h/+N0R/8f2o/wDXyP8A0TFWDrfiNtL1
Ca3+y3MyxorlotgAB7c8k8E4Haou27IvRK7N7y7r/oKXn/fMP/xul8q7/wCgpef98w//ABuuRtvG
bTaraWLW13A9yy7PNVMYJ6nH41u+JNQ1DT/spsFiCO5DtIu7J/u469Mn8KTugVmaPlXf/QUvP++Y
f/jdHlXf/QUvP++Yf/jdc5Dq+uT6deXEu1FjGVNtEGKNx8p3dufT8afbX+tnX0t5GmNt5uCHiQHb
uxzhf607MNLXN8x3g/5id5/3zD/8boEd3/0E7z/vmH/43XOz6lrLyyy20s5t9zOhEK4CA4Jxtycf
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
y/lblWxnBH0raHiCzS1FqkU5gEdyuwqoBMhyhxnHH6dqp22o2MOixWjiaSVLtbkqY12NgY25z+uP
woAx9pyBg5PtVxdLne/ayjeF5guVCyAhzjOFPc+3rxWjrOtRajcwPFJPEscruHEaq0YY8AYOTj6j
6Co9R1DTb3XTqDLctEVBMWApLKoAGQehxknrQBjMpVirAhgcEHqKbVi+vJb+8lup9vmSHJ2jAqvQ
AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAE
1rczWkvm277HxjOAaZJI8sjSSuzuxyzMckn1plFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRR
QAUUUUAFFFFABRRRQB0/w5/5HSz/AN2T/wBAavbB0rxP4c/8jpZ/7sn/AKA1e2DpQBQvv+P5P+uB
/wDQhTtK/wCQndf9e8P/AKHLTb7/AI/k/wCuB/8AQhTtK/5Cd1/17w/+hy1n9s0fwFeT/j/1D/r4
H/omKvIPHH/I36h/vj/0EV6/J/x/6h/18D/0TFXkHjj/AJG/UP8AfH/oIoj8TCXwowKKKK0Mwooo
oAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAC
iiigAooooA6f4c/8jpZ/7sn/AKA1e2DpXifw5/5HSz/3ZP8A0Bq9sHSgChff8fyf9cD/AOhCnaV/
yE7r/r3h/wDQ5abff8fyf9cD/wChCnaV/wAhO6/694f/AEOWs/tmj+Aryf8AH/qH/XwP/RMVeQeO
P+Rv1D/fH/oIr1+T/j/1D/r4H/omKvIPHH/I36h/vj/0EUR+JhL4UYFFFFaGYUUUUAFFFFABRRRQ
AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFAB
RRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAdP
8Of+R0s/92T/ANAavbB0rxP4c/8AI6Wf+7J/6A1e2DpQBQvv+P5P+uB/9CFO0r/kJ3X/AF7w/wDo
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
3YpSVrI//9k=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330565/ee8b6262-0b42-344b-94f2-b2715a7c8e79.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCADQAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59Q
udWuYYbpra1tiqkpGrM7FQxA3AgAAj86l8u6/wCgpef98w//ABuiP/j+1H/r5H/omKsDW/Ej6XqE
1v8AZbmZY0Vy0RQAZHTnkngnA7VF23ZF6JXZv+Xdf9BS8/75h/8AjdL5V3/0FLz/AL5h/wDjdchb
eM2m1W0sWtbuB7ll2eYExgnqcfjW74kv9Q08WpsBEEdyHaRd2T2XHXpk/hSd0CszS8q7/wCgpef9
8w//ABujyrv/AKCl5/3zD/8AG65yHVtcn068uJdqrGMqbaNWKNx8p39ufT8adbX+tHX0t5HmNt5u
CHjQHbuxzgU7MNLXOh8q7/6Cl5/3zD/8bo8q7/6Cl5/3zD/8brnJ9R1l5ZZbaWf7PuZ0IhThAcE4
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330567/bf157bba-750c-3c3c-a095-f3ae64002c08.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAHjAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59R
udWuYYbpra1tiqkrGrM7FQxALAgAAj86l8u6/wCgpef98w//ABuiP/j+1H/r5H/omKsHW/Ej6XqE
1v8AZbmZY0Vy0RQAZHTnkngnA7VF23ZF6JXZveXdf9BS8/75h/8AjdL5V3/0FLz/AL5h/wDjdcjb
eM2m1W0sWtruB7ll2eaExgnqcfjW54kv9Q0/7MbBYgjuQ7SLuyey469Mn8KTugVmaXlXf/QUvP8A
vmH/AON0eVd/9BS8/wC+Yf8A43XOQ6trk+nXlzLtRYxlTbRKxRuPlO/t+H4062v9bOvpbyPMbbzc
EPGgO3djnAp2YaWudD5V3/0FLz/vmH/43R5V3/0FLz/vmH/43XOT6jrLyyy20s/2fczoRCmAgOCc
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
wB4P0PrW9HrVldHVLmeaS2a4ihxGh+YuhGSuBgZA7+poA5gQTFSwicgAknaeg6moq7KPxHaLbPfO
f37X0k62iE42smMMcYxnnArjaACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACi
iigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
KACiiigAooooAKKKKAOn+HP/ACOln/uyf+gNXtg6V4n8Of8AkdLP/dk/9AavbB0oAoX3/H8n/XA/
+hCnaV/yE7r/AK94f/Q5abff8fyf9cD/AOhCnaV/yE7r/r3h/wDQ5az+2aP4CvJ/x/6h/wBfA/8A
RMVeQeOP+Rv1D/fH/oIr1+T/AI/9Q/6+B/6JiryTxnbzTeLNTeKGR1jcF2VSQvyjr6UR+JhL4UM1
Gy0uHRvtsHW5WJbYbiTvUfvsj64/OszULOO0S1aNpyZog7ebCYwD/s/3h70s0mpS2FtBKsxtVb9w
DHxk+hxzmmNHf3RVGjuZjF+7UEM23H8Pt9K0Mw0y2S8v4reVpgj5yYYjI/Tso61XlUJK6jOFYgZG
D+VWI7fULa6jEUN1FcNkx7VZXPrjvUUdvc3EjiOGWV15fapYj60AbTWWl/2D/aAHWAQj5jn7Tuye
PTZ+Fc/Vk31ybAWPmn7MG3+XgY3etVqACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
ooAKKKKACiiigAooooAKKKKACiiigAooooA6f4c/8jpZ/wC7J/6A1e2DpXifw5/5HSz/AN2T/wBA
avbB0oAoX3/H8n/XA/8AoQp2lf8AITuv+veH/wBDlpt9/wAfyf8AXA/+hCnaV/yE7r/r3h/9DlrP
7Zo/gK7/APH/AKh/18D/ANExV5x4nlj+1eJLfz445nuYXVGfaXVVOcevUV6O/wDx/wCof9fA/wDR
MVeSeNbeeTxZqDpDIy+YOQhI6CiPxMJfCgW4hXTPD6tdRZgunaVQ+TGCykEj6A1ujWNKnvYpYZIb
V11YSzHfhXVQw8wfUYz7muF+y3G3d5Eu099hxSSW80S5lhkQdMspFaGZ0cepwzJeWKSrayGLy7eR
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330572/54827988-e882-3a42-a5a1-92b2b96ac325.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAETAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDspptQ
uNWuYorpra1t2VcoilnYqGIywOAAR271Lsuv+gnef98w/wDxuhP+P3UP+vkf+iY6lrNydzSKViLZ
df8AQTvP++Yf/jdJsuv+gnef98w//G6loqeZj5URbLr/AKCd5/3zD/8AG6Nl1/0E7z/vmH/43UtJ
RzMOVEey6/6Cd5/3zD/8bo23X/QTvP8AvmH/AON1JRRzMOVEe26/6Cd5/wB8w/8Axujbdf8AQTvP
++Yf/jdPozRzMfKiPbdf9BO8/wC+Yf8A43Ri6/6Cd5/3zD/8bp+aSjmYcqGYuv8AoJ3n/fMP/wAb
o/0r/oJ3n/fMP/xunE0hNLmY+VDc3X/QSu/yh/8AjdJm6/6CV3+UP/xulzRmlzsORCbrv/oJXf5Q
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
cUCQQ+VDlQM474qrbaRYwRW6tbxyyQKAksiAt1znP15pk04jmiBYkMDuGTV22ffAjZOehrOlVUny
obi1qRyWNnLG0ctrC6M/mMpQEFv73196mjjSKNY4kVEUYVVGAB6CqbazpymcNdKpgx5mQRjJwO3I
zxxTW1vTliWQ3Bw7MoXy23ZXqNuM8Z9K3JNCimQyxzxJNC4eNwGVh0INPoAKKKKACiiigAooooAh
k/1v4UlMmaQ3DLGqHaoJLEjrn29qrm7dZUR0T5mC/KxPfHpQBop9wUtIn3BS0AFFFFABRRRQAUUU
UAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
AUUUUAFFFFABRRRQAUUUUAUtV/494v8Arsn86r6T/wAhK5/694f/AEOWrGq/6iL/AK7J/Oq+k/8A
ISuf+veH/wBDlqPtFfZK1z/x86n/ANdT/wCiI62rf/j2i/3B/KsW5/4+dT/66n/0RHW1b/8AHtF/
uD+VEd2OWyJKKKKsgKKKKACiiigAo7VVkuWR41JGJM9ulTwv5kSt61nGrGbshtWMuXTbmWdSXQKo
6561pWsLQW6xu+9hnLetPikSVN8Th1yRkHI4ODRJIkSb5HVVyBknA5OBSp0Ywd0NybMGXw2sUcrW
txK00hjXc+3IVZA2c45Puc1NJoswuoJIb2ZX3SPNP8u8lgAOMYxgY6VtUVqSRWtvHaWsdvCCI412
rk5NS0UUAFFFFABRRRQAUUUUAU55Y4ruQyOF3IuM9+TWczrJdR7GDfvF6fUVryf638KSgCZPuClp
E+4KWgAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigClqv8AqIv+uyfzqvpP/ISuf+veH/0OWrGq
/wCoi/67J/Oq+k/8hK5/694f/Q5ah/EV9krXP/Hzqf8A11P/AKIjrat/+PaL/cH8qxbn/j51P/rq
f/REdbVv/wAe0X+4P5UR3Y5bIkoooqyAooooAKKKKAMO6+0PcRosUhK57Vp2CutqBKmxiTlas1Eb
hQyrtOW6dOa5YUo0pczZbk5KxzLeG7kRxQxhY4Y5JDsim2ZLNkScqeQOMfrU13oNxO96DFBLHKyy
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330574/34aed937-466f-34af-8854-5d0576eab530.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAFGAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59R
udWuYYbpra1tiqkrGrM7FQxALAgAAj86l8u6/wCgpef98w//ABuiP/j+1H/r5H/omKsDW/Ej6XqE
1v8AZbmZY0Vy0RQAZHTnkngnA7VF23ZF6JXZv+Xdf9BS8/75h/8AjdL5V3/0FLz/AL5h/wDjdchb
eM2m1W0sWtruB7ll2eaExgnqcfjW74k1DUNP+zGwWII7kO0i7sn+7jr0yfwpO6BWZpeVd/8AQUvP
++Yf/jdHlXf/AEFLz/vmH/43XOQ6trk+nXlxLtRYxlTbRKxRuPlO/tz6fjTra/1s6+lvI8xtvMwQ
8aA7d2OcCnZhpa50PlXf/QUvP++Yf/jdHlXf/QUvP++Yf/jdc5PqOsvLLLbSz/Z9zOhEKYCA4Jxj
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330577/4fe059d2-5e74-3762-9318-bfaac47759da.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAEFAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59Q
udWuYYLpra1tiqkrGrM7FQ2BuBAABH51Lsuv+gpef98w/wDxuiP/AI/tR/6+R/6JirB1vxG+l6hN
b/ZbqZY0Vy0RQAAjpzyTwTgdqjVuyL0Suze8u6/6Cl5/3zD/APG6Xyrv/oKXn/fMP/xuuQtvGbTa
raWLW13A9yy7PNVMYJ6nH41u+JNQ1DT/ALKbBYgjuQ7SLuyf7uOvTJ/Ck7oFZml5V3/0FLz/AL5h
/wDjdHlXf/QUvP8AvmH/AON1zkOr63Pp15cS7UWMZU20SsUbj5Tu7c+n4062v9bOvpbyPMbbzcEP
EgO3djnA/rTsw0tc6Hyrv/oKXn/fMP8A8bo8q7/6Cl5/3zD/APG65yfUtZeWWW2ln+z7mdCIVwEB
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
/d5Ao50HIzjZNDt49DS9NxK0zwCbCxkoMtt2k4wD+P4VY1HQU0+XfYh7mSC8FsYpkBEjFdw4H5Yr
qv8AhX2neX5f9oX2zOdvy4z9KD8PtOb72oXxyc87evrRzoORnJaslpbyaXLdWm5ZYG8/aohdjuYZ
2DhSO3rirOjaFBFdQ30kn2q0NzEkW1AVdWJyXBzgDGCOxPWukf4e6bK26TUL529W2k0L8PdNQELq
F8oIwQNozRzoORnKz6Bb/Yri7eWVJC07JGkRKpsPRsDjPuR1HWpH8MWphIjupVmWCOZi4G0Btn4/
x9faunPgDTyrKdSvyHOWGV5PvSH4faac51C+5G0/d6elHOg5Gcfqej/2ZNbS2fmSyNcyQrFLGGLl
CACB3BzVXWbOMX2yyiPmbQZ4YvnWF+6g9x/Lpk13Z8Aaezq7alfll+6SVyK0dE8L2+hyTSWV5OTM
oVvMQHoc+1HOg5GeQSRSRNtlRkbGcMMGmV67rPhG01q8W6vLy4EioEGxVAwCT/WqH/CudK/5/bz8
lo50HIzzGivTv+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM8xor07/hXOlf8/t5+S0f8K50r/n9vPyW
jnQcjPMaK9O/4VzpX/P7efktH/CudK/5/bz8lo50HIzzGivTv+Fc6V/z+3n5LR/wrnSv+f28/JaO
dByM8xor07/hXOlf8/t5+S0f8K50r/n9vPyWjnQcjPMaK9O/4VzpX/P7efktH/CudK/5/bz8lo50
HIzzGivTv+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM8xor07/hXOlf8/t5+S0f8K50r/n9vPyWjnQc
jPMaK9O/4VzpX/P7efktH/CudK/5/bz8lo50HIzzGivTv+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM
8xor07/hXOlf8/t5+S0f8K50r/n9vPyWjnQcjPMaK9O/4VzpX/P7efktH/CudK/5/bz8lo50HIzz
GivTv+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM8xor07/hXOlf8/t5+S0f8K50r/n9vPyWjnQcjPMa
K9O/4VzpX/P7efktH/CudK/5/bz8lo50HIzzGivTv+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM8xor
07/hXOlf8/t5+S0f8K50r/n9vPyWjnQcjPMaK9O/4VzpX/P7efktH/CudK/5/bz8lo50HIzzGivT
v+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM8xor07/hXOlf8/t5+S0f8K50r/n9vPyWjnQcjPMaK9O/
4VzpX/P7efktH/CudK/5/bz8lo50HIzzGivTv+Fc6V/z+3n5LR/wrnSv+f28/JaOdByM8xor07/h
XOlf8/t5+S0f8K50r/n9vPyWjnQcjPMaK9O/4VzpX/P7efktH/CudK/5/bz8lo50HIzzGivTv+Fc
6V/z+3n5LR/wrnSv+f28/JaOdByM5j4c/wDI6Wf+7J/6LavYLqLUmuYWs7qGODpIjxbm+oOa5PR/
Btlo2pRX9neXBmiBCiRVI5BH9a6f7Ref8/Kf9+B/jRzoORjr7/j+TP8AzwP/AKEKdpP/ACE7n/r3
h/8AQ5arsZHl8yaUOwXaMJtAGc+vtU2kOrateKCCyW8IYemWlP8AIipTvK6G1aOpJdaHBcag18lz
cwTsAGMTLhgOxBBBp39kN/0Erv8A74h/+N0UVo0jNNh/ZDf9BK7/AO+If/jdH9kN/wBBK7/74h/+
N0UUuVD5mH9kN/0Erv8A74h/+N0f2Q3/AEErv/viH/43RRRyoOZh/ZDf9BK7/wC+If8A43R/Y7f9
BK7/AO+If/jdFFHKg5mH9kN/0Erv/viH/wCN0f2Q3/QSu/8AviH/AON0UUcqDmYf2Q3/AEErv/vi
H/43R/ZDf9BK7/74h/8AjdFFHKg5mH9kN/0Erv8A74h/+N0f2Q3/AEErv/viH/43RRRyoOZh/ZDf
9BK7/wC+If8A43R/ZDf9BK7/AO+If/jdFFHKg5mH9kN/0Erv/viH/wCN0f2Q3/QSu/8AviH/AON0
UUcqDmYf2Q3/AEErv/viH/43R/ZDf9BK7/74h/8AjdFFHKg5mH9kN/0Erv8A74h/+N0f2Q3/AEEr
v/viH/43RRRyoOZh/Y7f9BK7/wC+If8A43R/Y7f9BK7/AO+If/jdFFHKg5mH9jt/0Erv/viH/wCN
0f2O3/QSu/8AviH/AON0UUcqDmYf2O3/AEErv/viH/43R/ZDf9BK7/74h/8AjdFFHKg5mH9kN/0E
rv8A74h/+N0f2Q3/AEErv/viH/43RRRyoOZh/ZDf9BK7/wC+If8A43R/ZDf9BK7/AO+If/jdFFHK
g5mH9kN/0Erv/viH/wCN0f2Q3/QSu/8AviH/AON0UUcqDmYf2Q3/AEErv/viH/43R/ZDf9BK7/74
h/8AjdFFHKg5mH9jt/0Erv8A74h/+N0f2O3/AEErv/viH/43RRRyoOZh/Y7f9BK7/wC+If8A43R/
Y7f9BK7/AO+If/jdFFHKg5mH9jt/0Erv/viH/wCN0f2O3/QSu/8AviH/AON0UUcqDmYf2Q3/AEEr
v/viH/43R/ZDf9BK7/74h/8AjdFFHKg5mH9kN/0Erv8A74h/+N0f2Q3/AEErv/viH/43RRRyoOZh
/ZDf9BK7/wC+If8A43R/ZDf9BK7/AO+If/jdFFHKg5mH9kN/0Erv/viH/wCN0f2Q3/QSu/8AviH/
AON0UUcqDmYf2Q3/AEErv/viH/43R/ZDf9BK7/74h/8AjdFFHKg5mH9kN/0Erv8A74h/+N0f2Q3/
AEErv/viH/43RRRyoOZh/ZDf9BK7/wC+If8A43R/ZDf9BK7/AO+If/jdFFHKg5mH9kN/0Erv/viH
/wCN0f2Q3/QSu/8AviH/AON0UUcqDmYf2Q3/AEErv/viH/43R/ZDf9BK7/74h/8AjdFFHKg5mH9k
N/0Erv8A74h/+N0f2Q3/AEErv/viH/43RRRyoOZh/ZDf9BK7/wC+If8A43R/ZDf9BK7/AO+If/jd
FFHKg5mH9kN/0Erv/viH/wCN0f2Q3/QSu/8AviH/AON0UUcqDmYf2Q3/AEErv/viH/43R/ZDf9BK
7/74h/8AjdFFHKg5mIdHYgj+0rscdQkP/wAbp+k6PBpRnaKWeZ5yGkeZgzMRnvgetFFVZITbP//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330579/a20d27a8-9c01-380b-a71b-de03a35c625b.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCAEsAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59Q
udWuYYbpra1tiqkpGrM7FQxALAgAAj86l2XX/QUvP++Yf/jdEf8Ax/aj/wBfI/8ARMVYGt+I30vU
Jbf7LczLGiuWiKADI6c8k8E4Hao1bsi9Ers3/Luv+gpef98w/wDxul8q7/6Cl5/3zD/8brkbbxm0
2q2li1tdwPcsuzzQmME9Tj8a3PEl/qGn/ZjYLEEdyHaRd2T2XHXpk/hSd0CszS8q7/6Cl5/3zD/8
bo8q7/6Cl5/3zD/8brnIdW1yfTry5l2oIxlTbRKxRuPlO/tz6U62v9bOvpbyPMbbzcEPGgO3djnA
p2YaWudD5V3/ANBS8/75h/8AjdHlXf8A0FLz/vmH/wCN1zk+o6y8ssttLP8AZ9zOhEKYCA4JxjJx
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
/o5/9CFOsn8zWbpsY/0aH/0OWpvqO2hVP/H9qH/XyP8A0TFXjvjn/kcNR/66D+Qr2Fv+P7UP+vkf
+iYq8u8XaNfXnia+uLaNHR5iigSLuZgoJAGc5xzUx+JlP4UchRRRWhAUVYsrOa/uktrYIZXOFVnC
7j6DPemNbzKJSY2xE21yBkKfTP4UARUUUUAFFPeN422yIyHGcMMUygAooooAKKKKACiiigAooooA
KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA6f4c/wDI6Wf+7J/6A1e2DpXi
fw5/5HSz/wB2T/0Bq9sHSgCjd/8AH+n/AFwP/oQp+mf8hW6/69of/Q5aZef8f6f9cD/6EKdpn/IU
uv8Ar2h/9DlrP7Zf2SB/+P8A1D/r4H/omKuB17WbOw126tpmk3G7d5GSMbo1aIKChz97Nd6//H/q
H/XwP/RMVeP+OP8Akb9Q/wB8f+giiPxMb+FEl/rFjPpkNvDGqbRENnkAlSo+Y5Jxz9Oc81LJrenn
U7edjJKgSZHPkqoXeCFwOvGc4zj0rl6K0Mzok1HTl1rSrvzHSKyjjV8RcuUPXr3H5UtvrFtBa6ha
C6uESeYTRyRxjJ4OVwTxnI59q5yigDbbUbU+HxZmR/NCbQghUDO7JJPfjuMH61iUUUAX9XvEvrxZ
o3unAjVc3MvmPx746VQoooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
KKKACiiigAooooAKKKKAOn+HP/I6Wf8Auyf+gNXtg6V4n8Of+R0s/wDdk/8AQGr2wdKAKN7/AMf6
f9cD/wChCnaX/wAhS6/69of/AEOWmXv/AB/J/wBcD/6EKdpX/IUuf+veH/0OWs/tmj+Arv8A8f8A
qH/XwP8A0TFXkHjj/kb9Q/3x/wCgivX3/wCP/UP+vgf+iYq4HxPdXKf8JCqzYCXESxruH3Sp34Hp
8wz+FEfiYS+FHn9FdHqGmaXDpkMkDSO7CE+b5qhWLD5xye304xzU5sNLtNe00SwottJMQ6yThvlB
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl.iteye.com/upload/attachment/330581/067f71a2-b513-36b7-ad5e-5734e8f87ea5.jpg

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCABbAi4DASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsZ59R
udWuYYbpra1tyqkrGrM7FQ2BuBAABH51L5d1/wBBS8/75h/+N0R/8f2o/wDXyP8A0TFWDrfiRtL1
Ca3+y3UyxorlotmAD255J4JwO1Rdt2ReiV2b3l3X/QUvP++Yf/jdL5V3/wBBS8/75h/+N1yNt4zM
2q2tiba7ge5ZdglVMYJ6nH41u+JNQ1DT/spsFiCu5DtIu7J/u469Mn8KTugVmaPlXf8A0FLz/vmH
/wCN0nl3f/QUvP8AvmH/AON1zsWra3Pp15cShUWMZU20QYq3HyncenPp+NOtb7Wzr6W8jTG283BD
xIDt3YycL/WnZhpa50Pk3f8A0FLz/vmH/wCN0eVd/wDQUvP++Yf/AI3XOT6lrLSyy20s/wBn3MyE
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
n//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0556/91b557ee-c03e-3679-b993-1e9010788189-thumb.jpg

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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0558/f9e49abf-0a8d-3de9-be1a-2c4112461592-thumb.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACWAMgDASIA
AhEBAxEB/8QAGwABAAMBAQEBAAAAAAAAAAAAAAMEBQIBBgf/xABCEAAABQEDCAkCBAQEBwAAAAAA
AQIDBBEFE1QSFBVSkpPR0yExQVFTVZGU0nHhBiJhoiOBobElMkTBQmJyc4Kywv/EABgBAQEBAQEA
AAAAAAAAAAAAAAABAgME/8QAHREBAQEBAQEBAQEBAAAAAAAAAAEREgITAyEx4f/aAAwDAQACEQMR
AD8A+0uZfm03ZZ+A8upfm83ZZ5Y6gSmp0JqQ0624Sk/mNtRGRK7S6DP0qJjHK2x0klV7qX5vN2We
WF1L83m7LPLEw8E6rXMQ3cvzabss8sLuX5tN2WeWJh4HVOYiu5fm03ZZ5Y8yJfm03ZZ5YlqPKid0
4iLJl+bTdlnlhky/NpuyzyxIPKh3V4jjJl+bTdlnljykzzWbss8sdgJ3TiI6S/NZuyzywpL81m7L
PLHYVDurxHNJfm03ZZ5Y9yZfm03ZZ5Y6Cod1OI5yZfm03ZZ5Y9yJfm03ZZ5Y7Ix7UXunER3cvzab
ss8se3cvzabss8sSVHtQ7qcxFdy/Npuyzywu5fm83ZZ5YmAXqnMQ3Uvzebss8se3Uvzebss8sSj0
OqcxDdS/NpuyzywE4B1U5ivZJvJsxpEhpTTiE5JkpJEZ07ehSv7iyoxCc2Kf+qY3qeI5OXGxTG9T
xC21Z/EtR4Is7jYljep4jzOo2JY3qeIzlXUtR4ZiLOo+JY3qeI8zmPiWN6niJlXYlqPKiLOY+JY3
qeIZzHxLG9TxDKuxJUKiLOI+JY3qeIZxHxLG9TxEymxIAjziPiWN6niPM4j4ljep4hlNiQBFnEfE
sb1PEM4j4ljep4hlNiUe1EOcR8SxvU8QziPiWN6niGU2J6j2ohziPiWN6niGcx8SxvU8RcpsT1Ht
RXzmPiWN6niOs5j4ljep4hlTYnqPRBnUfEsb1PEe51GxLG9TxFymxPUBDnUbEsb1PEM7jYpjep4h
lTU4CHO4uKY3qeIC4a0LtvUT6Bdo1E+g6Ad3Bzdo1E+gXaNRPoOgAc3aNRPoF2jUT6DoAHN2jUT6
Bdo1E+g6ABzdo1E+gXaNRPoOgAc3aNRPoF2jUT6DoAHN2jUT6Bdo1E+g6ABzdo1E+gXaNRPoOgAc
3aNRPoF2jUT6DoAHN2jUT6Bdo1E+g6ABzdt6ifQLtvUT6DoAHN2jUT6Bdt6ifQdAA5u0aifQB0AA
AAAAAAAieUlBGtySlhBUKqqUqfV1iUYn4rinNsfNiyzy5DNclNTIsqtQGit5hCMtdpNJTlmjKNSC
LK7U17/0Fk47hFU5KtlPAfG2W21GsqScpDrD78hbqHVR8siNaULNFKHTpMyr+nWPrrNJTdmRUOt3
aksoJSDMzNJkkqlXtoAhv2MlK9JNZK0mpKspFFEXWZH2kQE8xkpXpJrJWRqSrKRRRF1mR9pF/QfI
JZWl2E+4bjkdS3XEIzehNoKUhSuoq9KCM6H2F0Dm07POfaJustulFdU8ho0NmRZDpMNKMiMuimUs
/qnuAfX5zFN0mitRg3FUoi8RlHXq6O3op9RcuHMQrYLgPibPQwm1LMv8tN3FhJUzmxmbjmSsiqqn
RkmpCj6ez9B+gAKtw5iFbBcAuHMQrYLgLQAKtw5iFbBcAuHMQrYLgLQAKtw5iFbBcAuHMQrYLgLQ
AKtw5iFbBcAuHMQrYLgLQAKtw5iFbBcAuHMQrYLgLQAKtw5iFbBcAuHMQrYLgLQAKtw5iFbBcAFo
AFYAAAAAAB6lRpMzKnSPBC7IJtZJJl5w6V/hoyqAWrN6ruIZz1kWe++p9+IhbqzqajUrpP1/QS54
eDl7r7hnh4OXuvuLiauXqu4gvVdxCnnZ4OXuvuGdng5e6+4YauXqu4gvVdxCnnZ4OXuvuGdng5e6
+4YauXqu4gvVdxCnnZ4OXuvuGdng5e6+4YauXqu4gvVdxCnnh4OXuvuGeHg5e6+4YauXqu4gvVdx
Cnnh4OXuvuGeHg5e6+4YauXqu4gvVdxCnnZ4OXuvuGdng5e6+4YauXqu4gvVdxCnnZ4OXuvuGdng
5e6+4YauXqu4gvVdxCnnZ4OXuvuGdng5e6+4YauXqu4gFPOzwcvdfcAw1ZAAEUAAABgfiya7Z9ju
ymqm6h1nIp2Gauv9fp2jfGba8Bu04jkJ40pbUttSjVWuSSqnTuPuFiOrFkzZFmk/Jq6tbyiSSmya
UlBKyaqLvKhnQdOSHo1rOIdWdzIZ/gV6krRU1F9TI6/+Ji1+S7bbv11QZHWv5lU7/r2jiUzGk3Sn
VUU0vKQpJ0MjMqH6kZkf1Ew181+GvxHaUySjShoSyUA33DS3SjhLL/4Ug6f8xDaT+IIKs3ySf/jO
G30N9CFJLKMlav5en6DmLY1mRDO6UuhtG0ZKcP8AymlCT/nRtP8AURM/h+y0RHoq1uusvOpdUlSi
plFQuihFQjIiI+8gw1ZRb8BxUZBqdbXJSSkpcQaTLKOial2VMugGrVRaaFtQicYkfmJJyGjT0JVk
rMi7ck/60HsmzoUm0Gpy1qS+1Sik0/MRHUiOpH2mfVTrFZuw4TZN0mSzU2bhpWb3TVaiUfSRaxEr
6hhq3Ysp+VHeKQo1LZdyKqRdrMskj/Mj/hPp6u0qH2jWGdCjx4aFJQ6txTqstbjiqqWfVUz+hEX0
IW79rXIMNTAIb9rXIL9rXIMNiYBDfta5Bfta5BhsTAIb9rXIL9rXIMNiYBDfta5Bfta5BhqYBDft
a5Bfta5BhqYBDfta5AGGuAAAUAAAAAAAAAAAAAAAAAAGe5ahJeW2zFefyDyTNNOvt6xqS3/GPXrz
5/1oAM7Sjnl0n9vENKOeXSf28RePTH28NEBmqtRxJGarPkEXeZp/n2j3Sjvl0n9vEOPS/bw0QGaV
quHXJs+QZEdDoaT/AN+sh7pR3y6T+3iHHo+3hogM7Sjvl0n9vEeaUd6f8Ok0L/p4hx6Pt4aQCGLJ
RKYJ1utDM+g+sjLrIcOSlk+pliOt1SCI1GSiTSv1MZss/jpLLNiyArX8rAOb1HEBFWQAAAAAAAAA
AAAAAAAAAABl2Sskqlko/wDUL/uY1B88mUiFIktv1QanVKLoOhkZmf8AuOv5Tdjz/vcvmt++QF8g
YuloviGGloviGN/Nj6eWJaU9hm07WSUeUolIJokqdXkLqpGX+U6mVScIuhPUXQfSIrGtGS7DfSyU
lhBZMo7p6ppbMlFkkb3QRFkkZmVa9lBYlxbJlzVy3XXDU6ab1JnVCiLJOlOov8ia9faXaVOI8Szo
161HfS3HdaQytCWiJSklWtVdpnXrp1epY4rf18Z/xIyuSa5TcZVsIerVVZEamUaSMjp0EfQZH0dY
+vbdSTaSUZmqhVM+8fFEw0mW4+UyK4tSkqSp+GS1oyUkRdOUXcXTQv5DcK1o1Cq5U+3oFnipf08t
u+R3jlTqMk+nvGPpaL4h+g8O1otD/idZdw1PDF/SWLlidMNf/eX/AHEzSyTNl17TR/6iKxEKTAqp
Jka3FKIj7jMRyHW2Zr5OrS3l5BpNZ5JK6KHQxx9/31Xo/KXia0L5PeAzc8j4pjeEAy6NYBnZ7L8G
Nv1fEM9l+DG36viM9RrmtEBnZ7L8GNv1fEM9l+DG36viHUOa0QGdnsvwY2/V8Qz2X4Mbfq+IdQ5r
RAZ2ey/Bjb9XxDPZfgxt+r4h1DmtEBnZ7L8GNv1fEM9l+DG36viHUOa0QGdnsvwY2/V8Qz2X4Mbf
q+IdROa0QGdnsvwY2/V8Qz2X4Mbfq+IvcOLWiAzs9l+DG36viGey/Bjb9XxDuHzaIUGdnsvwY2/V
8Qz2X4Mbfq+Idw4rRoAzs9l+DG36viGey/Bjb9XxDuHzaIDOz2X4Mbfq+IZ7L8GNv1fEO4fNogM7
PZfgxt+r4jzPZfgxt+r4h3DmtIBm57L8GNv1fEA6i817o20sZC9qvmBo20sZC9qvmAAxkNr3RlpY
yF7VfMDRlpYyF7VfMABcNpoy0sZC9qvmBoy0sZC9qvmAAYbTRlpYyF7VfMDRlpYyF7VfMAAw2mjL
SxkL2q+YGjLSxkL2q+YABhtNGWljIXtV8wNGWljIXtV8wADDaaMtLGQvar5gaMtLGQvar5gAGG00
ZaWMhe1XzA0ZaWMhe1XzAAMNpoy0sZC9qvmBoy0sZC9qvmAAYbTRlpYyF7VfMDRlpYyF7VfMAAw2
mjLSxkL2q+YGjLSxkL2q+YABhtNGWljIXtV8wNGWjjIXtV8wADDaaMtHGQvar5gAAmQ2v//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0560/c19a28c1-bf7a-3652-af7a-8f50dd1876aa-thumb.jpg

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
2vOjbSxkL2q+YAAJkNr/2Q==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0563/0abbaf87-461c-3250-a247-2f21affa400b-thumb.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACWAMgDASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAQFAQMGAgf/xAA4EAABAwIDBgMHAwQDAQEAAAAB
AAIDBBEFEiETMUFRk9EUIlMGFVRhcYHSFzKRI1KhsTNiwSTw/8QAGAEBAQEBAQAAAAAAAAAAAAAA
AAIDAQT/xAAcEQEBAQEBAAMBAAAAAAAAAAAAARIRUQJBYYH/2gAMAwEAAhEDEQA/AO18O/16nrv7
psH+vU9d/dV5w+rlLHz1QLjke5ud1g8OubWOg38+CRYbUhoE2IzPOYuJ2jhfUfTgDpwuse31r/E1
7WsLg6slaWjM4GpcC0czroFlsReLsqZ3Dm2oef8A1RPBVbXNkZPC+RkJja6UF1ySDc/QDfx0ujKC
WIxxwPYyEZXPYHuALgLHUa8j9Qn9Ofib4eT16nrv7ryyLOLsnqHC5Gk7940PFQhh1S2PyYhKZLC5
dI4g6a8dLnW41HBG4dVNip4m1gjZFI57mxucM13E2JNybbkl/Tn4mmF4H/PU9d/day14Os9R1391
HioKyOogkmxF8jIyS5oJGblcceX2vvupbyp+Vs+1fGS/TX5vXqOu/unm9eo67+6yinV9VmMWd69R
1391mzvXqOu/uiymr6ZjFnevUdd/dLO9eo67+6yiavpmMWd69R1390s716jrv7rKJq+mYxZ3r1HX
f3SzvXqOu/usomr6ZjFnevUdd/dLO9eo67+6yiavpmMWd69R1390s716jrv7rKJq+mYxZ3rVHXf3
WcrvXqeu/uiLu76YjOQ+vU9d/dERN1zMcLF7U4058scj6APZMYLtiNswtzP15bl4HthjDq+OmDqF
gcB5nsJza2JFr23Hf/lc7LLXUjqk1lIWSO/qyahli+1jl+275qD42dtSJhEQW5c4IvcDcNRpp3Xo
zGGq6at9ucZpKh0QNBJYn9sTtOXHVKr239oKRkJmjoQZWB7W7I6A7uNvmuSqJp6l93t5uADLWB+n
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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0565/ee8b6262-0b42-344b-94f2-b2715a7c8e79-thumb.jpg

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
ZJWpTFlYxcA7ctQH640vB/eyP/hqrGpCAPCmw87EbX56Sov3GFlMj/EE2inUwRskMRiKk7MpTRy6
bYUlrqibMxmccYRo3RlsLqumwUfoMatXldQ9AiU+Q1qVJEetzAbDSpBt7zYnFlPR5guXxU0uWZrH
w9YYQw2EoYg73Hp27YWURgzpKdpWhy+FeKpDXYkm978+nm/QYYh9patnCiljcgALpuWUBdO3O3K/
LGgKRFlZv8M1jK5QMDSnYDVqI7E3X8sVLRzR11BPTZHXwLTOryaKdtTAW2vfe5B39cLKYUmYiSkq
adqca6icTFwxFiL7W+JwYdhyTMDm0ckmWVhpzOGYyU7Aab73HuwYWU+zeDru1P8AMb6YPB13an+Y
30wYMSqFbkeDru1N8xvpjzwdd2pvmN9MGDCi5Hg67tTfMb6YPB13am+Y30wYMKLkeDru1N8xvpj3
wdd2p/mN9MGDCi5Hg67tTfMb6YPB13an+Y30wYMKLkeDru1N8xvpg8JXdqf5jfTBgwouR4Su7U/z
G+mPPB13am+Y30wYMKLkeDru1N8xvpg8HXdqb5jfTBgwouR4Ou7U3zG+mDwdd2pvmN9MGDCi5e+D
ru1N8xvpg8HXdqf5jfTBgwqC5eeDru1N8xvpj3wdd2p/mN9MGDCoLkeDru1P8xvpg8HXdqf5jfTB
gwouXng67tTfMb6YMGDCi5f/2Q==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0567/bf157bba-750c-3c3c-a095-f3ae64002c08-thumb.jpg

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
jykdp+Yooorn2umY/9k=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0572/54827988-e882-3a42-a5a1-92b2b96ac325-thumb.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACWAMgDASIA
AhEBAxEB/8QAGgABAAMBAQEAAAAAAAAAAAAAAAEDBAIFBv/EADgQAAEDAQUFBQgBBAMBAAAAAAEA
AgMRBBITIVIUMZKT0QUiQaTSMlFTYXGBkaHBI2Kx8BUz8eH/xAAYAQEBAQEBAAAAAAAAAAAAAAAA
AQMCBP/EABoRAQACAwEAAAAAAAAAAAAAAAABEQIhURL/2gAMAwEAAhEDEQA/APtLo1y81/VRT++X
mv6rkzR/EZxBc4setnEF57l6Kh2R/fLzX9Vznrl5r+qjEj+IziCjEZrZxBS8isU5/El5r+qVOuXm
v6rnEZ8RnEExI/iM4gl5FYus9cvNf1Tva5ea/qucSPWziCnEj+IziCXkVinva5ea/qne1y81/VRi
R/EZxBMSP4jOIJeRWKe9rl5r+qd7XLzX9VGJH8RnEExI/iM4gl5FYp72uXmv6p3tcvNf1UYkfxGc
QTEj+IziCXkVinva5ea/qne1y81/VRiR/EZxBMRnxGcQS8isU97XLzX9U72uXmv6qMSP4jOIKQ5r
vZcD9CpeS1id7XLzX9Uz1y81/VRiM1s4gmIzWziCt5FYus9cvNf1TPXLzX9VziR62cQUYjK/9jOI
JeSVisA/vl5r+q6A/vl5r+qqxGa28QUiVmtnEEuSsVt0a5ea/qi4E0fxGcQRW5SoVzQ9oNnnljkd
h9/DYI6+6mX1r9qpCe0j2aTJGBai8gf0gKChpvrkTT6VW3Z7ZqbzD0TAtetvMPRa74z10sjZcR8d
oY0hrW0ddGZzr4Z+CiM2l9imM0EcVorIIw2jqgE3D9SKGinAtmpvMPRMC2am8w9E3w11ijf2qxwv
2SKS8Wtp3QG0qC6o95oaeG5Wtl7TLzXs6BrciKuqaUqfv4LRgWzU3mHomz2zU3mHom+GuoiFpFgl
c6JrrQL+G17QL2+6DT7JObSOzg+OzR7UWi8xtHBpIzpurQqdntmpvMPRNntmpvMPRN8NdZWSdq3a
OsVnBBpecak5DPL7larE6eW/tVlZDQi7Sh/98M/mmz2zU3mHomBbNTeYeib4a66sWNJZg62QRRTX
nd1neFKmh+4oaLRdZobwrLgWzU3mHomBbNTeYeib4a61XWaG8KXWaG8Ky4Fs1N5h6JgWzU3mHom+
GutV1mhvCqJhO18Is9ngfG51JS910sHvApn9MlxgWzU3mHomBbNTeYeiRfDXUObM1oMEcRaJ3mS9
kbue7JUTOfNZIJZIRC98bqsGdK0WgWe1jc5oqa/9h6KHWW1O9q4frJ/8SbmKpIiIm7Tb3yRRjZoQ
528gMrkqoDa32pjXtZhAd52EMyrdntmpvNPRMC2am809E3xddQJZy/KxC6dwIpT9f7RdxvlL2tfZ
GtBOZpkB+FzgWzU3mHomz2zU3mHom+GutVxmhvCEuM0N4Qsuz2zU3mHomz2zW3mHom+GutVxmhvC
EWXZ7ZqbzD0RN8NdeZhdrmB0bZXtca0diUpn76nNaoGdpCSEyWgBoAvtLr3ur4Z+K9DAHxZP10TA
HxZP10W3qGPmVMZtItMr5Jw+FwGHHcALD497xV+I5RgD4sn66JgD4sn66JcLUsNoFuda8SKQiEUF
y9SuRr/kfhVdlx9oRQTttMl17jSNxffu/Oh+ea9PAHxZP10QwhoqJX/ronqEqVdndMyzsbPKJZQO
88Nuhx+ngupJZMJ9z2qGlPf4JZhHaGNkZJLdNaXm3T+CF3LHFCy/JK8Dd7/4T1C08R7O132YRuke
ZKCrmvA99c/wvWs75W2eNshJeGgOJ3koJrKZBGLS68QCAct+7wV7rObhuvcXUyBIpX8JcJTNbXWh
9jmbZjdlLe6QaUK8a1Q9sus7GtkldJXvFklKZj5/VfQR2c4bcSR1+neu7q/hWbM34j/10V9QU8in
aBe+7JKA6l2+5p8RWoG7x+q4u9rBsf8AWNWkl3eBvZn5Z5L2TZm09t/66LO+WysnwHWlwk0/avu9
ylwUsxT8kxT8lVj2O5fFoc4f25/wpZLZJJ8Fk7zJWlKbjv8AcrcLSzFPyTFPyVuzN1v/AF0TZm63
/rop6hKlViFMQ/JW7M34j/10VUzIYIzJNO5jAaVJHRPULUmKfkmKfkqW2ixumbELS4ucAR86/Za9
mb8R/wCuieoSpVYp+SYp+St2Zut/66Jszdb/ANdE9QtSxTmZ8zSytAPfRFt2Zut/66InqCpMB2oJ
gO1D8K5Fw6U4DtQ/CYDtQ/CuRBTgO1D8KDG5mZcDmr1xL7I+qDmP21Fps7LTFhS1ukgmhUx+2pne
I4i8mgHiplPmLGdlgha9rwXktpmXb6bv8rYvPit52CS0XHSGMDut3ld2a2unnMZs74xQuBf4itP4
/YUxy9RazFTTaiIukFklsEEsrpXAhzq1I+lKrWsc1pkZM5kbQ4AgHun8IH/HRBl0PkpUnePEUPgp
j7PgjtGO0Ov1rWta5UVbbXKXNGG03shkRnUj8ILXKXNFxprUZAipqQP4/KDeiyRzyPkY0gUN69QH
KhyKiO1vcRUNIc0kG6R40QbFRabNHaosOW9drXI0P5XNmtDpnUcAP6bXZAjM7xmurVI+KG8yhd7i
CfwBvQZ29mRMcxzZZAGEENBFN9c8s1vXnbXaL7BgtcDS8W1yyP4+6usdplnc4TRhlMx8wg1oiICI
iDLYW2tjHC2Pjca924Nw9y1Lz4Le6W1sgdY54w5riXuGQoafvP8A0r0EBERAXEvsj6rtcS+yPqg5
j9tTO67ETSueYUR+2u5I2yNuvFRv30QY2W0Msr55mFjG0yFCczTwy3qk9t2MNvAykfJhPhn+P9qt
ossBjcwxgtdSoNSDTMb1aIowSQxtTvyQee/tmxsDaOe4ubeDWsqaVofvVX2G2MtmIY2kNYQM8icv
d4LThs0N/C6AA3AD6ICyS2wRzGO6HUIGTvf/AD8lrUXG1rdFT40QY220OcBcqSMgHA51p/pUi3NL
gLlSa7nA51I/hasNmVGNyzGW5MNmXcblmMkGeO1B8jGXRV14e1WhBUMtgcQKDvAlpDwQc6fj5rUG
NG5rR9Aow2Dcxv4CCmz2gTmgAHca/wBqu/8A8XVpnFnixC0uFQKA5q1rGt9lrR4ZBSQDvCDA3tBp
e1hYQSSHG8KDOgP33q2a1mKfDEQd3S4d8An7LSWNIoWgj3UUGNhJJY0kmu7xQZ7HbBaS4YbmFoBI
PzWpQ1jGmrWtBPuFFKAiIgwHtWwguG0t7pIdQHIjf4f+rXZ5Y5ohJE68w7jQjdl4rM7suwvqdnjF
5pb3RTI7/utccbImBkbQ1jdzQKAIOkREBVzuo1tASS6gCsVdoBLBQ0IcCDSqCqzTNklc0AgtGdVp
WWywYUz3l94vHuotSAiIgIiICIiAiIgIiICIiAiIgIiICIiCGNDGNaNzQApXnwQdoi1tdPaY3whr
g5obQk1y8Pd/kr0EBERAXEvsj6rtcS+yPqg5j9tWqqP21agIiICIiAiIgIiICIiAiIgIiICIiAiI
g8V/a1rbfvdnPbcDnUJNS0bjuy/2i9SyySS2dj5ozG872+7NZXdp2VpaDa4RfcWj61p/la70mocK
tJa1FVek1DhS9JqHClKtXExoz7rm9JqHCoN9wzcOFKHNkmjnY2WF15hrQ0I/ytCoF8Gt8V+i6vSa
hwpQtRVXpNQ4UvSahwpQtRVXpNQ4UvSahwpQtRVXpNQ4UvSahwpQtRVXpNQ4UvSahwpQtRVXpNQ4
UvSahwpQtRVXpNQ4UvSahwpQtRVXpNQ4UvSahwpQtRVXpNQ4UvSahwpQtRVXpNQ4USh5c/YkM80c
skryWVyDRQ1JP8r1ERdJQiIoCIiAiIgIiICIiAiIgIiICIiAiIgIiICIiAiIgwbPbdfmHelNntuv
zDvSiLJobNbtfmHelNmt2vzDvSiIGzW7X5h3pTZrdr8w70oiBs1u1+Yd6U2a3a/MO9KIgbNbtfmH
elNmt2vzDvSiIps9u1+Yd6U2a3a/MO9KIiGzW7X5h3pTZrdr8w70oiBs1u1+Yd6U2a3a/MO9KIgb
NbtfmHelNmt2vzDvSiIGz27X5h3pTZrdr8w70oiBs1u1+Yd6U2a3a/MO9KIgbNbtfmHelNmt2vzD
vSiIGzW7X5h3pREQf//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0574/34aed937-466f-34af-8854-5d0576eab530-thumb.jpg

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
TvNPRfBfZFp3mlKB6L4L7ItO80pSg//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0577/4fe059d2-5e74-3762-9318-bfaac47759da-thumb.jpg

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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0579/a20d27a8-9c01-380b-a71b-de03a35c625b-thumb.jpg

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
EDm1dvue7u4PtREQf//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://dl2.iteye.com/upload/attachment/0033/0581/067f71a2-b513-36b7-ad5e-5734e8f87ea5-thumb.jpg

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAA0JCgsKCA0LCgsODg0PEyAVExISEyccHhcgLikxMC4p
LSwzOko+MzZGNywtQFdBRkxOUlNSMj5aYVpQYEpRUk//2wBDAQ4ODhMREyYVFSZPNS01T09PT09P
T09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0//wAARCACWAMgDASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEFAgMHBgT/xAA1EAABAwMABwgCAQQCAwAAAAAA
AQIDBAUREhYhMVFUkgYTFBVSU5GTQWEiIzJxoUJigbHR/8QAFwEBAQEBAAAAAAAAAAAAAAAAAAED
BP/EABkRAQEBAQEBAAAAAAAAAAAAAAABExESIf/aAAwDAQACEQMRAD8A9f42+em3dTiPG3z027qc
TjAMNG2aPGXz027qcPGXz027qcSBoeEeMvnpt3U4eMvnpt3U4kDQ8I8ZfPTbupw8bfPTbupxIGh4
R42++m3dTiUrL56bd1OBKDQ8I8ZfPTbupw8bfOFu6nE4IwNDM8bfOFu6nDxt84W7qcMDA0XM8bfO
Fu6nDxt84W7qcMDA0Mzxt84W7qcPG3zhbupwwMDQzPG3zhbupw8bfOFu6nDAwNDM8bfOFu6nDxt8
4W7qcMDA0Mzxt84W7qcPG3zhbupwwMDQzR42+em3dTgZAaJmlUMTJxiZ/GnQADkAAD4AAHwAgCD4
JAA+HQAD4doAByHaAAch2gAHIdoAB8O0AA+HaAAch0VSCjXtlYN3iML/AII1xsPMr8F8VPcXoKLX
Gw8wvwNcbDzC/BfFT3F6Ci1xsPML8DXGw8wvwPFPcXoKLXGw/iqX4J1xsCbFqVHinuLwIUWuNi5l
2BrjYk31CjxT3F8Ch1xsPML8Ep2ysC7VqVRP8DxT3F6Ci1ysKb6lVzuGuVg5lfgeKe4vQUWuVg5l
fga5WDmF+B4p7i9BRa5WDmF+BrlYOYX4HinuL0FFrlYOYX4GuVg5hfgeKe4vQUWuVg5lfga42Hel
Uo8U9xegok7ZWDf4j/Q1ysHMr8DxT3F6Ci1ysHMr8AeKe45EkT3OVGtcuP0Yox6qqaK5T9HubSjK
ewQ9xT99VrMqSI1EVUT9/om1Phd2lrnJFGzEf9rdrWr/AOTpc7wyxSNX+THJ+dqE91Loq7QdhEzn
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
+4ADkO1//9k=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://sarin.iteye.com/images/sina.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAEAAQAwERAAIRAQMRAf/EAGsAAAMBAAAAAAAAAAAAAAAA
AAMHCAkBAAIDAQAAAAAAAAAAAAAAAAUHAgMICRAAAQUBAQADAQAAAAAAAAAABQIDBAYHAQgAERIT
EQACAgICAgMBAQAAAAAAAAACAwEEEQUSBhMHACEiIxT/2gAMAwEAAhEDEQA/ANifKXk096OzU3v2
v28NSaVOjE265ZbIMqDxzQbSw1KjSCs2w2xpLDAhk8x1l6VJW49NebeQnrf4698zz17rNzfVG7ra
WIRRmSgCLhyYcZjMkf1AwUYmZzJTExGMZ+de/b3uzrnqvf0PWvR9SW07OIIKylM2PFTQUAXAU18k
TiUXMVhAioSApg+Xj+Gv1Kr/AJewxUbZ6/UxeiWYbZrfkmu5HX2is8FZooV+TUoPdJrsYcEZjLPA
uj5cLqH3GuFGp0OT9MSOJlYqx13VCvcwEXm8jS9McpEoj8R5RwOOQ8SGYnHODAvyXyjU7xnuDvjb
nrhlg+sUfFW2Ws2TIULUSzFlkUXSbucKdD1OggEprHWsJ/qqZlfHfb2TgCOM91o6Hpdq88ZI1hRf
Et0p2gP00TaaxcWpxLRKYQpON7vyHYbmDidGH4xCuCy7KuuoilWkdbdbD67tOvU+sWyIVPpVv88o
sLZK4MWZlq5WixgmDHBkEoDj7gWRGJhh9v8AR/a72s3aenKbd1XZtxG2Daam3SG2xDqnjCjaC1tN
RJJquLz0zTdsViiAJ1M5ggJA6F7JrDOBWzx7gC7BrBTfNlj3+5HR9OKVWjAp0g2Lngc0wShElyra
qA6XHRf6EZ7I2S820mOiDzi+rSEs9jSGnPq+mhlg7lyGsKFkCxnkMiquucnjMRkigZmI4wH3n4yd
H6d2Fn2FV93exyqahHXevHRqJK2qzccPhYtt7b3F8a/OFsZxQkngJFLSsZHjP//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/jpeg
Content-Transfer-Encoding: base64
Content-Location: http://sarin.iteye.com/images/tec.jpg

/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAZAAA/+4ADkFkb2JlAGTAAAAAAf/b
AIQAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgIC
AwMDAwMDAwMDAwEBAQEBAQECAQECAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
AwMDAwMDAwMDAwMDAwMDAwMD/8AAEQgAEAAQAwERAAIRAQMRAf/EAG0AAAMBAAAAAAAAAAAAAAAA
AAUHCAkBAAIDAQAAAAAAAAAAAAAAAAQHBQYICRAAAQUBAAIBBQAAAAAAAAAABQIDBAYHAQARCCES
IhMVEQACAwACAgMBAQAAAAAAAAACAwEEBREGABIhEwcUIv/aAAwDAQACEQMRAD8A32zNAErT6Hdr
hU06retjs8+rZ1T1rGDlWEiESLZslkt9pkQ1k1p4TMMtNI5IYUtXHHHXkoT9NXaapXZfnUWBRzc+
qDbL5GTkIZBStal8+vMiElMyJcfAiMzPnMzrrxfn097ZQ7Z3t3SdVz6cMFUNJJALn2bHHvxBtABG
DCZmDM2QMeH9GFCRQ/U2hGfsYpsuJAoVxNVwXOHmxk6rzJA2Kix1ewoakFhJcRIPwXvXJz7bkdf4
qS6lSPA86RYNRjXjpde0iNS2kuVmDhEy+tgfAkJQs459BmCj5iRmJ8k95RIZporUWdf7z18E2X1g
dD0tqmxQS5Dp9mLYuXqLj7jEll/mRYMj5BuP/IMnk2HHJWnf3ID9E1IhnGbR4AQZy/5nZLgHjydY
soNZnsGTCPC6/X2Iw5LjzbUElOXK6lT7TH2Hdqv0tr9eqfm/U/5m7drrE7Fz7WmNZ1VFmKtFTZWJ
8g2yxks4AiNKfSOBI5lKdL7jpdP/ADW7udwG4tOf2JmdnwpATdo2Lavt0rCZb6SLl10gCOTEUvcT
piWAv1X9t+WQU4CtWd40O1i63jbZgUNfdP1YhHO6VbB8QhDeEUmthgjxRAuCRKQ4q5K1Tp0uX+lt
j2lpPE+MHF6VurYvX7uzGp5+cthVqef7/wAyiICg3tc4EyZCJFADCVgHMn8lPlO1v1qhar2et9Ar
79/e33oXd0dMoZesLBgEuqhSpbCgNgLlky5zG+gr5gIiPP/Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://sarin.iteye.com/images/login_icon.png

iVBORw0KGgoAAAANSUhEUgAAABoAAAAgCAYAAAAMq2gFAAAACXBIWXMAAAsTAAALEwEAmpwYAAAK
TWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQ
WaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec
5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28A
AgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0
ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaO
WJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHi
wmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryM
AgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0l
YqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHi
NLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYA
QH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6c
wR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBie
whi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1c
QPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqO
Y4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hM
WEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgoh
JZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSU
Eko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/p
dLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Y
b1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7O
UndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsb
di97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W
7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83
MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxr
PGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW
2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1
U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd
8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H0
8PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+H
vqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsG
Lww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjg
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
Ts5Uo85DgAAAAABJRU5ErkJggg==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/user/818470/8af9bd4f-e9b6-3eff-a7ff-a2436982b009.png?1363623525

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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/icon_minigender_1.gif?1324994303

R0lGODlhCwALALMAADFjdCt4kTKOrjikyGWarFexz2vQ8YGXnoKcpZKxu7S5u4m0wqC9xp/O3sDA
wAAAACH5BAEAAA4ALAAAAAALAAsAAAQ80EnZamWTml1WdgyzCcTnNItAno1RLcQSEFVRbGUiIE0B
EIOBIGMIKE6FAHHg6SknjMGNADh8FsKANRMBADs=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: http://sarin.iteye.com/images/status/offline.gif

R0lGODlhWQAaAMQAAGZmZu/v76WlpZmZmcXFxXx8fP///7W1td3d3ff394yMjK2trb29vczMzIWF
hZmZmeXl5dbW1v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEH
ABIALAAAAABZABoAAAX/oCSOZGmeaKqubOu+cCzPdG3fIyIMRID/wFFjNygeIAFdcclsOp/QqFQq
aKgEhQLzEOgmENOweEzOLkwIhQJhaAd4iIa8MRAk2vi8fs/v+/9+DWo+Iw52eWACB4sLAg4DAYCS
k5SUbwpCDnsBRAI7DoZ3laOkowkOCCILA3wEq00NfgAGs7N8ALi4e7Z/vHq8tXoNDiJFfAkMDAQE
DAcMu7ltttPRwNK52NXZ2XjWtHnDIp57CXQCyTsCPbfSu93fvu19wcHv09d44RKeCf39EAc8EQFV
ZwEEf9uy9QOAMAFDhv4cLozYUKJFiw9zUdTHzx+EZgtCehqgRkDIgxEh/0JEqPHhxYsrU0p0uRBX
RZv9ONrxR+BAyJ+eFDhQ4PMAxYwTk858uTImS4U3sW0ktm9nuSILfAoUINTQDgJPl1Zc2jSjVIov
J+JUGVGnP5IDgI7sWkeNQ5ppY+LdizbhWr1p3faD+xMoyQIKFtiNmlQj2bFOMapN2VSp4KtbCx8e
wEBABMpskTaGObahQpVlxZaj6qlLlwhbnS0LaPIAAte5XHfBpZv3bt8B/ALYrft3ceDBh3fRt6o4
AgZZCURAEIGZstvFs2vfzr279+36hmlH4ErggQZIvqtfz947A1QjFHhGQL++/fv48+vfz7+//+dF
kBCAGgskY+CBCCao4CeCDDbo4IOKKUAICQdkoQAZGGao4RMKZHGACgg0suGIJIaxQColhAAAOw==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/images/user-logo-thumb.gif?1324994303

R0lGODlhMAAwAMQAAOXl5eTk5Pv7++np6efn5/Pz8+bm5vz8/PHx8evr6+jo6PLy8vj4+O/v7/r6
+vn5+e3t7f39/fT09P7+/vf39/X19fb29uzs7PDw8O7u7urq6v///+Pj4wAAAAAAAAAAACH/C1hN
UCBEYXRhWE1QPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtj
OWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUg
WE1QIENvcmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAi
PiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5
bnRheC1ucyMiPiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6
Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29t
L3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NU
eXBlL1Jlc291cmNlUmVmIyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdp
bmRvd3MiIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MkIzMkFGRUQ1QUFEMTFFMDk2MEJERjMw
QTkyQzUyNDYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6MkIzMkFGRUU1QUFEMTFFMDk2MEJE
RjMwQTkyQzUyNDYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlp
ZDoyQjMyQUZFQjVBQUQxMUUwOTYwQkRGMzBBOTJDNTI0NiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1w
LmRpZDoyQjMyQUZFQzVBQUQxMUUwOTYwQkRGMzBBOTJDNTI0NiIvPiA8L3JkZjpEZXNjcmlwdGlv
bj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf2
9fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769
vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWE
g4KBgH9+fXx7enl4d3Z1dHNycXBvbm1sa2ppaGdmZWRjYmFgX15dXFtaWVhXVlVUU1JRUE9OTUxL
SklIR0ZFRENCQUA/Pj08Ozo5ODc2NTQzMjEwLy4tLCsqKSgnJiUkIyIhIB8eHRwbGhkYFxYVFBMS
ERAPDg0MCwoJCAcGBQQDAgEAACH5BAAAAAAALAAAAAAwADAAAAX/ICeOZGmeaKqubOu+cCzPdG3f
eK7vfO//wKBwSCwafQSL4lgiPBgZJknCYBQCUtEFUZAkEgTCd5xYigAEgygwGJg5gIFGDQ+vAobD
BoHY+P8FHAQSBxERDAkcDBsRZhR+CgAFhREPECoAAhsYGH9/CAaanhsQCn4UHBB+CwEPo3spmXtx
qhsLCgaPGwIFuhMGC34NDhsHAQV+BwUWE34aKLILIqYbUdQPBg0LFX4IAXp/EAERxQQQBcgbFdCa
0hwDwql+EATdDhESHBl/DO/dAX4KMIiA6kQ0EfA2NOBwQVgrBwMAGAAgYtGEAf42BLIgIAEeigbb
IYxHoNkBjHSmZ2xwcEZPhEQpY4nMuJADtw0THgi4UELCSiwc+vh54ADDCgB63CWsCWDRnwMgRXAT
ADSABU8TCGCy4KCmAqI81zRgIOBBgahBHVQAKgICBQFqtWaZS7eu3bt48+rdy7ev37+AAwuWEQIA
Ow==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/user/278089/e64d532b-50f5-31f7-894e-97e2fdbc7721-thumb.jpg?1279162098

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
A/5XRZum1zOU1u0VeP7dvN/PX//Z

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/user/575862/b020a4e2-12f9-3f26-8ed0-39f006c0f962-thumb.jpg?1319510406

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

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/blog_wiki/601678/e3b14d1f-4cc5-37dd-b820-b6af951740bc.jpg?1323246219

/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcG
BwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAwADADASIA
AhEBAxEB/8QAGgAAAgMBAQAAAAAAAAAAAAAABQYEBwgDCf/EADIQAAIBAwMCAwUIAwEAAAAAAAEC
AwQFEQYSIQAHFCIxCBNBUWEjMkJSYoGRwRckobH/xAAYAQADAQEAAAAAAAAAAAAAAAABAgMEAP/E
AB8RAAICAQQDAAAAAAAAAAAAAAABAxECBCEiMROh8P/aAAwDAQACEQMRAD8A9z7N25s1wttLUvHW
VLSwo++euqJWOVB9Wc9Q9R6X01p8ANZqGqqpQXWOT8o+87M2dqjPr8c4AJOOmDQkm7QlokORuoYG
OTnH2a9Z3v8A3VXW/c1qF5jEl2vclvceaRo6aniAjUKozh5GkYgD8WT9FyyWKthSt0G9T9xtPWye
qWnsmnZmpDnaKXe8a/DeA+f3/wCdKh9rvRFv1XHaqnSMVNVuFO2KUoJAULGVSFwU42k5BDFQRyD1
0vvaFY+zdVfdR1dv0bcLYk01ddKqM4geORsS+UjfG6cNnOVbgZUAUhpjsVe+5+kaS80U6y0Lw1kV
CIiSZQyM0RG7GEBCOjkcqq9RxnTK+M2JoqpsOvr5F4Szq1oq4Gkpqk1MokDJsDAoTgDLEAqTyn6g
ej9r0vpa+LUNBSmRaIlWYyy88E5Vt3IOD/HSd2gopNM9v9MQNHKtNBpxBPPhzt3lHfBx+VD9csuO
iVpvdzp7rb6K00cXubhUCeoBZQGg3Kr4HOI44/Lu43yHC8ckYzPazso197H/AEFKtToSzuoASWgg
YAfAGNeswr2ovOj/AGvKrwlQ1PFcaae4UIK7RWBmEdVAj/glCkMpHzU9aW7XFhoC1RuQWggEJx+g
lP66mXnT9Jdq2lqZYVeehkMsTYBIJGCP3AH8A/DrQ0n2SToQ9OvRaJ0PHbqq43a709PK9M73US1l
ZK7sWEbNsPvMK21Rg5ULyeT0gaYvd2PdW/1N3t8o01VintlPRblkWJFyFfAx58uwkGSOAFyFGbD1
Bq/TRpo6+93KmoK6iV5VaWs8MEiLiIsPMAEZyEy3JIPyPShbO4Vm7tUuoqS1krJoy7ta6hdykyMq
JudBnOwh3RWPBaM49Osy0yTbLKV0kizJrvQUpf39VEsci7VhaM5YAYIC4yePhjqFae30t0uDVlR4
uipJZhP7l5iaibBBTdjAjUegQZIHGRkjod7PsdZfLdPerjUvXyzyyJSzmJooxCWGFRSBx5RlsZJz
yQOrNwAv066KFJcuwSS78ehf7XZ/x7Z3b701Kkp5zy/m/vph6RO3PcWzUmgbHC1Wxkit9OrBYJGK
kRLnOF6PxdxLTImRUS4+ZppR/wCr1qIma+8/ZuSyatl1MbtqirlutJ4CG3Wq3xVjU+0SRP8AZEDd
F7qWYB2bySy7gOSOnLsD280dphr42nbVFZKi6rRSXS1bIg9IyRukbPsHLyKpZiWbLAngk55a97e6
S7122jrNSXS8J4il2SUNJXzUaAM0xIYIA+fteeRyq8cEEn210FoLtJSV8OmLbHZ0upQ1Rpo6l3nZ
FZUJYhuQGbBGPXnPSXYyRb+l4BTadoIwFUR08a4HoMKPT6dSqyo8NSSSAbiiFsfPAz0raU7g2yC3
tSS1EiCiYQxySQuviE2ghxlR88H5FT1KuXc2ywUsn+y852EhY6eV93B44U+vp04p/9k=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/blog_wiki/711408/c2083dc5-6474-39e2-993e-263652d27795.png?1342921910

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
OjUwKzA4OjAwqIL7AwAAAABJRU5ErkJggg==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/blog_wiki/728686/5f40a095-b33c-3e8e-8891-606fcf3b8d27.gif?1345894872

R0lGODlhMAAwAPUAAAAAAAUFBQkJCQ8PDxMTExUVFRgYGBwcHCEhIScnJyoqKi4uLjMzMzU1NTg4
OD09PUNDQ0VFRUlJSU1NTVBQUFRUVFpaWlxcXGBgYGZmZmhoaG1tbXFxcXR0dHh4eH9/f4GBgYaG
homJiYyMjJGRkZeXl5qamp6enqSkpKmpqa6urrOzs7a2trq6ur6+vsPDw8fHx8jIyM/Pz9HR0dXV
1djY2Nzc3OPj4+Xl5erq6u/v7/Ly8vT09Pj4+P39/QAAACH5BAAAAAAALAAAAAAwADAAAAb+QIBQ
SADlZJnCcMlsOgWLUo5WCTiHgUrNN0tev06F1NdagIULls9H0yjPYHHOxyO9wQXRbk3LEOBXCiQ6
azYYAnABF1trXX+ASwskc2suDlZwDC1ra0h3iWKEa3WfYAYkPJxcboABgqJrNxeYiRg3qmwaBJi8
AbSSlJwwDpBCDi64bBh/Bg8RERIRDIgIg7g9JgbFAAUkPbg7JAYBEi84ODc3JwoADZu4OBm0rRjB
azsmBwBanD0sZg2Q4YLxYJsxGODyZWG0ZgXAd/2yGeRm4hunHSW0RXBRw0aNGiUStIO4RocGRAYD
ZLCHUR8CCxpiZpDwxx2uGcQmtpuhCt/+gQALNoAAEeKDBSXHVPVQ8WjigBQ9S/ycACOH1RwoRNrk
pIODziEdUt0joa+CDVUOR6qyIeFrgAYlLPrwCYDCWU5pA6rSIYLBPDgCFHB4seeiQn54AQq86GJD
gr9OAiC4oALWxYwL0ZphsFhVjhQXDqBsIqDABBM25Eb9SYGhj7RJk8UyMWEcEwIPRNAQK9tngNb9
YJNMxiNGiAePBDToQFh2VG12NQNwMLy3iw7TGpzA4TzhT8Rr/k3v3N3HjREIGJS4odp5yyx3G5qJ
XX7uiw0FXGlQYa93vrrxvaZYfTzMIEIEtgEwwHIw8JaMb8AlBgADanR3gwkUJIgFARD+6NbeWOOA
J6Bava1wQQKjNRGAaSfcklCIAeZFHh0wdLBAil8EcAAGlfX0X4Q+9CAcLjSE4MAAEyEwglzvATki
dargcEFTE33A5H9mqSIelJzgQMFXABCgwpXjOAlbZz2EABkkD9CwWl2u5TXcC/pMJMAGhd0j1T6u
bemCajVIsOYZBpygmm9ZriHkQ7jo8AGSBj0gAziYmblZdSqItE0AGvTXEp/SNVChKjRMYNABFVGq
TwQs0DDDDDKQIBIDKzzoAY5nOIAQLjFYgAgBCzjQgLAohpmBm7ikoGkrGbjISa+QAjBoARogy8kM
bUFyQAkOQgtJARnwxFUH0eb6gipUMFhQLhwEhNsPCggAIgAG8cVQAa7sVvtsBIMucUph9q5bTLvI
5sCBwE1wtkbAYIaJgZs9nBAvGAJccFa6CBsELk8xFGSKCDnAUAGVDVM7gw0b4BgEADs=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.iteye.com/upload/logo/blog_wiki/787475/b272a31d-e7bd-3eff-8cc4-c0624ee75fee.bmp?1357134073

iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAIAAADYYG7QAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAA
CXZwQWcAAAAwAAAAMADO7oxXAAAPIElEQVRYw+1YWa+k11Xde59zvqGGW8Od+w7dtwf3FNtJTHBi
BzsJFg8RKE4gCkEIiZcoKD8gIMEbQkICJIRIABGQMpBBPBBHSmzkDMSO7E6743Zj9+we71y36t6q
+uqbzjl783C77e7EDmQQg8R5q3r4ztI6e++19kIRgf9Nh/6nAfw/oP/zgPTP5SvCInBXc4gI3j4/
0afwv6HLdq/4LyL76Rli5t07kmS0trre6Wx1Op3tnZ0sTZ1z9Xp9bn7+wMH9C/N7giC4DUsQ/5Mi
+ZkYEpHV1ZXr15eFMY7jZrPRarfDwHS73YuXLt+4udwfbAeBWlxYPH7s2OLiolJKQBB+HFU/DaBd
bm4uL1+8cHF9fX2YJGmaOWsBpCyLmZnZxx57bGlpH4h4kZWVtfPnLyzfvBmG0cMPv2vfvkVmJnpT
nlB2y/EW6B8GJ4AAAiICJLt/CCtSq8srX/ynL45GA8eWgG1ZelE6iM6eu3Dy5Mlf/+AHPvn7n5ye
mS4KTxQgcJHlZ868fPrFUx//xMeUUq8RLCI/BE6D7D4vAsjtKxEAGIQQEAFA8BbLDMACAqD6WZYq
dLUpUM1MRano4Qi2emk6dXDs/gPveOQ96SjtbqcAgFA6KWtxvdWcGG83T58+PT0z22w2laLAmNfA
vQ6IAQSFUBAAgQFoFwUBA6CwT0veyXk7x24qG6Nyu8BuVi53mpuV96sgUmGFTIxERtwC8shiffPB
p85frETXf/GBplLGe6dVbELztW9+ZWn+wH33v/3ChfMvv3xuMNhpNupLS0uHDh3anRG3ABE6AO89
lSV2rOtlPsl4e8SbqXQz7GWq7zC1nkU7Fk9GA9S1NYGe2jevSIs3jOzY5RxmYAT9+J57LpzNXzr3
g0cf+oVBkkVxxY+2/+zTf/53n/v8mNYvPP/CWx94cHJi/J0PPjQ52Tx//vxwOKzX668z9MTp7svb
4SiHfqFTK1bAC6I2QUAglhQEyjcIiUQYvUDuxYvK8ygjEs2eMbCIOg6wrKKjwAkHjcmZew8ctaXz
oAeD7T/8oz9+7lzaPPa7mK1/76W19sSV69duXrtx/Tc+9GsikOd5vV5/jST97A29UZpa7MqQKjF4
Ju+FEBDKknVempEQIwKgIAqCB2jJ4C0TxZXtcNXpdmwFECW34HMf2tKwwgndn2qGySivVOt/+vef
eXFjcv9jH8WxeDbmV898v5tcXJpZ+Ju//aunn/rab370t44fPwZ3jE09WaPtgRfBwUgRggUjiE5A
MAwA6oqZpUQgFAAotZDTqsTphm+2nL4iW6kuQ2SOSASAUZMU5cFaPlapDAbd0y88/91zMP/Yx6vj
M4Q40Rxl5pG5xszFE18JgUXg8OHDu2Pz9SdrVoPRFsRG5RQGJEp8rGxFSeidB/AIJWkWhShEoDwX
iF2IT63we4/E71xyT14snK8CSA04pjRQLincew+MHdk/s7mz9SeffqG28KHm1KKO+lwEGRtbbc7O
3fu+j0WHjr9tcXFhYWEebgvfbYZiS6DryDvCWoBBsXeFtx7DnCFHDQQkAAjIEoN32kUm2+zxzeXh
+Hzjl4/wU6czrkfaWzTUy/Q8lwsLWmNw7tzlPixN7bu3HibOiydgm1eVXi+jj9x7/+TsscBIrVpD
vGs46/EYS1QCDLdKBHOJCgm9FyEghYTILAAgggliMMgeWoTltiqLJCp1WIkee6t99uWdYdBmD1lu
f2V2q1lp5cDPnTwf1Y6025bZCgQZG2FTMXStVzisT09VEW8NuDt1l9pVDd4BiRYr4g3bEHzAthEW
zbg0nKO3u2MVUaxzR9pWga7E+tCBic3lcicdTrbDty8ol6Wi1DR1H1hK67qxvHrj1KtJtHCkVvMe
A9GQCaa+hkQbQ+6OhN5EtKgZKa0UA5HYipImZU2dtIKk4l2NyybZCLwAAoJnaDJHMZ9cywOEZkVO
LPNqV/UTmdnXemixzDb7R8eGU82WC/HfT/wgCeey5vTWdrjt9Y41yqA4CY1NOFzplnCHYN0FqBZR
zXi2SpEuhEkJWkDWBL6wXHpdQoAsDIBOlqK8X3o0wUSFt7YGaTB2YcXkadpN3cH94+9byN691Azj
dpZ0v336ajl5nwXyilkRAQbiSgLP6BGvdOkNpRMAKDZUCwTQBQYLB7nXXtOIVULh0AcDH5WMJEBA
xufVGoDXe2q8MG1OXsZEq824+r0LEI3yTgqdi09dOvVUYe31G6vrSfTAwclD1exAPduDI3LeCBog
6yAyfHUzfzO114GRaiCDxIJWiDr3OndSoqCTwKiQwDqHXhcOJrHYGkEK+O7DYXclv7pVaTWgphNI
TV6w33nuS3/9Fwvj9a8++S8Kx2npI0G9Ocxc4qhleGWkHWrxaG0Qa3t9m1iQ3shDEgA1Q3CgIyo9
KFbKoRJCZMgSKNMiKLOQ89gO9o6jC6oqpMIVa+vwS0f4SGM0XXF79ro+BE/85ecWJ8Jqu93ZWPv2
d55OzMSNkdoqw00fFBqtUk6jUzByuhLgWh+2kxxuG4y77QeomZhOeTMpqRdAcQQQ+nIuyl1sSPkx
JIlcxWVxHHX62f5JU+aywSBer6fgLVZbtc7z37hy4XsHFie5GGVpGVf3QbCYkBESm/F4tTTOEmoU
HolC75KMlntuvP4GhU0A0I7EW2dRGc8hghGvuZyMyxB8GMAOB6vrHnR0fZuh1EbR8ipvZ2Z1hwZS
7VPYs3DuyS/PjQWFhAS4uta5790PH94bwlZ/Um/N6tF8iBNmVFN5SE4cexWQyLXOrvuSH2UIxmNA
FlYaSUYOSTQzJTbcyiqs9MBKiyG1ox0OxsNQq2Szp5JIJSWIQCUwvRe+na6+WNk3kZSjHMMszffc
d+z9j0SnX9rOwnhrqNaybNtGzmsQRsCMxRh1eSMDAPiRMtIAMh4rQfbslaA3ikQyG6U2KxhGGZYJ
6lqeO/BOTc/4NE1DXZ9XuRobeQ5irb/+7GfajaAEZch3e516Y3b/3kcurybzc/ClZ31WrRjUoDUC
ogg5V1isBnCto0Ry4oCVJ9GvISMAqcdGEaNAgEAWsGRwCELVYNSIyqP1waFZayM9PY4zrWxzo9UH
HpR+pRffLJvPPnNi7dJLk+22zUtSYdrrlNWDVmqDVJ5ZDt5zyFaTvDCGadeZO4WqKKES+c4O9RIL
CvjuVyMACkOpawCPhJ7YhtpFxmrJm+R1hxtF4TO1tVNpBLLZcedX6aaLrhXhpo9GCJef/cJMWzkG
AHA27+0ks2/74KmNqEywHMmlYePQfNHoDdCLQwZGFLSlIqBhKjd7DAAg+s7CJgCIAqwatCVZ8jlQ
YmEk5pVB45V+dc1iJwov7IQVKvfUy0tr1WJMBdrEbGqxyV854V59rjk+WRS51nowGOSq1Zx/y7AS
n900e6t4c9sOXO0ts0Vt2IcSndde2Hlg0Q6ia5vu9k7xOknEIiGpdlAknkJ2iqFKMKnKUCvRwf5q
D6jIxUxOFDanm10MtDIWPbLRcPmZz040AiUo6AlMb329uee+1vSB8cog9bqTutkm9lJMa/H9+32c
DTDIGaxwkLk8ILm6wQDEaIHvUHsGAaJWBb1HrUCDC8HG6MR4KkeHp4OqopDLiTi+uiKODDKCCAW6
++r15Oy/TUy1ho5ZBaXd2e73997/aNSq2hTF0NXNetsMx6tZ5hnQVeNCZ0p7TSQuV5GxN9YtAGui
O3uNdjeyZo3YOsFg5MJNW71R1EcltbRv1XSlqe897CYCd6NXYqiAxXsxCpaf/2wLB14HbAuSYHvQ
s3q6Mv/OoffO1YQwCFhGcLjJh6oy7Oj1nYmhUrlHBy4rTbUhqzu6NyoJyN/Z9igCiOMVco7q4IYi
nrRXgB5DFZy6kgzD4ANLY2df6u6MKn6cyYFoHPX6W6f/+Z65ucxizN4Lbq6s1xZ/NZi7t2AxgKVD
q+XFTnNlZ4Au6luu1TLKdQA5q7ImwYT2ryS42s3b1ZABXtsXiUAAcCoij4LITiELoAMQsaXVFXN0
sXLupe4zVww2KuScOIkNdU581WQ9U62TTUsdpPn2YCedvOc9FNRqXgWUjuGo7XG2ag3oEv1YI6ik
g/2tnYPTbq5hQtMPw0Kp2rUNBPB0R+NrQAKAsVgTei8IgMIEKI4JCn7fcTp5LXnuCmG96QW1NyNi
lcDac5+fnG5770VAG+ytbOqxo8eOvyugxDkvjMw6ZynAN8f0QuR9mheNqlfBWm6zQtJ0orOejUbp
tZsZvKOCdwJCQACpx6SUs5YRCRgFgL2lWJ84W373VaObDZIico4AQ1XpXv5O2b3QOrY/K0tEKK3r
bawtveO37zk8tTJ0EobaMIBDp53XSZlvDiHNA2Iv0m8YPRvB4dl8ZgrmHpTDS3UQDVQCBK9LBwDW
AmxRMciqKHkKcZ2hziMmOHu1uqftQbaFuRaadMgLNfX1F77crhsBEmZSpkw6WRlNHH18uajvkCty
D31PXjSV9aCcq9HUFM+1ee94sKdZbTZNq2o0EezmKsC72d+dTyYgGAeqFXhmdRCTlQwErSbtE7dv
bkecKDK5Z9Zoo2pn+QerZ751aP9U6RwiIcrqRjeYOtKYnFN+eLzGe5o0PS6z7WB2LJqoV8ciB0gA
4Z36cCuRFERUiABg7lJ7BiZSjaq+uTK476iha8NeiGGE+UiVvpn4MmPIEp2OnKmHl5/+Vx2OpLbH
J5YQy7Lc3Nz6xCd+5w9+72CrhUGoAUIAAfAALEBeYuBb9vkWFQi31583srBwOx5qVJRT4YuD/JpE
WT8utkrngaGsGG4HvFhL9h6ocufFb33/H952337tA4+eCHu9XrVW//BHPzw9U2NhJxbAoigUEkBE
JBDEN7AZb+qpEQCFAPxkWAy65ateNYPyyHg5U1czLZhpwkwzaMW1MBxTyty4Vvv83vbVi9cbY616
sx5F8cbGxsMPP3z/scPMjEgKw9smRwTedLX4cYBuexB69Gjt+Fyxp1mtR8YYBLQAwetZnwALzOxZ
+sw/fuHJb3z96W8+feniJe99v99//PHHa/UxZr6bhdd+/aQ5NYtFIQYFt3LE3eCOGBnRoRBAcDvL
ZWZrrXOu0+mcOXPmiSeeuHHjxqc+9amDBw/eGRj8LAeFxYIDBOM1gwUEQI0ACAKAuzvrnfeICDM7
50RkOBzmeT4xMRHH8c8L0H8AKP3IyGCUqPgAAAAldEVYdGRhdGU6Y3JlYXRlADIwMTMtMDEtMDJU
MjE6NDE6MTMrMDg6MDBIVmDMAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDEzLTAxLTAyVDIxOjQxOjEz
KzA4OjAwOQvYcAAAAABJRU5ErkJggg==

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/stylesheets/blog.css?1374052918

.stretch {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; HEIGHT: 1px; CLEAR: both; FONT-SIZE: 15px; =
PADDING-TOP: 0px
}
.clear {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1px; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; HEIGHT: 1px; CLEAR: both; FONT-SIZE: 15px; =
PADDING-TOP: 0px
}
.clearfix:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.clearfix {
	DISPLAY: inline-table
}
* HTML .clearfix {
	HEIGHT: 1%
}
* + HTML .clearfix {
	HEIGHT: 1%
}
.clearfix {
	DISPLAY: block
}
.replace {
	BACKGROUND-COLOR: transparent; DISPLAY: block; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: left top
}
.replace * {
	BACKGROUND-COLOR: transparent; TEXT-INDENT: -10000px; DISPLAY: block; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left top
}
.replace A {
	TEXT-INDENT: 0px
}
.replace A SPAN {
	TEXT-INDENT: -10000px
}
SPAN.accesskey {
	TEXT-DECORATION: none
}
.accessibility {
	POSITION: absolute; TOP: -999em; LEFT: -999em
}
BODY {
	TEXT-ALIGN: left; LINE-HEIGHT: 1.5; FONT-FAMILY: Helvetica, Tahoma, =
Arial, sans-serif; COLOR: black; FONT-SIZE: 12px
}
IMG {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
H1 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px 0px 0.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: black; FONT-SIZE: 2em; =
PADDING-TOP: 0px
}
H2 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px 0px 0.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: black; FONT-SIZE: 1.5em; =
PADDING-TOP: 0px
}
H3 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px 0px 0.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: black; FONT-SIZE: 1.2em; =
PADDING-TOP: 0px
}
H4 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.3em; MARGIN: 0px 0px 0.25em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: black; FONT-SIZE: 1.15em; =
PADDING-TOP: 0px
}
H5 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.3em; MARGIN: 0px 0px 0.25em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: black; FONT-SIZE: 1.1em; =
PADDING-TOP: 0px
}
H6 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.3em; MARGIN: 0px 0px 0.25em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: black; FONT-SIZE: 1em; =
PADDING-TOP: 0px
}
P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BLOCKQUOTE {
	BORDER-LEFT: #ddd 10px solid; MARGIN-LEFT: 10px
}
PRE {
	FONT-FAMILY: monospace; FONT-SIZE: 1em
}
STRONG {
	FONT-WEIGHT: bold
}
B {
	FONT-WEIGHT: bold
}
EM {
	FONT-STYLE: italic
}
I {
	FONT-STYLE: italic
}
CODE {
	FONT-FAMILY: "Courier New", Courier, monospace; WHITE-SPACE: pre; =
FONT-SIZE: 1em
}
UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 1.5em; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
UL LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0.25em 30px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
OL {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.4em; MARGIN: 0px 0px 1.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: 1em; PADDING-TOP: 0px
}
OL LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0.25em 30px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT-SIZE: 1em; PADDING-TOP: 0px
}
DL {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.4em; MARGIN: 0px 0px 1.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
DL DT {
	PADDING-BOTTOM: 0px; MARGIN: 0.25em 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
DL DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 0px 30px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
TH {
	TEXT-ALIGN: left; FONT-WEIGHT: bold
}
TD {
	FONT-SIZE: 1em
}
HR {
	BORDER-BOTTOM: black thin; MARGIN: 1.5em 10px; HEIGHT: 1px
}
DIV.topic_page {
	COLOR: #069
}
FORM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; CLEAR: both; PADDING-TOP: 0px
}
FORM DIV {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 1em; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT-SIZE: 1em; PADDING-TOP: 0px
}
FORM P {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 1em; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT-SIZE: 1em; PADDING-TOP: 0px
}
LABEL {
	WIDTH: 25%; FLOAT: left; FONT-WEIGHT: bold
}
FIELDSET {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 5px; MARGIN: 0px; PADDING-LEFT: 10px; PADDING-RIGHT: =
10px; BORDER-TOP: #eee 1px solid; BORDER-RIGHT: #eee 1px solid; =
PADDING-TOP: 5px
}
FIELDSET LEGEND {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; COLOR: #666; FONT-SIZE: 1.1em; FONT-WEIGHT: bold; PADDING-TOP: 0px
}
* HTML FIELDSET LEGEND {
	MARGIN: 0px 0px 10px -10px
}
FIELDSET UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px 0px 1.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
FIELDSET UL LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px 0px 0.5em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
INPUT.text {
	BORDER-BOTTOM: #069 1px solid; BORDER-LEFT: #069 1px solid; =
PADDING-BOTTOM: 1px; MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #069 1px solid; BORDER-RIGHT: #069 =
1px solid; PADDING-TOP: 1px
}
SELECT {
	BORDER-BOTTOM: #069 1px solid; BORDER-LEFT: #069 1px solid; =
PADDING-BOTTOM: 1px; MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #069 1px solid; BORDER-RIGHT: #069 =
1px solid; PADDING-TOP: 1px
}
TEXTAREA {
	BORDER-BOTTOM: #069 1px solid; BORDER-LEFT: #069 1px solid; =
PADDING-BOTTOM: 1px; MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #069 1px solid; BORDER-RIGHT: #069 =
1px solid; PADDING-TOP: 1px
}
INPUT.text {
	FONT-FAMILY: Arial, sans-serif, Verdana, Tahoma, Helvetica; HEIGHT: =
18px
}
INPUT.check {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; MARGIN: 0px; =
WIDTH: auto; HEIGHT: auto; BORDER-TOP: medium none; BORDER-RIGHT: medium =
none
}
INPUT.radio {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; MARGIN: 0px; =
WIDTH: auto; HEIGHT: auto; BORDER-TOP: medium none; BORDER-RIGHT: medium =
none
}
INPUT.file {
	WIDTH: 250px; HEIGHT: auto
}
INPUT.readonly {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BACKGROUND-COLOR: =
transparent; BORDER-TOP: medium none; BORDER-RIGHT: medium none
}
INPUT.button {
	BORDER-BOTTOM: #d2f3fd 1px solid; BORDER-LEFT: #d2f3fd 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; BACKGROUND: =
#006699; HEIGHT: 23px; COLOR: white; FONT-SIZE: 1em; VERTICAL-ALIGN: =
middle; BORDER-TOP: #d2f3fd 1px solid; CURSOR: pointer; BORDER-RIGHT: =
#d2f3fd 1px solid; PADDING-TOP: 2px
}
INPUT.submit {
	BORDER-BOTTOM: #d2f3fd 1px solid; BORDER-LEFT: #d2f3fd 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; BACKGROUND: =
#006699; HEIGHT: 23px; COLOR: white; FONT-SIZE: 1em; VERTICAL-ALIGN: =
middle; BORDER-TOP: #d2f3fd 1px solid; CURSOR: pointer; BORDER-RIGHT: =
#d2f3fd 1px solid; PADDING-TOP: 2px
}
INPUT.image {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; WIDTH: auto; =
HEIGHT: auto; BORDER-TOP: medium none; BORDER-RIGHT: medium none
}
TEXTAREA {
	FONT-SIZE: 1em
}
FORM DIV.submit {
	MARGIN: 1em 0px
}
FORM DIV.submit INPUT {
	WIDTH: 15em; HEIGHT: 2em
}
DIV#nav DIV.wrapper {
	POSITION: absolute; PADDING-BOTTOM: 6px; WIDTH: 100%; BOTTOM: 0px; =
BACKGROUND: url(/images/shadow.png) #6293bb repeat-x left bottom; =
FONT-SIZE: 13px; LEFT: 0px
}
DIV#nav UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 100%; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
DIV#nav LI {
	BACKGROUND-IMAGE: url(/images/line_white.gif); PADDING-BOTTOM: 0px; =
LINE-HEIGHT: 1em; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
10px; PADDING-RIGHT: 10px; DISPLAY: inline; BACKGROUND-REPEAT: =
no-repeat; BACKGROUND-POSITION: right center; FLOAT: left; =
LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV#nav LI.last {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
DIV#nav A {
	PADDING-BOTTOM: 7px; MARGIN: 0px; PADDING-LEFT: 13px; PADDING-RIGHT: =
13px; DISPLAY: block; COLOR: white; FONT-WEIGHT: bold; TEXT-DECORATION: =
none; PADDING-TOP: 7px
}
DIV#nav A:link {
	PADDING-BOTTOM: 7px; MARGIN: 0px; PADDING-LEFT: 13px; PADDING-RIGHT: =
13px; DISPLAY: block; COLOR: white; FONT-WEIGHT: bold; TEXT-DECORATION: =
none; PADDING-TOP: 7px
}
DIV#nav A:active {
	PADDING-BOTTOM: 7px; MARGIN: 0px; PADDING-LEFT: 13px; PADDING-RIGHT: =
13px; DISPLAY: block; COLOR: white; FONT-WEIGHT: bold; TEXT-DECORATION: =
none; PADDING-TOP: 7px
}
DIV#nav A:visited {
	PADDING-BOTTOM: 7px; MARGIN: 0px; PADDING-LEFT: 13px; PADDING-RIGHT: =
13px; DISPLAY: block; COLOR: white; FONT-WEIGHT: bold; TEXT-DECORATION: =
none; PADDING-TOP: 7px
}
DIV#nav .subnav A {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px; DISPLAY: =
inline-block; PADDING-TOP: 7px
}
DIV#nav .subnav A:link {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px; DISPLAY: =
inline-block; PADDING-TOP: 7px
}
DIV#nav .subnav A:active {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px; DISPLAY: =
inline-block; PADDING-TOP: 7px
}
DIV#nav .subnav A:visited {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px; DISPLAY: =
inline-block; PADDING-TOP: 7px
}
DIV#nav A:hover {
	BACKGROUND-COLOR: #3671a5
}
DIV#nav A.selected {
	BACKGROUND-COLOR: #3671a5
}
DIV#content {
	POSITION: relative; TEXT-ALIGN: left; PADDING-BOTTOM: 0px; MARGIN: 0px =
auto 20px; PADDING-LEFT: 0px; WIDTH: 701px; PADDING-RIGHT: 0px; =
PADDING-TOP: 0px
}
DIV#main {
	WIDTH: 500px; DISPLAY: inline; FLOAT: right
}
DIV#local {
	WIDTH: 200px; DISPLAY: inline; FLOAT: left
}
DIV#sub {
	DISPLAY: none
}
DIV#nav {
	POSITION: absolute; TEXT-ALIGN: left; WIDTH: 100%; TOP: -15px; LEFT: =
0px
}
BODY {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; BACKGROUND: white; PADDING-TOP: 0px
}
DIV#page {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; MARGIN: 0px auto; =
PADDING-LEFT: 0px; WIDTH: 950px; PADDING-RIGHT: 0px; BACKGROUND: white; =
PADDING-TOP: 0px
}
DIV#header {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: white; MARGIN: 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: white; PADDING-TOP: 0px
}
DIV#branding {
	TEXT-ALIGN: left; MARGIN: 1px 0px; WIDTH: 200px; FLOAT: left
}
DIV#search {
	TEXT-ALIGN: right; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; =
WIDTH: 49%; PADDING-RIGHT: 20px; FLOAT: right; PADDING-TOP: 16px
}
DIV#content {
	MARGIN-TOP: 35px; WIDTH: 100%
}
DIV#footer {
	BACKGROUND-COLOR: white; COLOR: black
}
DIV#footer P {
	PADDING-BOTTOM: 15px; MARGIN: 0px; PADDING-LEFT: 15px; PADDING-RIGHT: =
15px; FONT-SIZE: 0.8em; PADDING-TOP: 15px
}
UL.subnav {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; FONT-SIZE: 0.8em; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
UL.subnav LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px 0px 1em; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
UL.subnav LI A {
	COLOR: black; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
UL.subnav LI A:link {
	COLOR: black; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
UL.subnav LI A:visited {
	COLOR: black; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
UL.subnav LI A:active {
	COLOR: black; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
UL.subnav LI A:hover {
	TEXT-DECORATION: underline
}
UL.subnav LI STRONG {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 12px; PADDING-RIGHT: 0px; =
BACKGROUND: url(/i/subnav-highlight.gif) no-repeat left top; =
PADDING-TOP: 0px
}
UL.subnav LI STRONG A {
	BACKGROUND-COLOR: black; COLOR: white
}
UL.subnav LI STRONG A:link {
	BACKGROUND-COLOR: black; COLOR: white
}
UL.subnav LI STRONG A:visited {
	BACKGROUND-COLOR: black; COLOR: white
}
UL.subnav LI STRONG A:active {
	BACKGROUND-COLOR: black; COLOR: white
}
.nav_side {
	BORDER-BOTTOM: #caccc9 1px solid; BORDER-LEFT: #caccc9 1px solid; =
MARGIN: 0px 0px 10px; BACKGROUND: #f4f6f3; BORDER-TOP: #caccc9 1px =
solid; BORDER-RIGHT: #caccc9 1px solid
}
.nav_side UL {
	MARGIN: 0px
}
.nav_side LI {
	BORDER-BOTTOM: #e3eaf0 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
37px; TEXT-INDENT: 38px; MARGIN: 0px 5px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; HEIGHT: 37px; COLOR: #069; FONT-SIZE: 14px; =
OVERFLOW: hidden; PADDING-TOP: 0px
}
.nav_side LI A {
	DISPLAY: block; HEIGHT: 37px; COLOR: #069; TEXT-DECORATION: none
}
.nav_side LI A:hover {
	COLOR: #ff580a; TEXT-DECORATION: none
}
.nav_side LI.last {
	BORDER-BOTTOM: medium none; HEIGHT: 38px
}
.nav_side LI.select {
	BORDER-BOTTOM: medium none; MARGIN: 0px; BACKGROUND: =
url(/images/sidenav_select_bg.gif) no-repeat 0px 0px; HEIGHT: 38px
}
.nav_side LI.select A {
	HEIGHT: 38px; COLOR: #fff; FONT-WEIGHT: bold
}
.nav_side #mobile {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px 3px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px 3px
}
.nav_side #web {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -49px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -49px
}
.nav_side #architecture {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -102px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -102px
}
.nav_side #language {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -155px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -155px
}
.nav_side #internet {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -206px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -206px
}
.nav_side #opensource {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -260px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -260px
}
.nav_side #os {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -310px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -310px
}
.nav_side #database {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -361px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -361px
}
.nav_side #develop {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -412px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -412px
}
.nav_side #industry {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -466px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -466px
}
.nav_side #other {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 5px -568px; =
_background: url(/images/icon_sidenav.gif) no-repeat 5px -568px
}
.nav_side #all {
	BACKGROUND: url(/images/elite_sidenav.png) no-repeat 5px -260px; =
_background: url(/images/elite_sidenav.gif) no-repeat 5px -260px
}
.nav_side LI.select #mobile {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px 3px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px 3px
}
.nav_side LI.select #web {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -49px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -49px
}
.nav_side LI.select #architecture {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -102px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -102px
}
.nav_side LI.select #language {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -155px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -155px
}
.nav_side LI.select #internet {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -206px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -206px
}
.nav_side LI.select #opensource {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -260px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -260px
}
.nav_side LI.select #os {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -310px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -310px
}
.nav_side LI.select #database {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -361px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -361px
}
.nav_side LI.select #develop {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -412px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -412px
}
.nav_side LI.select #industry {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -466px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -466px
}
.nav_side LI.select #other {
	BACKGROUND: url(/images/icon_sidenav.png) no-repeat 10px -568px; =
_background: url(/images/icon_sidenav.gif) no-repeat 10px -568px
}
.nav_side LI.select #all {
	BACKGROUND: url(/images/elite_sidenav.png) no-repeat 10px -259px; =
_background: url(/images/elite_sidenav.gif) no-repeat 10px -259px
}
A {
	COLOR: #006699; TEXT-DECORATION: none
}
A:hover {
	COLOR: #bc2a4d; TEXT-DECORATION: underline
}
A:active {
	COLOR: #bc2a4d; TEXT-DECORATION: underline
}
BLOCKQUOTE {
	BORDER-BOTTOM: #cccccc 1px solid; BORDER-LEFT: #cccccc 1px solid; =
BACKGROUND-COLOR: #fafafa; BORDER-TOP: #cccccc 1px solid; BORDER-RIGHT: =
#cccccc 1px solid
}
CITE {
	MARGIN-LEFT: 3px; FONT-WEIGHT: bold
}
DIV#user_nav {
	TEXT-ALIGN: right; PADDING-BOTTOM: 2px; MARGIN: 3px 0px 0px; =
PADDING-LEFT: 2px; PADDING-RIGHT: 2px; FLOAT: right; PADDING-TOP: 2px
}
DIV#user_nav A.nobg {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
DIV#user_nav A.welcome {
	PADDING-RIGHT: 10px; COLOR: #e28822; FONT-WEIGHT: bold
}
DIV#user_nav A.welcome:hover {
	BACKGROUND-COLOR: transparent; COLOR: #e28822; TEXT-DECORATION: none
}
DIV#user_nav A.new_reply {
	PADDING-LEFT: 0px; COLOR: red
}
DIV#user_nav A.new_reply:hover {
	BACKGROUND-COLOR: transparent; COLOR: red; TEXT-DECORATION: none
}
DIV#user_nav A {
	BACKGROUND-IMAGE: url(/images/line_gray.gif); PADDING-BOTTOM: 1px; =
LINE-HEIGHT: 1em; PADDING-LEFT: 6px; PADDING-RIGHT: 6px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: right center; COLOR: =
gray; TEXT-DECORATION: none; PADDING-TOP: 2px
}
DIV#user_nav A:hover {
	BACKGROUND-COLOR: gray; COLOR: white; TEXT-DECORATION: underline
}
DIV.quick_menu {
	Z-INDEX: 9999; BORDER-BOTTOM: #dddddd 1px solid; POSITION: absolute; =
TEXT-ALIGN: left; BORDER-LEFT: #dddddd 1px solid; BACKGROUND-COLOR: =
white; WIDTH: 70px; BORDER-TOP: #dddddd 1px solid; TOP: 30px; =
BORDER-RIGHT: #dddddd 1px solid
}
DIV.quick_menu A {
	BACKGROUND-IMAGE: none !important; PADDING-BOTTOM: 3px !important; =
LINE-HEIGHT: 20px !important; PADDING-LEFT: 10px !important; =
PADDING-RIGHT: 6px !important; DISPLAY: block !important; =
TEXT-DECORATION: none !important; PADDING-TOP: 3px !important
}
DIV#location_ad {
	BACKGROUND-IMAGE: url(/images/yellow_east_arrow.gif); MARGIN-TOP: 5px; =
PADDING-LEFT: 12px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
left center; FLOAT: left
}
DIV#site_nav UL {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1em; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; =
LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV#site_nav LI {
	PADDING-BOTTOM: 3px; LINE-HEIGHT: 1em; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: inline; =
LIST-STYLE-IMAGE: none; BORDER-RIGHT: #aaa 1px solid; PADDING-TOP: 3px
}
DIV#site_nav LI.last {
	BORDER-RIGHT: medium none
}
DIV#channel_nav {
	POSITION: absolute; TOP: 0px; LEFT: 0px
}
DIV#channel_nav UL {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1em; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; =
LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV#channel_nav LI {
	BORDER-BOTTOM: #feddca 1px solid; BORDER-LEFT: #feddca 1px solid; =
LINE-HEIGHT: 1em; LIST-STYLE-TYPE: none; MARGIN: 0px; DISPLAY: inline; =
FLOAT: left; BORDER-TOP: #feddca 1px solid; LIST-STYLE-IMAGE: none; =
BORDER-RIGHT: 0px
}
DIV#channel_nav LI.last {
	BORDER-RIGHT: #feddca 1px solid
}
DIV#channel_nav A {
	PADDING-BOTTOM: 4px; MARGIN: 0px; PADDING-LEFT: 25px; PADDING-RIGHT: =
25px; DISPLAY: block; COLOR: green; TEXT-DECORATION: none; PADDING-TOP: =
4px
}
DIV#channel_nav A:hover {
	BACKGROUND-COLOR: #feddca
}
DIV#channel_nav A.selected {
	BACKGROUND-COLOR: #feddca
}
DIV#gg {
	MARGIN: 2px 0px; WIDTH: 728px; FLOAT: right
}
DIV#copyright {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
PADDING-TOP: 10px
}
.pagination {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; FLOAT: =
right; PADDING-TOP: 5px
}
.pagination A {
	BORDER-BOTTOM: #aaaadd 1px solid; BORDER-LEFT: #aaaadd 1px solid; =
PADDING-BOTTOM: 2px; MARGIN: 2px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
COLOR: #006699; BORDER-TOP: #aaaadd 1px solid; BORDER-RIGHT: #aaaadd 1px =
solid; TEXT-DECORATION: none; PADDING-TOP: 2px
}
.pagination A:link {
	BORDER-BOTTOM: #aaaadd 1px solid; BORDER-LEFT: #aaaadd 1px solid; =
PADDING-BOTTOM: 2px; MARGIN: 2px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
COLOR: #006699; BORDER-TOP: #aaaadd 1px solid; BORDER-RIGHT: #aaaadd 1px =
solid; TEXT-DECORATION: none; PADDING-TOP: 2px
}
.pagination A:visited {
	BORDER-BOTTOM: #aaaadd 1px solid; BORDER-LEFT: #aaaadd 1px solid; =
PADDING-BOTTOM: 2px; MARGIN: 2px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
COLOR: #006699; BORDER-TOP: #aaaadd 1px solid; BORDER-RIGHT: #aaaadd 1px =
solid; TEXT-DECORATION: none; PADDING-TOP: 2px
}
.pagination A:hover {
	BORDER-BOTTOM: #006699 1px solid; BORDER-LEFT: #006699 1px solid; =
COLOR: #000; BORDER-TOP: #006699 1px solid; BORDER-RIGHT: #006699 1px =
solid; TEXT-DECORATION: none
}
.pagination A:active {
	BORDER-BOTTOM: #006699 1px solid; BORDER-LEFT: #006699 1px solid; =
COLOR: #000; BORDER-TOP: #006699 1px solid; BORDER-RIGHT: #006699 1px =
solid; TEXT-DECORATION: none
}
.pagination SPAN.current {
	BORDER-BOTTOM: #006699 1px solid; BORDER-LEFT: #006699 1px solid; =
PADDING-BOTTOM: 2px; BACKGROUND-COLOR: #006699; MARGIN: 2px; =
PADDING-LEFT: 5px; PADDING-RIGHT: 5px; COLOR: #fff; BORDER-TOP: #006699 =
1px solid; FONT-WEIGHT: bold; BORDER-RIGHT: #006699 1px solid; =
PADDING-TOP: 2px
}
.pagination SPAN.disabled {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 2px; MARGIN: 2px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
COLOR: #ddd; BORDER-TOP: #eee 1px solid; BORDER-RIGHT: #eee 1px solid; =
PADDING-TOP: 2px
}
A.underline {
	TEXT-DECORATION: underline
}
.underline A {
	TEXT-DECORATION: underline
}
.hilite1 {
	BACKGROUND-COLOR: #ff0
}
.hilite2 {
	BACKGROUND-COLOR: #5f5
}
.hilite3 {
	BACKGROUND-COLOR: #afa
}
.hilite4 {
	BACKGROUND-COLOR: #0ff
}
SPAN.arrow {
	COLOR: #999; FONT-SIZE: 0.9em; FONT-WEIGHT: normal
}
.validation-advice {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: =
0px; COLOR: #ff3300; FONT-WEIGHT: bold; PADDING-TOP: 0px
}
.odd {
	BACKGROUND-COLOR: #effaff
}
.highlight {
	COLOR: #e28822; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.highlight A {
	COLOR: #e28822; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.highlight A:link {
	COLOR: #e28822; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.highlight A:active {
	COLOR: #e28822; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.highlight A:visited {
	COLOR: #e28822; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
.highlight A:hover {
	BACKGROUND-COLOR: #e28822; COLOR: #ffffff; TEXT-DECORATION: none
}
.rss {
	BACKGROUND-IMAGE: url(/images/rss.png); PADDING-RIGHT: 50px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: right center; =
MARGIN-RIGHT: 5px
}
.row1 {
	BACKGROUND-COLOR: #efefef; WIDTH: 155px; FONT-WEIGHT: bold
}
.row2 {
	BACKGROUND-COLOR: #dee3e7
}
.row3 {
	BACKGROUND-COLOR: #eee
}
.crumbs A {
	TEXT-DECORATION: underline
}
.flash_error {
	PADDING-BOTTOM: 10px; MARGIN: 0px 10px; PADDING-LEFT: 40px; =
PADDING-RIGHT: 40px; BACKGROUND-REPEAT: no-repeat; FONT-WEIGHT: bold; =
PADDING-TOP: 10px
}
.flash_notice {
	PADDING-BOTTOM: 10px; MARGIN: 0px 10px; PADDING-LEFT: 40px; =
PADDING-RIGHT: 40px; BACKGROUND-REPEAT: no-repeat; FONT-WEIGHT: bold; =
PADDING-TOP: 10px
}
.flash_error {
	BACKGROUND-IMAGE: url(/images/icon_error_lrg.gif); COLOR: #f30
}
.flash_notice {
	BACKGROUND-IMAGE: url(/images/icon_success_lrg.gif)
}
SELECT.validation-failed {
	BORDER-BOTTOM: #ff0000 3px solid; BORDER-LEFT: #ff0000 3px solid; =
BORDER-TOP: #ff0000 3px solid; BORDER-RIGHT: #ff0000 3px solid
}
INPUT.validation-failed {
	BORDER-BOTTOM: #ff0000 3px solid; BORDER-LEFT: #ff0000 3px solid; =
BORDER-TOP: #ff0000 3px solid; BORDER-RIGHT: #ff0000 3px solid
}
TEXTAREA.validation-failed {
	BORDER-BOTTOM: #ff0000 3px solid; BORDER-LEFT: #ff0000 3px solid; =
BORDER-TOP: #ff0000 3px solid; BORDER-RIGHT: #ff0000 3px solid
}
* HTML SELECT.validation-failed {
	BACKGROUND-COLOR: #ff0000
}
SPAN.field_error {
	DISPLAY: none
}
DIV.quote_title {
	PADDING-BOTTOM: 5px; MARGIN: 5px 0px 0px 15px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; FONT-WEIGHT: bold; PADDING-TOP: 5px
}
DIV.quote_div {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 3px; MARGIN: 0px 5px 5px 15px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 3px; BACKGROUND: #fafafa; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 3px
}
DIV.attachments {
	MARGIN-TOP: 10px; BORDER-TOP: #999999 1px solid
}
DIV.attachments UL {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
DIV.postauthor UL {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
DIV.attachments UL {
	BORDER-BOTTOM: #cccccc 1px solid; BORDER-LEFT: #cccccc 1px solid; =
PADDING-BOTTOM: 5px; MARGIN: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
BORDER-TOP: #cccccc 1px solid; BORDER-RIGHT: #cccccc 1px solid; =
PADDING-TOP: 5px
}
IMG.magplus {
	CURSOR: url(/images/magplus.gif), pointer
}
DIV.logo {
	BACKGROUND-IMAGE: url(/images/logo_bg.gif); PADDING-BOTTOM: 6px; =
PADDING-LEFT: 2px; PADDING-RIGHT: 6px; BACKGROUND-REPEAT: no-repeat; =
FLOAT: left; PADDING-TOP: 2px
}
SPAN.thumb_box {
	BORDER-BOTTOM: #ccc 1px solid; TEXT-ALIGN: center; BORDER-LEFT: #ccc =
1px solid; WIDTH: 130px; DISPLAY: table-cell; HEIGHT: 95px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc =
1px solid
}
SPAN.thumb_box IMG {
	VERTICAL-ALIGN: middle
}
.right {
	FLOAT: right
}
.left {
	FLOAT: left
}
TABLE.bbcode {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid
}
TABLE.bbcode TD {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; BORDER-TOP: =
#ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 3px
}
DIV#search_engine_box {
	BORDER-BOTTOM: #ccc 1px solid; POSITION: fixed; TEXT-ALIGN: left; =
BORDER-LEFT: #ccc 1px solid; BACKGROUND-COLOR: white; WIDTH: 240px; =
BOTTOM: 0px; BORDER-TOP: #ccc 1px solid; RIGHT: 0px; BORDER-RIGHT: #ccc =
1px solid
}
#search_engine_box H2 {
	PADDING-BOTTOM: 5px; BACKGROUND-COLOR: #526ea6; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; COLOR: white; FONT-SIZE: 12px; FONT-WEIGHT: normal; =
PADDING-TOP: 5px
}
#search_engine_box H2 SPAN {
	COLOR: black
}
#search_engine_box H2 A {
	POSITION: absolute; COLOR: white; RIGHT: 5px
}
#search_engine_box DIV {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; =
PADDING-TOP: 0px
}
#search_engine_box LI {
	LIST-STYLE-TYPE: square; MARGIN-LEFT: 15px
}
* HTML DIV#search_engine_box {
	POSITION: absolute; BOTTOM: auto; RIGHT: auto
}
DIV#chat_button {
	BORDER-BOTTOM: #ccc 1px solid; POSITION: fixed; TEXT-ALIGN: right; =
BORDER-LEFT: #ccc 1px solid; PADDING-BOTTOM: 2px; BACKGROUND-COLOR: =
#eee; PADDING-LEFT: 2px; WIDTH: 80px; BOTTOM: 0px; PADDING-RIGHT: 2px; =
VERTICAL-ALIGN: middle; BORDER-TOP: #ccc 1px solid; RIGHT: 10px; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 2px
}
DIV#chat_input {
	POSITION: fixed; TEXT-ALIGN: left; BOTTOM: 25px; RIGHT: 10px
}
#chat_iframe {
	BACKGROUND-COLOR: transparent; WIDTH: 360px
}
DIV#chat_button IMG {
	VERTICAL-ALIGN: middle
}
* HTML DIV#chat_button {
	POSITION: absolute; BOTTOM: auto; RIGHT: auto
}
* HTML DIV#chat_input {
	POSITION: absolute; BOTTOM: auto; RIGHT: auto
}
.tooltip {
	Z-INDEX: 10000 !important; POSITION: absolute !important; FONT-SIZE: =
12px; OVERFLOW: hidden
}
.tooltip .xtop {
	DISPLAY: block; BACKGROUND: none transparent scroll repeat 0% 0%; =
FONT-SIZE: 1px
}
.tooltip .xbottom {
	DISPLAY: block; BACKGROUND: none transparent scroll repeat 0% 0%; =
FONT-SIZE: 1px
}
.tooltip .xb1 {
	DISPLAY: block; OVERFLOW: hidden
}
.tooltip .xb2 {
	DISPLAY: block; OVERFLOW: hidden
}
.tooltip .xb3 {
	DISPLAY: block; OVERFLOW: hidden
}
.tooltip .xb4 {
	DISPLAY: block; OVERFLOW: hidden
}
.tooltip .xb1 {
	HEIGHT: 1px
}
.tooltip .xb2 {
	HEIGHT: 1px
}
.tooltip .xb3 {
	HEIGHT: 1px
}
.tooltip .xb2 {
	BORDER-LEFT: #333 1px solid; BACKGROUND: #666; BORDER-RIGHT: #333 1px =
solid
}
.tooltip .xb3 {
	BORDER-LEFT: #333 1px solid; BACKGROUND: #666; BORDER-RIGHT: #333 1px =
solid
}
.tooltip .xb4 {
	BORDER-LEFT: #333 1px solid; BACKGROUND: #666; BORDER-RIGHT: #333 1px =
solid
}
.tooltip .xbottom .xb2 {
	BACKGROUND: #666
}
.tooltip .xbottom .xb3 {
	BACKGROUND: #666
}
.tooltip .xbottom .xb4 {
	BACKGROUND: #666
}
.tooltip .xb1 {
	MARGIN: 0px 5px; BACKGROUND: #333
}
.tooltip .xb2 {
	BORDER-RIGHT-WIDTH: 2px; MARGIN: 0px 3px; BORDER-TOP-WIDTH: 0px; =
BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 2px
}
.tooltip .xb3 {
	MARGIN: 0px 2px
}
.tooltip .xb4 {
	MARGIN: 0px 1px; HEIGHT: 2px
}
.tooltip .xboxcontent {
	BORDER-BOTTOM: #333 0px solid; TEXT-ALIGN: center; BORDER-LEFT: #333 =
1px solid; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #666; MARGIN: 0px; =
PADDING-LEFT: 20px; PADDING-RIGHT: 20px; WORD-WRAP: break-word; COLOR: =
#000; FONT-SIZE: 125%; BORDER-TOP: #333 0px solid; BORDER-RIGHT: #333 =
1px solid; PADDING-TOP: 0px; text-shadow: 2px 2px 0px #CCC
}
DIV#site_nav {
	Z-INDEX: 1
}
DIV#channel_nav {
	Z-INDEX: 1
}
DIV#header {
	Z-INDEX: 2; POSITION: relative
}
.logo A:hover {
	BACKGROUND-COLOR: inherit
}
INPUT#login_button {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 147px; BACKGROUND: =
url(/images/login_button.jpg) no-repeat; HEIGHT: 34px; COLOR: #0056ad; =
FONT-SIZE: 0px; BORDER-TOP: 0px; CURSOR: pointer; BORDER-RIGHT: 0px
}
#favorite_form_container {
	Z-INDEX: 777; POSITION: absolute; TEXT-ALIGN: left; PADDING-BOTTOM: =
10px; PADDING-LEFT: 10px; WIDTH: 580px; PADDING-RIGHT: 10px; BACKGROUND: =
url(/images/app/bg_new.png) no-repeat; HEIGHT: 250px; FONT-SIZE: 12px; =
PADDING-TOP: 10px
}
#favorite_form_container .cont {
	WIDTH: 580px; BACKGROUND: #fff; HEIGHT: 250px
}
#favorite_form_wrapper {
	POSITION: relative; PADDING-LEFT: 15px
}
#close_list {
	BORDER-BOTTOM: #ccc 1px dashed; TEXT-ALIGN: right; PADDING-BOTTOM: 5px; =
PADDING-LEFT: 10px; WIDTH: 560px; PADDING-RIGHT: 10px; MARGIN-BOTTOM: =
20px; BACKGROUND: #eeeeee; OVERFLOW: hidden; PADDING-TOP: 5px
}
#favorite_form_close {
	CURSOR: pointer
}
#favorite_form_success {
	TEXT-ALIGN: center; MARGIN-TOP: 70px; FONT-SIZE: 18px
}
#favorite_form_success IMG {
	VERTICAL-ALIGN: bottom; MARGIN-RIGHT: 10px
}
#current_tags_panel {
	MARGIN: 10px 0px 0px
}
#current_tags_panel SPAN {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #5d7a9b; MARGIN: 0px 5px 5px =
0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: inline-block; =
COLOR: #fff; PADDING-TOP: 0px; -webkit-border-radius: 30px; =
-moz-border-radius: 30px; -o-border-radius: 30px; border-radius: 30px
}
#suggested_tags_panel {
	MARGIN: 10px 0px 0px
}
#suggested_tags_panel A {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #aab5c3; MARGIN: 0px 5px 5px =
0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: inline-block; =
PADDING-TOP: 0px; -webkit-border-radius: 30px; -moz-border-radius: 30px; =
-o-border-radius: 30px; border-radius: 30px
}
#suggested_tags_panel A {
	COLOR: #fff; TEXT-DECORATION: none
}
#suggested_tags_panel A:hover {
	BACKGROUND-COLOR: #f87b00
}
#suggested_tags_panel A.added {
	BACKGROUND-COLOR: #f87b00
}
.news_tag {
	LINE-HEIGHT: 20px; MARGIN: 10px 0px 5px; DISPLAY: block; CLEAR: both
}
.news_tag:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.news_tag A {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #aab5c3; MARGIN: 0px 5px 5px =
0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: inline-block; =
COLOR: #fff; TEXT-DECORATION: none; PADDING-TOP: 0px; =
-webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: =
10px; border-radius: 10px
}
.news_tag A:hover {
	BACKGROUND-COLOR: #f87b00
}
#suggested_tags_panel A.added {
	BACKGROUND-COLOR: #f87b00
}
.news_tag SPAN.hilite1 {
	BACKGROUND-COLOR: transparent
}
.news_tag SPAN.view_all {
	FLOAT: right
}
.news_tag SPAN.view_all A {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 6px; PADDING-RIGHT: 6px; BACKGROUND: =
none transparent scroll repeat 0% 0%; COLOR: #069; TEXT-DECORATION: =
underline; PADDING-TOP: 0px
}
.title .news_tag {
	TEXT-ALIGN: center
}
.category_tags {
	PADDING-BOTTOM: 5px; MARGIN-TOP: 10px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 5px
}
.category_tags A {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 20px; MARGIN: 0px 6px 0px 0px; =
PADDING-LEFT: 12px; PADDING-RIGHT: 0px; DISPLAY: inline-block; =
BACKGROUND: url(/images/tag_bg.gif) no-repeat left top; HEIGHT: 20px; =
COLOR: #fff; TEXT-DECORATION: none; PADDING-TOP: 0px
}
.category_tags A SPAN {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 12px; DISPLAY: =
inline-block; BACKGROUND: url(/images/tag_bg.gif) no-repeat right top; =
HEIGHT: 20px; PADDING-TOP: 0px
}
.category_tags A:hover {
	BACKGROUND: url(/images/tag_bg_3.gif) no-repeat left top
}
.category_tags A.pick_on {
	BACKGROUND: url(/images/tag_bg_3.gif) no-repeat left top
}
.category_tags A:hover SPAN {
	BACKGROUND: url(/images/tag_bg_3.gif) no-repeat right top
}
.category_tags A.pick_on SPAN {
	BACKGROUND: url(/images/tag_bg_3.gif) no-repeat right top
}
#user_nav #notifications_count {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
LINE-HEIGHT: 24px; MARGIN: 0px 0px 0px -5px; BACKGROUND: #fff; =
BORDER-TOP: #ccc 1px solid; FONT-WEIGHT: bold; BORDER-RIGHT: #ccc 1px =
solid; TEXT-DECORATION: none; -webkit-border-radius: 3px; =
-moz-border-radius: 3px; border-radius: 3px; -khtml-border-radius: 3px
}
#user_nav A#notifications_count:hover {
	BORDER-BOTTOM: transparent 1px solid; BORDER-LEFT: transparent 1px =
solid; BACKGROUND: #006eb5; COLOR: #fff; BORDER-TOP: transparent 1px =
solid; BORDER-RIGHT: transparent 1px solid; -webkit-border-radius: 3px; =
-moz-border-radius: 3px; border-radius: 3px; -khtml-border-radius: 3px
}
#user_nav .new_notice#notifications_count {
	BORDER-BOTTOM: transparent 1px solid; BORDER-LEFT: transparent 1px =
solid; BACKGROUND: #006eb5; COLOR: #fff; BORDER-TOP: transparent 1px =
solid; BORDER-RIGHT: transparent 1px solid; -webkit-border-radius: 3px; =
-moz-border-radius: 3px; border-radius: 3px; -khtml-border-radius: 3px
}
#user_nav .clicked {
	BACKGROUND: url(/images/sms_click_bg.gif) no-repeat center top; COLOR: =
#fff
}
#notifications_menu {
	Z-INDEX: 999; BORDER-BOTTOM: #ddd 1px solid; POSITION: absolute; =
TEXT-ALIGN: left; BORDER-LEFT: #ddd 1px solid; BACKGROUND-COLOR: white; =
WIDTH: 380px; COLOR: black; OVERFLOW: hidden; BORDER-TOP: #ddd 1px =
solid; TOP: 26px; RIGHT: 10px; BORDER-RIGHT: #ddd 1px solid; _top: 23px; =
-moz-box-shadow: 0 1px 5px #888; -webkit-box-shadow: 0 1px 5px #888; =
box-shadow: 0 1px 5px #888
}
#notifications_loading {
	POSITION: absolute; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: yellow; =
PADDING-LEFT: 5px; WIDTH: 60px; PADDING-RIGHT: 5px; PADDING-TOP: 0px; =
LEFT: 150px
}
#notifications_menu .menu_title {
	BORDER-BOTTOM: #ddd 1px solid; PADDING-BOTTOM: 0px; LINE-HEIGHT: 34px; =
PADDING-LEFT: 10px; PADDING-RIGHT: 10px; HEIGHT: 36px; OVERFLOW: hidden; =
PADDING-TOP: 0px
}
#notifications_menu .menu_title A {
	COLOR: #333; TEXT-DECORATION: underline
}
#notifications_menu .menu_title A:hover {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
#notifications_menu .menu_title .title {
	FLOAT: left
}
#notifications_menu .menu_title .all {
	FLOAT: right
}
#notifications_menu .notification_summary {
	BORDER-BOTTOM: #ddd 1px solid; PADDING-BOTTOM: 10px; BACKGROUND-COLOR: =
#f6fafc; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; COLOR: #333; OVERFLOW: =
hidden; CURSOR: pointer; PADDING-TOP: 10px
}
#notifications_menu .notification_summary .time {
	COLOR: #999
}
#notifications_menu .unread.notification_summary {
	BACKGROUND-COLOR: #fff; FONT-WEIGHT: bold
}
#notifications_menu .unread.notification_summary .time {
	COLOR: #333; FONT-WEIGHT: normal
}
#notifications_menu .current.notification_summary {
	BACKGROUND-COLOR: #dbebf4
}
#notifications_menu .notification_summary:hover {
	BACKGROUND-COLOR: #dbebf4
}
#notifications_menu .show_all {
	CURSOR: pointer
}
#notifications_menu .return {
	CURSOR: pointer
}
#notifications_menu .notification_detail {
=09
}
#notifications_menu .notification_detail_title {
	BORDER-BOTTOM: #eee 1px solid; POSITION: relative; PADDING-BOTTOM: 4px; =
LINE-HEIGHT: 26px; MARGIN: 0px 0px 5px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; BACKGROUND: #fafafa; OVERFLOW: hidden; PADDING-TOP: =
4px
}
#notifications_menu .notification_detail_title .subject_link {
	DISPLAY: block
}
#notifications_menu .notification_detail_title .time {
	POSITION: absolute; TOP: 4px; RIGHT: 10px
}
#notifications_menu .notification_detail_notice {
	PADDING-BOTTOM: 10px; MARGIN: 5px 0px 0px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; BACKGROUND: url(/images/line_1.gif) repeat-x 50% =
top; COLOR: #999; PADDING-TOP: 5px
}
#notifications_menu .notification_detail_content {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 0px
}
#notifications_menu .system_message {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
PADDING-TOP: 0px
}
#notifications_menu .notification_detail_item {
	BORDER-BOTTOM: #e6e6e6 1px solid; PADDING-BOTTOM: 7px; PADDING-LEFT: =
10px; PADDING-RIGHT: 10px; OVERFLOW: hidden; PADDING-TOP: 7px
}
#notifications_menu SPAN.time {
	FLOAT: right; COLOR: gray
}
#notifications_menu SPAN.paginate {
	FLOAT: right
}
#notifications_menu SPAN.paginate .separated {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 10px; WIDTH: 10px; PADDING-RIGHT: =
10px; COLOR: #666; PADDING-TOP: 0px
}
#notifications_menu SPAN.paginate #prev_button {
	TEXT-DECORATION: none
}
#notifications_menu SPAN.paginate #next_button {
	TEXT-DECORATION: none
}
#notifications_menu SPAN.paginate A {
	PADDING-LEFT: 3px; CURSOR: pointer
}
#notifications_menu SPAN.paginate A.disable {
	COLOR: #999; CURSOR: default; TEXT-DECORATION: none
}
DIV#page {
	WIDTH: 100%
}
DIV#header {
	HEIGHT: 30px
}
DIV#header {
	POSITION: relative; MARGIN: 0px auto; WIDTH: 950px
}
DIV#content {
	POSITION: relative; MARGIN: 0px auto; WIDTH: 950px
}
DIV#branding {
	POSITION: relative; MARGIN: 0px auto; WIDTH: 950px
}
DIV#blog_site_nav {
	MARGIN-TOP: 3px; FLOAT: left
}
DIV#blog_site_nav A.homepage {
	BACKGROUND-IMAGE: url(/images/logo-small.gif); PADDING-LEFT: 77px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center
}
DIV#blog_site_nav A {
	PADDING-BOTTOM: 3px; LINE-HEIGHT: 2.2em; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; PADDING-TOP: 3px
}
A#msna {
	TEXT-DECORATION: none
}
DIV#branding {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FLOAT: =
none; COLOR: white; PADDING-TOP: 10px
}
DIV#branding H1 {
	MARGIN: 0px; FONT-SIZE: 30px; PADDING-TOP: 8px
}
DIV#branding A {
	COLOR: white; TEXT-DECORATION: underline
}
DIV#branding A:link {
	COLOR: white; TEXT-DECORATION: underline
}
DIV#branding A:active {
	COLOR: white; TEXT-DECORATION: underline
}
DIV#branding A:visited {
	COLOR: white; TEXT-DECORATION: underline
}
DIV#branding A:hover {
	COLOR: white; TEXT-DECORATION: none
}
DIV#branding H1 A {
	TEXT-DECORATION: none
}
DIV#branding H1 A:link {
	TEXT-DECORATION: none
}
DIV#branding H1 A:active {
	TEXT-DECORATION: none
}
DIV#branding H1 A:visited {
	TEXT-DECORATION: none
}
DIV#local {
	OVERFLOW: hidden
}
DIV#local H5 {
	MARGIN-LEFT: 10px
}
DIV#local LI {
	LINE-HEIGHT: 2.1em; LIST-STYLE-TYPE: square; MARGIN-LEFT: 25px
}
#blog_name {
	PADDING-LEFT: 38px; FLOAT: left
}
#blog_preview {
	TEXT-ALIGN: right; WIDTH: 200px; FLOAT: right; HEIGHT: 18px
}
#blog_preview IMG {
	VERTICAL-ALIGN: middle
}
#blog_domain {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 20px; FLOAT: =
right; PADDING-TOP: 35px
}
DIV#content {
	MARGIN-TOP: 5px
}
DIV#local {
	BORDER-BOTTOM: black 1px solid; BORDER-LEFT: black 1px solid; =
PADDING-BOTTOM: 0px; MARGIN: 3px 3px 0px 0px; PADDING-LEFT: 3px; WIDTH: =
188px; PADDING-RIGHT: 3px; BORDER-TOP: black 1px solid; BORDER-RIGHT: =
black 1px solid; PADDING-TOP: 10px
}
DIV#main {
	BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 5px; =
MARGIN: 3px 0px 0px 5px; PADDING-LEFT: 12px; WIDTH: 714px; =
PADDING-RIGHT: 12px; OVERFLOW: hidden; BORDER-TOP: 1px solid; =
BORDER-RIGHT: 1px solid; PADDING-TOP: 5px
}
#blog_owner {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; PADDING-LEFT: 13px; =
PADDING-RIGHT: 13px; PADDING-TOP: 0px
}
DIV#blog_owner_logo {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: =
10px
}
DIV#blog_owner_logo IMG {
	WIDTH: 120px !important
}
#blog_owner_name {
	FONT-WEIGHT: bolder; PADDING-TOP: 5px
}
#user_visits {
	MARGIN-BOTTOM: 20px
}
#user_visits DIV.left {
	WIDTH: 75px; OVERFLOW: hidden
}
DIV.user_visit {
	MARGIN: 10px 0px 0px 5px; WIDTH: 75px; FLOAT: left; HEIGHT: 90px; =
OVERFLOW: hidden
}
#blog_actions {
	MARGIN-BOTTOM: 20px
}
#blog_actions UL LI {
	LIST-STYLE-TYPE: none; MARGIN-LEFT: 10px; LIST-STYLE-IMAGE: none
}
#blog_actions A.profile {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: 10px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center; =
PADDING-TOP: 0px
}
#blog_actions A.message {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: 10px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center; =
PADDING-TOP: 0px
}
#blog_actions A.guest_book {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: 10px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center; =
PADDING-TOP: 0px
}
#blog_actions A.subscription {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: 10px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center; =
PADDING-TOP: 0px
}
#blog_actions A.profile {
	BACKGROUND-IMAGE: url(/images/blog/profile.png)
}
#blog_actions A.message {
	BACKGROUND-IMAGE: url(/images/blog/message.png)
}
#blog_actions A.guest_book {
	BACKGROUND-IMAGE: url(/images/blog/guest_book.png)
}
#blog_actions A.subscription {
	BACKGROUND-IMAGE: url(/images/blog/subscription.png)
}
DIV#rss LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
DIV.blog_nav {
	MARGIN-BOTTOM: 15px; RIGHT: 20px
}
DIV.pre_next {
	TEXT-ALIGN: right; FLOAT: right; PADDING-TOP: 5px
}
DIV.pre_next A {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; =
BACKGROUND-REPEAT: no-repeat; PADDING-TOP: 0px
}
DIV.pre_next A.next {
	BACKGROUND-IMAGE: url(/images/gray_west_arrow.gif); =
BACKGROUND-POSITION: left center
}
DIV.pre_next A.pre {
	BACKGROUND-IMAGE: url(/images/gray_east_arrow.gif); =
BACKGROUND-POSITION: right center
}
.blog_main {
	BORDER-BOTTOM: 1px dotted; PADDING-BOTTOM: 15px; MARGIN: auto auto =
10px; PADDING-LEFT: 11px; WIDTH: 700px; PADDING-RIGHT: 11px; =
PADDING-TOP: 10px
}
.blog_title {
	MARGIN-BOTTOM: 15px
}
.blog_title H3 .actions A {
	BACKGROUND-COLOR: transparent; MARGIN-LEFT: 8px
}
.blog_bottom {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 15px
}
.blog_bottom LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px 10px 0px 0px; PADDING-RIGHT: 10px; =
DISPLAY: inline; FLOAT: left; LIST-STYLE-IMAGE: none; BORDER-RIGHT: 1px =
solid
}
.blog_bottom LI.last {
	BORDER-RIGHT: medium none
}
.blog_bottom A.more {
	BACKGROUND-IMAGE: url(/images/icon_more.gif); PADDING-RIGHT: 50px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: right center
}
.blog_comment {
	PADDING-BOTTOM: 15px; MARGIN-TOP: 15px; PADDING-LEFT: 15px; WIDTH: =
685px; PADDING-RIGHT: 15px; BORDER-TOP: gray 1px solid; PADDING-TOP: =
15px
}
.comment_title {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
PADDING-TOP: 3px
}
.comment_content {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
PADDING-TOP: 3px
}
.comment_title .delete {
	POSITION: absolute; RIGHT: 30px
}
.comment_content {
	MARGIN-BOTTOM: 10px
}
DIV.picture_thumb {
	MARGIN: 0px 12px; WIDTH: 142px; FLOAT: left; HEIGHT: 170px; OVERFLOW: =
hidden
}
DIV.picture_thumb LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px; LIST-STYLE-IMAGE: none
}
DIV.picture_full {
	TEXT-ALIGN: center; WIDTH: 100%; OVERFLOW: auto; BORDER-TOP: gray 1px =
solid; PADDING-TOP: 15px
}
DIV.picture_full UL {
	TEXT-ALIGN: left; PADDING-BOTTOM: 20px; MARGIN: 10px 0px; WIDTH: 100%
}
DIV.picture_full LI {
	PADDING-BOTTOM: 5px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
10px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 15px
}
.show_full_flag {
	MARGIN-TOP: 10px; FLOAT: right
}
DIV.digg {
	TEXT-ALIGN: center; PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; WIDTH: =
52px; PADDING-RIGHT: 5px; FLOAT: right; PADDING-TOP: 0px
}
.digg H3 {
	BACKGROUND-IMAGE: url(/images/digg.jpg); PADDING-BOTTOM: 7px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-REPEAT: no-repeat; =
PADDING-TOP: 7px
}
.digg DIV {
	BACKGROUND-IMAGE: url(/images/digg.jpg); PADDING-BOTTOM: 7px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BACKGROUND-REPEAT: no-repeat; =
PADDING-TOP: 7px
}
.digg H3.digged {
	BACKGROUND-IMAGE: url(/images/digged.jpg)
}
.digg DIV.digged {
	BACKGROUND-IMAGE: url(/images/digged.jpg)
}
.digg H3 A {
	PADDING-LEFT: 15px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
left center; FONT-SIZE: 14px; FONT-WEIGHT: normal; TEXT-DECORATION: none
}
.digg H3 SPAN {
	PADDING-LEFT: 15px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
left center; FONT-SIZE: 14px; FONT-WEIGHT: normal; TEXT-DECORATION: none
}
.digg DIV A {
	PADDING-LEFT: 15px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
left center; FONT-SIZE: 14px; FONT-WEIGHT: normal; TEXT-DECORATION: none
}
.digg DIV SPAN {
	PADDING-LEFT: 15px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
left center; FONT-SIZE: 14px; FONT-WEIGHT: normal; TEXT-DECORATION: none
}
DIV.digg DIV.digg_admin {
	TEXT-ALIGN: left; WIDTH: 100px; BACKGROUND: none transparent scroll =
repeat 0% 0%
}
DIV.digg DIV.digg_admin A {
	PADDING-LEFT: 2px
}
.digg H3 A.digg {
	BACKGROUND-IMAGE: url(/images/icon_digg.gif); COLOR: #152f93
}
.digg H3 SPAN.digg {
	BACKGROUND-IMAGE: url(/images/icon_digg.gif); COLOR: #152f93
}
.digg DIV A.digg {
	BACKGROUND-IMAGE: url(/images/icon_digg.gif); COLOR: #152f93
}
.digg DIV SPAN.digg {
	BACKGROUND-IMAGE: url(/images/icon_digg.gif); COLOR: #152f93
}
.digg H3 A.bury {
	BACKGROUND-IMAGE: url(/images/icon_bury.gif); COLOR: #a03a32
}
.digg H3 SPAN.bury {
	BACKGROUND-IMAGE: url(/images/icon_bury.gif); COLOR: #a03a32
}
.digg DIV A.bury {
	BACKGROUND-IMAGE: url(/images/icon_bury.gif); COLOR: #a03a32
}
.digg DIV SPAN.bury {
	BACKGROUND-IMAGE: url(/images/icon_bury.gif); COLOR: #a03a32
}
DIV#digg_bottom {
	MARGIN: 5px 0px; PADDING-LEFT: 270px; DISPLAY: inline-block
}
DIV#digg_bottom DIV {
	BACKGROUND-IMAGE: url(/images/digg_bottom.gif); TEXT-ALIGN: center; =
LINE-HEIGHT: 25px; WIDTH: 72px; FLOAT: left; HEIGHT: 50px; FONT-SIZE: =
14px; CURSOR: pointer; MARGIN-RIGHT: 10px; PADDING-TOP: 9px
}
DIV#digg_bottom STRONG {
	COLOR: white
}
#share_weibo {
	TEXT-ALIGN: right; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; =
WIDTH: 160px; PADDING-RIGHT: 5px; DISPLAY: inline-block; FONT: 12px/32px =
Arial, Helvetica, sans-serif; BACKGROUND: none transparent scroll repeat =
0% 0%; FLOAT: right; HEIGHT: 32px; COLOR: #333; CURSOR: auto; =
PADDING-TOP: 27px
}
#share_weibo IMG {
	MARGIN: 0px 5px
}
#share_weibo A {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
DIV#digg_bottom A {
	BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: #1607d1; =
TEXT-DECORATION: none
}
DIV#digg_bottom DIV.digged {
	BACKGROUND-IMAGE: url(/images/digged_bottom.gif); COLOR: #f14e10; =
CURSOR: auto
}
H3.type_good {
	PADDING-LEFT: 25px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
0px 13px
}
H3.type_mid {
	PADDING-LEFT: 25px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
0px 13px
}
H3.type_original {
	PADDING-LEFT: 25px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
0px 13px
}
H3.type_translate {
	PADDING-LEFT: 25px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
0px 13px
}
H3.type_reprint {
	PADDING-LEFT: 25px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: =
0px 13px
}
H3.type_good {
	BACKGROUND-IMAGE: url(/images/blog/type_good.png)
}
H3.type_mid {
	BACKGROUND-IMAGE: url(/images/blog/type_mid.png)
}
H3.type_original {
	BACKGROUND-IMAGE: url(/images/blog/type_original.png)
}
H3.type_translate {
	BACKGROUND-IMAGE: url(/images/blog/type_translate.png)
}
H3.type_reprint {
	BACKGROUND-IMAGE: url(/images/blog/type_reprint.png)
}
#guest_book_emotes A {
	BACKGROUND-COLOR: transparent; WIDTH: 125px; DISPLAY: block; FLOAT: =
left; COLOR: black; TEXT-DECORATION: none
}
#resume {
	WIDTH: 100%
}
#resume LABEL.title {
	WIDTH: 200px; FONT-WEIGHT: normal
}
#resume LABEL {
	WIDTH: 50px; FONT-WEIGHT: normal
}
DIV.group {
	HEIGHT: 160px
}
DIV.group DIV.content {
	WIDTH: 630px; FLOAT: right
}
#blog_options LI {
	LIST-STYLE-TYPE: none; MARGIN-LEFT: 0px; LIST-STYLE-IMAGE: none
}
#blog_options LABEL {
	WIDTH: 150px
}
TD.row1 {
	BACKGROUND-COLOR: transparent; WIDTH: 160px; VERTICAL-ALIGN: top
}
H3 SPAN {
	PADDING-LEFT: 30px; FONT-SIZE: 12px; FONT-WEIGHT: normal
}
DIV.blog_title H3 {
	FONT-SIZE: 16px; PADDING-TOP: 10px
}
DIV.blog_title H3 SPAN {
	MARGIN-LEFT: 5px; FONT-SIZE: 12px; FONT-WEIGHT: normal
}
DIV.blog_title H3 SPAN A {
	MARGIN-LEFT: 8px
}
TABLE.admin {
	WIDTH: 100%; MARGIN-BOTTOM: 20px
}
TABLE.admin THEAD {
	FONT-SIZE: 13px; FONT-WEIGHT: bold
}
TABLE.admin TBODY TD {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
#ddd 1px dashed; PADDING-TOP: 5px
}
DIV#favorite_tag_list {
	BORDER-BOTTOM: #ccc 1px solid; PADDING-BOTTOM: 20px; MARGIN-BOTTOM: =
20px
}
DIV#favorite_tag_list LI {
	LIST-STYLE-TYPE: none; MARGIN: 5px; WIDTH: 120px; FLOAT: left; =
OVERFLOW: hidden; LIST-STYLE-IMAGE: none
}
DIV#favorite_tag_list INPUT.text {
	WIDTH: 100px
}
#main_nav {
	BORDER-BOTTOM: #36a 1px solid; MARGIN: 10px 0px 12px; HEIGHT: 25px
}
#main_nav LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px 12px; FLOAT: left; LIST-STYLE-IMAGE: =
none
}
#main_nav A {
	BORDER-BOTTOM: medium none; BORDER-LEFT: #36a 1px solid; =
PADDING-BOTTOM: 0.25em; PADDING-LEFT: 1em; PADDING-RIGHT: 1em; DISPLAY: =
block; BACKGROUND: #ddd; COLOR: black; BORDER-TOP: #36a 1px solid; =
BORDER-RIGHT: #36a 1px solid; TEXT-DECORATION: none; PADDING-TOP: 0.25em
}
#main_nav LI.activetab A {
	BORDER-BOTTOM: white 1px solid; BACKGROUND: #fff
}
UL#main_nav A:hover {
	BORDER-BOTTOM: white 1px solid; BACKGROUND: #fff
}
#main_nav LI.nonetab {
	PADDING-LEFT: 30px
}
#main_nav LI.nonetab A {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; PADDING-LEFT: 0px; WIDTH: 200px; PADDING-RIGHT: 0px; DISPLAY: =
inline; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px
}
DIV.activity {
	BORDER-BOTTOM: #d8dfea 1px solid; PADDING-BOTTOM: 7px; PADDING-LEFT: =
10px; PADDING-RIGHT: 10px; MARGIN-BOTTOM: 10px; PADDING-TOP: 7px
}
DIV.new_reply {
	BACKGROUND-COLOR: #eee
}
.activity_content {
	PADDING-LEFT: 22px; WIDTH: 500px; BACKGROUND-REPEAT: no-repeat; FLOAT: =
left
}
.Topic .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/topic.gif)
}
.Blog .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/blog.gif)
}
.BlogComment .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/blog_comment.gif)
}
.Post .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/post.gif)
}
.News .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/news.gif)
}
.NewsComment .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/news_comment.gif)
}
.Essence .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/essence.gif)
}
.EssenceComment .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/essence_comment.gif)
}
.ArticleComment .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/post.gif)
}
.Picture .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/picture.gif)
}
.PictureComment .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/picture_comment.gif)
}
.Problem .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/problem.gif)
}
.Solution .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/solution.gif)
}
.GroupTopic .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/group_topic.gif)
}
.GroupPost .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/group_post.gif)
}
.Page .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/page.gif)
}
.Card .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/page.gif)
}
.PageComment .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/page_comment.gif)
}
.GuestBook .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/guest_book.gif)
}
.UserFavorite .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/user_favorite.gif)
}
.Twitter .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/twitter.gif)
}
.Subscription .activity_content {
	BACKGROUND-IMAGE: url(/images/subscription/subscription.gif)
}
DIV.activity_summary {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 0px; PADDING-RIGHT: 5px; =
PADDING-TOP: 5px
}
DIV.activity_summary IMG.thumb {
	BORDER-BOTTOM: #eee 1px solid; BORDER-LEFT: #eee 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; BORDER-TOP: =
#eee 1px solid; BORDER-RIGHT: #eee 1px solid; PADDING-TOP: 2px
}
DIV.activity_time {
	FLOAT: right
}
DIV#twitter_decorate {
	BACKGROUND-IMAGE: url(/images/blog/twitter_decorate.gif); MARGIN: 5px =
13px 0px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: center =
bottom
}
DIV#twitter {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 5px; MARGIN: 0px 13px 5px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; BORDER-TOP: medium none; BORDER-RIGHT: #ccc 1px =
solid; PADDING-TOP: 5px
}
DIV.twitter {
	PADDING-BOTTOM: 10px
}
DIV.twitter EM {
	COLOR: #999; FONT-SIZE: 11px
}
DIV.twitter EM A {
	COLOR: #999; TEXT-DECORATION: none
}
DIV.twitter EM A:hover {
	BACKGROUND-COLOR: transparent; TEXT-DECORATION: underline
}
DIV.single_twitter {
	FONT-SIZE: 18px
}
DIV.twitter DIV.content {
	BACKGROUND-IMAGE: url(/images/app/twitter_sbg.png); POSITION: relative; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; WIDTH: 667px; PADDING-RIGHT: =
10px; BACKGROUND-REPEAT: no-repeat; FLOAT: left; HEIGHT: 80px; =
MARGIN-LEFT: 2px; PADDING-TOP: 10px
}
DIV.twitter DIV.action {
	POSITION: absolute; BOTTOM: 5px; RIGHT: 10px
}
DIV.twitter DIV.action A:hover {
	BACKGROUND-COLOR: transparent
}
UL.blog_categories {
	LIST-STYLE-TYPE: none; MARGIN: 0px
}
UL.blog_categories LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px 5px 0px 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; PADDING-TOP: 0px
}
DIV#blog_content {
	LINE-HEIGHT: 1.8em; FONT-SIZE: 14px
}
#blog_navbar {
	MARGIN: 0px auto; WIDTH: 950px
}
#blog_navbar LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
#blog_navbar UL {
	MARGIN-LEFT: 210px
}
.blog_navbar_for {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN-TOP: 10px; BORDER-TOP: =
0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; -webkit-border-radius: 10px =
10px 0 0; -moz-border-radius: 10px 10px 0 0; border-radius: 10px 10px 0 =
0; -khtml-border-radius: 10px 10px 0 0
}
#blog_navbar LI {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 30px; LIST-STYLE-TYPE: none; =
MARGIN-TOP: 5px; PADDING-LEFT: 27px; PADDING-RIGHT: 27px; FLOAT: left; =
HEIGHT: 30px; COLOR: #fff; FONT-SIZE: 15px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
#blog_navbar LI A:visited {
	COLOR: #fff; TEXT-DECORATION: none
}
#blog_navbar .search {
	MARGIN: 5px; WIDTH: 200px; BACKGROUND: #fff; FLOAT: left; =
border-radius: 2px
}
#blog_navbar INPUT.button {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
INPUT.submit_search {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.submit_search {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 22px; BACKGROUND: =
url(/images/blog/search.gif) no-repeat; HEIGHT: 22px; BORDER-TOP: 0px; =
BORDER-RIGHT: 0px
}
INPUT.search_text {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 150px !important; HEIGHT: =
22px !important; BORDER-TOP: 0px; BORDER-RIGHT: 0px
}
#fd {
	CLEAR: both
}
.blog_main_title {
	BORDER-BOTTOM: 1px dotted; PADDING-BOTTOM: 5px; PADDING-LEFT: 11px; =
PADDING-RIGHT: 11px; MARGIN-BOTTOM: 10px; PADDING-TOP: 10px
}
.blog_main_title SPAN {
	FONT-SIZE: 14px
}
#guest_books LI {
	BORDER-BOTTOM: #ccc 1px dotted; PADDING-BOTTOM: 5px; LIST-STYLE-TYPE: =
none !important; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; MARGIN-LEFT: =
10px !important; LIST-STYLE-IMAGE: none !important; PADDING-TOP: 12px
}
#local A:hover A:active A:link A:visited {
	TEXT-DECORATION: none !important
}
IFRAME #tweetList {
	HEIGHT: auto !important
}
.notes {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 5px; MARGIN: 0px auto 10px; PADDING-LEFT: 10px; WIDTH: =
85%; PADDING-RIGHT: 10px; COLOR: #999; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 5px
}
.picture_upload {
	PADDING-BOTTOM: 10px; MIN-HEIGHT: 400px; PADDING-LEFT: 20px; =
PADDING-RIGHT: 20px; PADDING-TOP: 10px
}
.picture_upload_notes {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 3px; MARGIN: 15px auto; PADDING-LEFT: 3px; =
PADDING-RIGHT: 3px; BACKGROUND: #f7f7f7; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 3px
}
.picture_photo {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; WIDTH: 150px; PADDING-RIGHT: =
3px; BACKGROUND: #fff; HEIGHT: 100px; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 3px
}
.picture_photo IMG {
	WIDTH: 150px; HEIGHT: 94px
}
.picture_photo_input1 {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; WIDTH: 100%; PADDING-RIGHT: 3px; =
BACKGROUND: #fff; HEIGHT: 50px; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 3px
}
.picture_photo_input2 {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; WIDTH: 100px; PADDING-RIGHT: =
3px; BACKGROUND: #fff; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc =
1px solid; PADDING-TOP: 3px
}
.picture_info {
=09
}
.picture_info_img {
	TEXT-ALIGN: center
}
.picture_info_notes {
	PADDING-BOTTOM: 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; =
PADDING-TOP: 20px
}
.picture_info_notes SPAN {
	COLOR: #999
}
.picture_info_text {
	MARGIN-TOP: 10px
}
.picture_info_notes P SPAN {
	LINE-HEIGHT: 24px; COLOR: black
}
.default {
	TEXT-ALIGN: center; PADDING-BOTTOM: 10px; MIN-HEIGHT: 400px; =
PADDING-LEFT: 20px; PADDING-RIGHT: 20px; COLOR: #999; FONT-SIZE: 14px; =
PADDING-TOP: 20px
}
.about_bar {
	PADDING-BOTTOM: 5px; MARGIN: 10px 0px; PADDING-LEFT: 15px; =
PADDING-RIGHT: 15px; FONT-WEIGHT: bold; PADDING-TOP: 5px
}
.about_bar SPAN {
	MARGIN-LEFT: 20px
}
.weight {
	FONT-WEIGHT: 100
}
.series {
	PADDING-BOTTOM: 10px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; DISPLAY: block; PADDING-TOP: 5px
}
.series DT {
	MARGIN: 0px 10px; DISPLAY: inline-block; FLOAT: left
}
.series DT IMG {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 1px; PADDING-LEFT: 1px; WIDTH: 48px; PADDING-RIGHT: 1px; =
HEIGHT: 48px; BORDER-TOP: #ccc 1px solid; BORDER-RIGHT: #ccc 1px solid; =
PADDING-TOP: 1px
}
.series DD {
	MARGIN: 0px; WIDTH: 90px; FLOAT: left
}
.series DD A {
	LINE-HEIGHT: 18px; HEIGHT: 36px
}
.series:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.ico_img {
=09
}
.ico_img IMG {
	VERTICAL-ALIGN: middle; MARGIN-RIGHT: 3px
}
SPAN.gold {
	BACKGROUND-IMAGE: url(/images/ask/medal-gold.gif); PADDING-LEFT: 12px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center
}
SPAN.bronze {
	BACKGROUND-IMAGE: url(/images/ask/medal-bronze.gif); PADDING-LEFT: =
12px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center
}
SPAN.silver {
	BACKGROUND-IMAGE: url(/images/ask/medal-silver.gif); PADDING-LEFT: =
12px; BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center
}
.material_classify_bottom {
	BORDER-BOTTOM: #ddd 1px dashed; PADDING-BOTTOM: 10px
}
.material_classify_top {
	PADDING-TOP: 10px
}
.medal_bg {
	DISPLAY: block; BACKGROUND: url(/images/ask/medal_bg.gif) no-repeat =
right 3px; VERTICAL-ALIGN: top; MARGIN-RIGHT: 10px
}
.medal_bg:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.medal_bg IMG {
	MARGIN: 0px; FLOAT: left
}
.medal_s_list {
	MARGIN: 0px; DISPLAY: block
}
.medal_s_list:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.medal_s_list LI {
	LIST-STYLE-TYPE: none; MARGIN: 0px 10px 0px 0px; FLOAT: left; =
LIST-STYLE-IMAGE: none
}
.medal_number {
	PADDING-BOTTOM: 1px; PADDING-LEFT: 0px; PADDING-RIGHT: 1px; FLOAT: =
left; COLOR: #fff; PADDING-TOP: 1px
}
.my_medal {
	MARGIN: 20px 0px; DISPLAY: block
}
.my_medal:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.my_medal DT {
	FLOAT: left; MARGIN-RIGHT: 20px
}
.my_medal DD {
	PADDING-BOTTOM: 5px; LINE-HEIGHT: 24px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; PADDING-TOP: 5px
}
.my_medal DD SPAN {
	FONT-SIZE: 16px; FONT-WEIGHT: bold
}
.medal_user_list {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: =
block; PADDING-TOP: 10px
}
.medal_user_list:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
SPAN.open {
	PADDING-LEFT: 20px; DISPLAY: block; BACKGROUND: =
url(/images/ask/ask.gif) no-repeat left center
}
SPAN.close {
	PADDING-LEFT: 20px; DISPLAY: block; BACKGROUND: =
url(/images/ask/greenright.gif) no-repeat left center
}
SPAN.score {
	BACKGROUND-IMAGE: url(/images/ask/score.gif); PADDING-LEFT: 12px; =
BACKGROUND-REPEAT: no-repeat; BACKGROUND-POSITION: left center; COLOR: =
#17a300; MARGIN-LEFT: 10px
}
.user_info {
	LINE-HEIGHT: 17px; WIDTH: 160px; COLOR: #999; PADDING-TOP: 4px
}
.user_info IMG {
	FLOAT: left
}
.user_info SPAN {
	MARGIN-LEFT: 10px
}
.user_info_border {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 10px; MARGIN: 0px 30px 20px 0px; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; FLOAT: left; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 10px
}
#medal_top_list {
	DISPLAY: block; PADDING-TOP: 10px
}
#medal_top_list:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
#medal_top_material {
	BORDER-BOTTOM: #c2d5e3 1px solid; BORDER-LEFT: #c2d5e3 1px solid; =
PADDING-BOTTOM: 10px; MARGIN: 10px 0px 15px; PADDING-LEFT: 12px; =
PADDING-RIGHT: 0px; DISPLAY: block; BACKGROUND: #fafafa; BORDER-TOP: =
#c2d5e3 1px solid; BORDER-RIGHT: #c2d5e3 1px solid; PADDING-TOP: 15px; =
_padding: 15px 0 10px 6px
}
#medal_top_material:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.medal_top_son {
	BORDER-BOTTOM: #d8e6f0 1px solid; BORDER-LEFT: #d8e6f0 1px solid; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 17px; MARGIN: 5px 8px 9px 6px; =
PADDING-LEFT: 5px; WIDTH: 165px; PADDING-RIGHT: 0px; BACKGROUND: white; =
FLOAT: left; HEIGHT: 65px; COLOR: #999; OVERFLOW: hidden; BORDER-TOP: =
#d8e6f0 1px solid; BORDER-RIGHT: #d8e6f0 1px solid; PADDING-TOP: 14px; =
border-image: initial
}
.medal_top_son:after {
=09
}
.medal_top_son:hover {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
0px; MARGIN: 0px 9px 7px 1px; PADDING-LEFT: 11px; WIDTH: 165px; =
PADDING-RIGHT: 0px; BACKGROUND: url(../images/medal_list_bg.png) =
no-repeat 0px 0px; HEIGHT: 68px; OVERFLOW: hidden; BORDER-TOP: medium =
none; CURSOR: pointer; BORDER-RIGHT: medium none; PADDING-TOP: 20px
}
.medal_top_son:hover A {
	COLOR: #bc2a4d
}
.medal_top_son P {
	TEXT-ALIGN: center; LINE-HEIGHT: 50px; MARGIN: 0px 10px; WIDTH: 20px; =
FONT-FAMILY: Arial; FLOAT: left; COLOR: #3671a5; FONT-SIZE: 18px
}
.medal_top_son H6 {
=09
}
.medal_top_son IMG {
	FLOAT: left
}
.medal_top_son SPAN {
	MARGIN-LEFT: 10px
}
.medal_tag {
	MARGIN: 10px; FONT-SIZE: 14px
}
.medal_name {
	MARGIN-BOTTOM: 10px; FONT-SIZE: 12px
}
.medal {
	BORDER-BOTTOM: #333 1px solid; BORDER-LEFT: #333 1px solid; =
PADDING-BOTTOM: 0px; LINE-HEIGHT: 24px; BACKGROUND-COLOR: #333; MARGIN: =
0px 8px 3px 0px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; DISPLAY: =
inline-block; WHITE-SPACE: nowrap; FONT-SIZE: 14px; BORDER-TOP: #333 1px =
solid; BORDER-RIGHT: #333 1px solid; TEXT-DECORATION: none; PADDING-TOP: =
0px; -webkit-border-radius: 6px; -moz-border-radius: 6px; border-radius: =
6px; border-image: initial
}
.medal:hover {
	BORDER-BOTTOM: #444 1px solid; BORDER-LEFT: #444 1px solid; =
BACKGROUND-COLOR: #444; BORDER-TOP: #444 1px solid; BORDER-RIGHT: #444 =
1px solid
}
.medal_gold {
	COLOR: #ffcc33
}
.medal_silver {
	COLOR: #fff
}
.medal_bronze {
	COLOR: #ff9966
}
.medal_multiplier {
	COLOR: #444; FONT-SIZE: 14px; FONT-WEIGHT: bold; MARGIN-RIGHT: 4px
}
.medal_list {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 40px; PADDING-RIGHT: 40px; =
FONT-SIZE: 14px; PADDING-TOP: 10px
}
.medal_list DL {
	DISPLAY: block
}
.medal_list DL:after {
	DISPLAY: block; HEIGHT: 0px; VISIBILITY: hidden; CLEAR: both; CONTENT: =
"."
}
.medal_list DT {
	MARGIN: 0.25em 0px; WIDTH: 150px; FLOAT: left; HEIGHT: 30px
}
.medal_list DD {
	MARGIN: 0.25em 0px; WIDTH: 650px; FLOAT: left; HEIGHT: 30px
}
.medal_list_title {
	BORDER-BOTTOM: #c2d5e3 1px solid; PADDING-BOTTOM: 5px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; MARGIN-BOTTOM: 10px; FONT-SIZE: 16px; =
PADDING-TOP: 5px
}
P.medal_tag A:hover {
	BACKGROUND-COLOR: #fff
}

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/stylesheets/themes/blog/blue.css?1326191326

DIV.topic_page {
	COLOR: #108ac6; TEXT-DECORATION: underline
}
A {
	COLOR: #108ac6; TEXT-DECORATION: underline
}
A:hover {
	COLOR: white
}
DIV.app_nav {
	BACKGROUND-COLOR: #effaff
}
DIV#page {
	BACKGROUND-COLOR: #effaff
}
.comment_title {
	BACKGROUND-COLOR: #effaff
}
TR.mouse_over {
	BACKGROUND-COLOR: #effaff
}
DIV#local {
	BORDER-BOTTOM-COLOR: #108ac6; BACKGROUND-COLOR: white; =
BORDER-TOP-COLOR: #108ac6; BORDER-RIGHT-COLOR: #108ac6; =
BORDER-LEFT-COLOR: #108ac6
}
DIV#main {
	BORDER-BOTTOM-COLOR: #108ac6; BACKGROUND-COLOR: white; =
BORDER-TOP-COLOR: #108ac6; BORDER-RIGHT-COLOR: #108ac6; =
BORDER-LEFT-COLOR: #108ac6
}
.blog_main {
	BORDER-BOTTOM-COLOR: #108ac6; BACKGROUND-COLOR: white; =
BORDER-TOP-COLOR: #108ac6; BORDER-RIGHT-COLOR: #108ac6; =
BORDER-LEFT-COLOR: #108ac6
}
.pagination A:hover {
	BORDER-BOTTOM-COLOR: #108ac6; BACKGROUND-COLOR: white; =
BORDER-TOP-COLOR: #108ac6; BORDER-RIGHT-COLOR: #108ac6; =
BORDER-LEFT-COLOR: #108ac6
}
.pagination A:active {
	BORDER-BOTTOM-COLOR: #108ac6; BACKGROUND-COLOR: white; =
BORDER-TOP-COLOR: #108ac6; BORDER-RIGHT-COLOR: #108ac6; =
BORDER-LEFT-COLOR: #108ac6
}
DIV.nav {
	BACKGROUND-COLOR: #108ac6
}
DIV#app_list DIV.decorate {
	BACKGROUND-COLOR: #108ac6
}
A:hover {
	BACKGROUND-COLOR: #108ac6
}
DIV#branding {
	BACKGROUND-COLOR: #108ac6
}
INPUT.button {
	BACKGROUND-COLOR: #108ac6
}
INPUT.submit {
	BACKGROUND-COLOR: #108ac6
}
TD.buttons A {
	BACKGROUND-COLOR: #108ac6
}
.pagination SPAN.current {
	BACKGROUND-COLOR: #108ac6
}
.blog_bottom LI {
	COLOR: #108ac6; BORDER-RIGHT-COLOR: #108ac6
}
TABLE.admin THEAD {
	COLOR: #108ac6
}
.pagination A {
	COLOR: #108ac6
}
.pagination A:visited {
	COLOR: #108ac6
}
DIV.app_nav {
	BORDER-BOTTOM-COLOR: #108ac6; BORDER-TOP-COLOR: #108ac6; =
BORDER-RIGHT-COLOR: #108ac6; BORDER-LEFT-COLOR: #108ac6
}
.pagination SPAN.current {
	BORDER-BOTTOM-COLOR: #108ac6; BORDER-TOP-COLOR: #108ac6; =
BORDER-RIGHT-COLOR: #108ac6; BORDER-LEFT-COLOR: #108ac6
}
.blog_comment {
	BORDER-TOP-COLOR: #108ac6
}
DIV.picture_full {
	BORDER-TOP-COLOR: #108ac6
}
.white {
	COLOR: #fff !important
}
#blog_navbar {
	BACKGROUND-COLOR: #108ac6
}
.blog_navbar_for {
	BACKGROUND-COLOR: #effaff; COLOR: #108ac6
}
#blog_navbar .blog_navbar_for A:visited {
	BACKGROUND-COLOR: #effaff; COLOR: #108ac6
}
#blog_navbar .blog_navbar_for A:link {
	BACKGROUND-COLOR: #effaff; COLOR: #108ac6
}
.blog_main_title {
	COLOR: #000
}
.about_bar {
	BACKGROUND: #cccccc; COLOR: #108ac6
}
.view A:hover {
	COLOR: #108ac6
}
.list_current {
=09
}
.list_current A {
	COLOR: #ff6600; FONT-WEIGHT: bold
}
.list_current A:hover {
	BACKGROUND: #ff6600; COLOR: #ffffff
}
#my_resume .editing A.del:hover {
	COLOR: #108ac6
}
#my_resume .editing A.add:hover {
	COLOR: #108ac6
}

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1348819953

.dp-highlighter {
	PADDING-BOTTOM: 1px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 1px; =
WIDTH: 97%; PADDING-RIGHT: 1px; FONT-FAMILY: Monaco, DejaVu Sans Mono, =
Bitstream Vera Sans Mono, Consolas, Courier New, monospace; WORD-WRAP: =
break-word; MARGIN-LEFT: 9px; FONT-SIZE: 12px; OVERFLOW: auto; =
WORD-BREAK: break-all; PADDING-TOP: 1px
}
.dp-highlighter OL {
	BORDER-BOTTOM: #d1d7dc 1px solid; BORDER-LEFT: #d1d7dc 1px solid; =
PADDING-BOTTOM: 2px; BACKGROUND-COLOR: #fff; LIST-STYLE-TYPE: decimal; =
MARGIN: 0px 0px 1px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: =
#2b91af; BORDER-TOP: #d1d7dc 1px solid; BORDER-RIGHT: #d1d7dc 1px solid; =
PADDING-TOP: 2px
}
.dp-highlighter OL LI {
	BORDER-LEFT: #d1d7dc 1px solid; LINE-HEIGHT: 18px; BACKGROUND-COLOR: =
#fafafa; MARGIN: 0px 0px 0px 38px; PADDING-LEFT: 10px
}
.dp-highlighter .columns DIV {
	BORDER-LEFT: #d1d7dc 1px solid; LINE-HEIGHT: 18px; BACKGROUND-COLOR: =
#fafafa; MARGIN: 0px 0px 0px 38px; PADDING-LEFT: 10px
}
.dp-highlighter .columns {
	WIDTH: 100%; COLOR: gray; OVERFLOW: hidden
}
.dp-highlighter .columns DIV {
	PADDING-BOTTOM: 5px
}
.dp-highlighter OL LI SPAN {
	COLOR: black
}
.dp-highlighter .tools {
	TEXT-ALIGN: left; PADDING-BOTTOM: 3px; MARGIN: 0px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 3px; COLOR: black; FONT-WEIGHT: bold; PADDING-TOP: 3px
}
.dp-about {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #fff; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.dp-about TABLE {
	WIDTH: 100%; FONT-FAMILY: Tahoma, Verdana, Arial, sans-serif =
!important; HEIGHT: 100%; FONT-SIZE: 11px
}
.dp-about TD {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
VERTICAL-ALIGN: top; PADDING-TOP: 10px
}
.dp-about .copy {
	BORDER-BOTTOM: #aca899 1px solid; HEIGHT: 95%
}
.dp-about .title {
	COLOR: red; FONT-WEIGHT: bold
}
.dp-about .para {
	MARGIN: 0px 0px 4px
}
.dp-about .footer {
	TEXT-ALIGN: right; BACKGROUND-COLOR: #eceadb; BORDER-TOP: #fff 1px =
solid
}
.dp-about .close {
	BACKGROUND-COLOR: #eceadb; WIDTH: 60px; FONT-FAMILY: Tahoma, Verdana, =
Arial, sans-serif !important; HEIGHT: 22px; FONT-SIZE: 11px
}
.dp-highlighter .comment {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: auto; PADDING-RIGHT: 0px; COLOR: #008200; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
.dp-highlighter .comments {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: auto; PADDING-RIGHT: 0px; COLOR: #008200; =
BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
.dp-highlighter .string {
	COLOR: blue
}
.dp-highlighter .keyword {
	COLOR: #7f0055; FONT-WEIGHT: bold
}
.dp-highlighter .preprocessor {
	COLOR: gray
}

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/application.js?1358214518

/*  Prototype JavaScript framework, version 1.6.1=0A=
 *  (c) 2005-2009 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.1',=0A=
=0A=
  Browser: (function(){=0A=
    var ua =3D navigator.userAgent;=0A=
    var isOpera =3D Object.prototype.toString.call(window.opera) =3D=3D =
'[object Opera]';=0A=
    return {=0A=
      IE:             !!window.attachEvent && !isOpera,=0A=
      Opera:          isOpera,=0A=
      WebKit:         ua.indexOf('AppleWebKit/') > -1,=0A=
      Gecko:          ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') =
=3D=3D=3D -1,=0A=
      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)=0A=
    }=0A=
  })(),=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    SelectorsAPI: !!document.querySelector,=0A=
    ElementExtensions: (function() {=0A=
      var constructor =3D window.Element || window.HTMLElement;=0A=
      return !!(constructor && constructor.prototype);=0A=
    })(),=0A=
    SpecificElementExtensions: (function() {=0A=
      if (typeof window.HTMLDivElement !=3D=3D 'undefined')=0A=
        return true;=0A=
=0A=
      var div =3D document.createElement('div');=0A=
      var form =3D document.createElement('form');=0A=
      var isSupported =3D false;=0A=
=0A=
      if (div['__proto__'] && (div['__proto__'] !=3D=3D =
form['__proto__'])) {=0A=
        isSupported =3D true;=0A=
      }=0A=
=0A=
      div =3D form =3D null;=0A=
=0A=
      return isSupported;=0A=
    })()=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) {return x}=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
=0A=
var Class =3D (function() {=0A=
  function subclass() {};=0A=
  function create() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
    return klass;=0A=
  }=0A=
=0A=
  function addMethods(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({toString: true}).length) {=0A=
      if (source.toString !=3D Object.prototype.toString)=0A=
        properties.push("toString");=0A=
      if (source.valueOf !=3D Object.prototype.valueOf)=0A=
        properties.push("valueOf");=0A=
    }=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value;=0A=
        value =3D (function(m) {=0A=
          return function() {return ancestor[m].apply(this, arguments);};=0A=
        })(property).wrap(method);=0A=
=0A=
        value.valueOf =3D method.valueOf.bind(method);=0A=
        value.toString =3D method.toString.bind(method);=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
=0A=
  return {=0A=
    create: create,=0A=
    Methods: {=0A=
      addMethods: addMethods=0A=
    }=0A=
  };=0A=
})();=0A=
(function() {=0A=
=0A=
  var _toString =3D Object.prototype.toString;=0A=
=0A=
  function extend(destination, source) {=0A=
    for (var property in source)=0A=
      destination[property] =3D source[property];=0A=
    return destination;=0A=
  }=0A=
=0A=
  function inspect(object) {=0A=
    try {=0A=
      if (isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  }=0A=
=0A=
  function toJSON(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown':return;=0A=
      case 'boolean':return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D toJSON(object[property]);=0A=
      if (!isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  }=0A=
=0A=
  function toQueryString(object) {=0A=
    return $H(object).toQueryString();=0A=
  }=0A=
=0A=
  function toHTML(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  }=0A=
=0A=
  function keys(object) {=0A=
    var results =3D [];=0A=
    for (var property in object)=0A=
      results.push(property);=0A=
    return results;=0A=
  }=0A=
=0A=
  function values(object) {=0A=
    var results =3D [];=0A=
    for (var property in object)=0A=
      results.push(object[property]);=0A=
    return results;=0A=
  }=0A=
=0A=
  function clone(object) {=0A=
    return extend({ }, object);=0A=
  }=0A=
=0A=
  function isElement(object) {=0A=
    return !!(object && object.nodeType =3D=3D 1);=0A=
  }=0A=
=0A=
  function isArray(object) {=0A=
    return _toString.call(object) =3D=3D "[object Array]";=0A=
  }=0A=
=0A=
=0A=
  function isHash(object) {=0A=
    return object instanceof Hash;=0A=
  }=0A=
=0A=
  function isFunction(object) {=0A=
    return typeof object =3D=3D=3D "function";=0A=
  }=0A=
=0A=
  function isString(object) {=0A=
    return _toString.call(object) =3D=3D "[object String]";=0A=
  }=0A=
=0A=
  function isNumber(object) {=0A=
    return _toString.call(object) =3D=3D "[object Number]";=0A=
  }=0A=
=0A=
  function isUndefined(object) {=0A=
    return typeof object =3D=3D=3D "undefined";=0A=
  }=0A=
=0A=
  extend(Object, {=0A=
    extend:        extend,=0A=
    inspect:       inspect,=0A=
    toJSON:        toJSON,=0A=
    toQueryString: toQueryString,=0A=
    toHTML:        toHTML,=0A=
    keys:          keys,=0A=
    values:        values,=0A=
    clone:         clone,=0A=
    isElement:     isElement,=0A=
    isArray:       isArray,=0A=
    isHash:        isHash,=0A=
    isFunction:    isFunction,=0A=
    isString:      isString,=0A=
    isNumber:      isNumber,=0A=
    isUndefined:   isUndefined=0A=
  });=0A=
})();=0A=
Object.extend(Function.prototype, (function() {=0A=
  var slice =3D Array.prototype.slice;=0A=
=0A=
  function update(array, args) {=0A=
    var arrayLength =3D array.length, length =3D args.length;=0A=
    while (length--) array[arrayLength + length] =3D args[length];=0A=
    return array;=0A=
  }=0A=
=0A=
  function merge(array, args) {=0A=
    array =3D slice.call(array, 0);=0A=
    return update(array, args);=0A=
  }=0A=
=0A=
  function argumentNames() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1]=0A=
      .replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g, '')=0A=
      .replace(/\s+/g, '').split(',');=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  }=0A=
=0A=
  function bind(context) {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    return function() {=0A=
      var a =3D merge(args, arguments);=0A=
      return __method.apply(context, a);=0A=
    }=0A=
  }=0A=
=0A=
  function bindAsEventListener(context) {=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    return function(event) {=0A=
      var a =3D update([event || window.event], args);=0A=
      return __method.apply(context, a);=0A=
    }=0A=
  }=0A=
=0A=
  function curry() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D slice.call(arguments, 0);=0A=
    return function() {=0A=
      var a =3D merge(args, arguments);=0A=
      return __method.apply(this, a);=0A=
    }=0A=
  }=0A=
=0A=
  function delay(timeout) {=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    timeout =3D timeout * 1000=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  }=0A=
=0A=
  function defer() {=0A=
    var args =3D update([0.01], arguments);=0A=
    return this.delay.apply(this, args);=0A=
  }=0A=
=0A=
  function wrap(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      var a =3D update([__method.bind(this)], arguments);=0A=
      return wrapper.apply(this, a);=0A=
    }=0A=
  }=0A=
=0A=
  function methodize() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      var a =3D update([this], arguments);=0A=
      return __method.apply(null, a);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    argumentNames:       argumentNames,=0A=
    bind:                bind,=0A=
    bindAsEventListener: bindAsEventListener,=0A=
    curry:               curry,=0A=
    delay:               delay,=0A=
    defer:               defer,=0A=
    wrap:                wrap,=0A=
    methodize:           methodize=0A=
  }=0A=
})());=0A=
=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
        this.currentlyExecuting =3D false;=0A=
      } catch(e) {=0A=
        this.currentlyExecuting =3D false;=0A=
        throw e;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, (function() {=0A=
=0A=
  function prepareReplacement(replacement) {=0A=
    if (Object.isFunction(replacement)) return replacement;=0A=
    var template =3D new Template(replacement);=0A=
    return function(match) {return template.evaluate(match)};=0A=
  }=0A=
=0A=
  function gsub(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D prepareReplacement(replacement);=0A=
=0A=
    if (Object.isString(pattern))=0A=
      pattern =3D RegExp.escape(pattern);=0A=
=0A=
    if (!(pattern.length || pattern.source)) {=0A=
      replacement =3D replacement('');=0A=
      return replacement + source.split('').join(replacement) + =
replacement;=0A=
    }=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  }=0A=
=0A=
  function sub(pattern, replacement, count) {=0A=
    replacement =3D prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  }=0A=
=0A=
  function scan(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  }=0A=
=0A=
  function truncate(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  }=0A=
=0A=
  function strip() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  }=0A=
=0A=
  function stripTags() {=0A=
    return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi, =
'');=0A=
  }=0A=
=0A=
  function stripScripts() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  }=0A=
=0A=
  function extractScripts() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  }=0A=
=0A=
  function evalScripts() {=0A=
    return this.extractScripts().map(function(script) {return =
eval(script)});=0A=
  }=0A=
=0A=
  function escapeHTML() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  }=0A=
=0A=
  function unescapeHTML() {=0A=
    return =
this.stripTags().replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;=
/g,'&');=0A=
  }=0A=
=0A=
=0A=
  function toQueryParams(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  }=0A=
=0A=
  function toArray() {=0A=
    return this.split('');=0A=
  }=0A=
=0A=
  function succ() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  }=0A=
=0A=
  function times(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  }=0A=
=0A=
  function camelize() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  }=0A=
=0A=
  function capitalize() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  }=0A=
=0A=
  function underscore() {=0A=
    return this.replace(/::/g, '/')=0A=
               .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')=0A=
               .replace(/([a-z\d])([A-Z])/g, '$1_$2')=0A=
               .replace(/-/g, '_')=0A=
               .toLowerCase();=0A=
  }=0A=
=0A=
  function dasherize() {=0A=
    return this.replace(/_/g, '-');=0A=
  }=0A=
=0A=
  function inspect(useDoubleQuotes) {=0A=
    var escapedString =3D this.replace(/[\x00-\x1f\\]/g, =
function(character) {=0A=
      if (character in String.specialChar) {=0A=
        return String.specialChar[character];=0A=
      }=0A=
      return '\\u00' + character.charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return this.inspect(true);=0A=
  }=0A=
=0A=
  function unfilterJSON(filter) {=0A=
    return this.replace(filter || Prototype.JSONFilter, '$1');=0A=
  }=0A=
=0A=
  function isJSON() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  }=0A=
=0A=
  function evalJSON(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  }=0A=
=0A=
  function include(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  }=0A=
=0A=
  function startsWith(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  }=0A=
=0A=
  function endsWith(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  }=0A=
=0A=
  function empty() {=0A=
    return this =3D=3D '';=0A=
  }=0A=
=0A=
  function blank() {=0A=
    return /^\s*$/.test(this);=0A=
  }=0A=
=0A=
  function interpolate(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
=0A=
  return {=0A=
    gsub:           gsub,=0A=
    sub:            sub,=0A=
    scan:           scan,=0A=
    truncate:       truncate,=0A=
    strip:          String.prototype.trim ? String.prototype.trim : =
strip,=0A=
    stripTags:      stripTags,=0A=
    stripScripts:   stripScripts,=0A=
    extractScripts: extractScripts,=0A=
    evalScripts:    evalScripts,=0A=
    escapeHTML:     escapeHTML,=0A=
    unescapeHTML:   unescapeHTML,=0A=
    toQueryParams:  toQueryParams,=0A=
    parseQuery:     toQueryParams,=0A=
    toArray:        toArray,=0A=
    succ:           succ,=0A=
    times:          times,=0A=
    camelize:       camelize,=0A=
    capitalize:     capitalize,=0A=
    underscore:     underscore,=0A=
    dasherize:      dasherize,=0A=
    inspect:        inspect,=0A=
    toJSON:         toJSON,=0A=
    unfilterJSON:   unfilterJSON,=0A=
    isJSON:         isJSON,=0A=
    evalJSON:       evalJSON,=0A=
    include:        include,=0A=
    startsWith:     startsWith,=0A=
    endsWith:       endsWith,=0A=
    empty:          empty,=0A=
    blank:          blank,=0A=
    interpolate:    interpolate=0A=
  };=0A=
})());=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (object && Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return (match[1] + '');=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? =
match[2].replace(/\\\\]/g, ']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D (function() {=0A=
  function each(iterator, context) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator.call(context, value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  }=0A=
=0A=
  function eachSlice(number, iterator, context) {=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    if (number < 1) return array;=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  }=0A=
=0A=
  function all(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator.call(context, value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function any(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator.call(context, value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function collect(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function detect(iterator, context) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function findAll(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function grep(filter, iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(RegExp.escape(filter));=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function include(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  }=0A=
=0A=
  function inGroupsOf(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  }=0A=
=0A=
  function inject(memo, iterator, context) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator.call(context, memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  }=0A=
=0A=
  function invoke(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  }=0A=
=0A=
  function max(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function min(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function partition(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator.call(context, value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  }=0A=
=0A=
  function pluck(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function reject(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function sortBy(iterator, context) {=0A=
    return this.map(function(value, index) {=0A=
      return {=0A=
        value: value,=0A=
        criteria: iterator.call(context, value, index)=0A=
      };=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  }=0A=
=0A=
  function toArray() {=0A=
    return this.map();=0A=
  }=0A=
=0A=
  function zip() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  }=0A=
=0A=
  function size() {=0A=
    return this.toArray().length;=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
  return {=0A=
    each:       each,=0A=
    eachSlice:  eachSlice,=0A=
    all:        all,=0A=
    every:      all,=0A=
    any:        any,=0A=
    some:       any,=0A=
    collect:    collect,=0A=
    map:        collect,=0A=
    detect:     detect,=0A=
    findAll:    findAll,=0A=
    select:     findAll,=0A=
    filter:     findAll,=0A=
    grep:       grep,=0A=
    include:    include,=0A=
    member:     include,=0A=
    inGroupsOf: inGroupsOf,=0A=
    inject:     inject,=0A=
    invoke:     invoke,=0A=
    max:        max,=0A=
    min:        min,=0A=
    partition:  partition,=0A=
    pluck:      pluck,=0A=
    reject:     reject,=0A=
    sortBy:     sortBy,=0A=
    toArray:    toArray,=0A=
    entries:    toArray,=0A=
    zip:        zip,=0A=
    size:       size,=0A=
    inspect:    inspect,=0A=
    find:       detect=0A=
  };=0A=
})();=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if ('toArray' in Object(iterable)) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
=0A=
(function() {=0A=
  var arrayProto =3D Array.prototype,=0A=
      slice =3D arrayProto.slice,=0A=
      _each =3D arrayProto.forEach; // use native browser JS 1.6 =
implementation if available=0A=
=0A=
  function each(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  }=0A=
  if (!_each) _each =3D each;=0A=
=0A=
  function clear() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  }=0A=
=0A=
  function first() {=0A=
    return this[0];=0A=
  }=0A=
=0A=
  function last() {=0A=
    return this[this.length - 1];=0A=
  }=0A=
=0A=
  function compact() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  }=0A=
=0A=
  function flatten() {=0A=
    return this.inject([], function(array, value) {=0A=
      if (Object.isArray(value))=0A=
        return array.concat(value.flatten());=0A=
      array.push(value);=0A=
      return array;=0A=
    });=0A=
  }=0A=
=0A=
  function without() {=0A=
    var values =3D slice.call(arguments, 0);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  }=0A=
=0A=
  function reverse(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  }=0A=
=0A=
  function uniq(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  }=0A=
=0A=
  function intersect(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) {return item =3D=3D=3D value});=0A=
    });=0A=
  }=0A=
=0A=
=0A=
  function clone() {=0A=
    return slice.call(this, 0);=0A=
  }=0A=
=0A=
  function size() {=0A=
    return this.length;=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
=0A=
  function indexOf(item, i) {=0A=
    i || (i =3D 0);=0A=
    var length =3D this.length;=0A=
    if (i < 0) i =3D length + i;=0A=
    for (; i < length; i++)=0A=
      if (this[i] =3D=3D=3D item) return i;=0A=
    return -1;=0A=
  }=0A=
=0A=
  function lastIndexOf(item, i) {=0A=
    i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
    var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
    return (n < 0) ? n : i - n - 1;=0A=
  }=0A=
=0A=
  function concat() {=0A=
    var array =3D slice.call(this, 0), item;=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      item =3D arguments[i];=0A=
      if (Object.isArray(item) && !('callee' in item)) {=0A=
        for (var j =3D 0, arrayLength =3D item.length; j < arrayLength; =
j++)=0A=
          array.push(item[j]);=0A=
      } else {=0A=
        array.push(item);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  }=0A=
=0A=
  Object.extend(arrayProto, Enumerable);=0A=
=0A=
  if (!arrayProto._reverse)=0A=
    arrayProto._reverse =3D arrayProto.reverse;=0A=
=0A=
  Object.extend(arrayProto, {=0A=
    _each:     _each,=0A=
    clear:     clear,=0A=
    first:     first,=0A=
    last:      last,=0A=
    compact:   compact,=0A=
    flatten:   flatten,=0A=
    without:   without,=0A=
    reverse:   reverse,=0A=
    uniq:      uniq,=0A=
    intersect: intersect,=0A=
    clone:     clone,=0A=
    toArray:   clone,=0A=
    size:      size,=0A=
    inspect:   inspect,=0A=
    toJSON:    toJSON=0A=
  });=0A=
=0A=
  var CONCAT_ARGUMENTS_BUGGY =3D (function() {=0A=
    return [].concat(arguments)[0][0] !=3D=3D 1;=0A=
  })(1,2)=0A=
=0A=
  if (CONCAT_ARGUMENTS_BUGGY) arrayProto.concat =3D concat;=0A=
=0A=
  if (!arrayProto.indexOf) arrayProto.indexOf =3D indexOf;=0A=
  if (!arrayProto.lastIndexOf) arrayProto.lastIndexOf =3D lastIndexOf;=0A=
})();=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
  function initialize(object) {=0A=
    this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
  }=0A=
=0A=
  function _each(iterator) {=0A=
    for (var key in this._object) {=0A=
      var value =3D this._object[key], pair =3D [key, value];=0A=
      pair.key =3D key;=0A=
      pair.value =3D value;=0A=
      iterator(pair);=0A=
    }=0A=
  }=0A=
=0A=
  function set(key, value) {=0A=
    return this._object[key] =3D value;=0A=
  }=0A=
=0A=
  function get(key) {=0A=
    if (this._object[key] !=3D=3D Object.prototype[key])=0A=
      return this._object[key];=0A=
  }=0A=
=0A=
  function unset(key) {=0A=
    var value =3D this._object[key];=0A=
    delete this._object[key];=0A=
    return value;=0A=
  }=0A=
=0A=
  function toObject() {=0A=
    return Object.clone(this._object);=0A=
  }=0A=
=0A=
  function keys() {=0A=
    return this.pluck('key');=0A=
  }=0A=
=0A=
  function values() {=0A=
    return this.pluck('value');=0A=
  }=0A=
=0A=
  function index(value) {=0A=
    var match =3D this.detect(function(pair) {=0A=
      return pair.value =3D=3D=3D value;=0A=
    });=0A=
    return match && match.key;=0A=
  }=0A=
=0A=
  function merge(object) {=0A=
    return this.clone().update(object);=0A=
  }=0A=
=0A=
  function update(object) {=0A=
    return new Hash(object).inject(this, function(result, pair) {=0A=
      result.set(pair.key, pair.value);=0A=
      return result;=0A=
    });=0A=
  }=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  function toQueryString() {=0A=
    return this.inject([], function(results, pair) {=0A=
      var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
      if (values && typeof values =3D=3D 'object') {=0A=
        if (Object.isArray(values))=0A=
          return results.concat(values.map(toQueryPair.curry(key)));=0A=
      } else results.push(toQueryPair(key, values));=0A=
      return results;=0A=
    }).join('&');=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '#<Hash:{' + this.map(function(pair) {=0A=
      return pair.map(Object.inspect).join(': ');=0A=
    }).join(', ') + '}>';=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return Object.toJSON(this.toObject());=0A=
  }=0A=
=0A=
  function clone() {=0A=
    return new Hash(this);=0A=
  }=0A=
=0A=
  return {=0A=
    initialize:             initialize,=0A=
    _each:                  _each,=0A=
    set:                    set,=0A=
    get:                    get,=0A=
    unset:                  unset,=0A=
    toObject:               toObject,=0A=
    toTemplateReplacements: toObject,=0A=
    keys:                   keys,=0A=
    values:                 values,=0A=
    index:                  index,=0A=
    merge:                  merge,=0A=
    update:                 update,=0A=
    toQueryString:          toQueryString,=0A=
    inspect:                inspect,=0A=
    toJSON:                 toJSON,=0A=
    clone:                  clone=0A=
  };=0A=
})());=0A=
=0A=
Hash.from =3D $H;=0A=
Object.extend(Number.prototype, (function() {=0A=
  function toColorPart() {=0A=
    return this.toPaddedString(2, 16);=0A=
  }=0A=
=0A=
  function succ() {=0A=
    return this + 1;=0A=
  }=0A=
=0A=
  function times(iterator, context) {=0A=
    $R(0, this, true).each(iterator, context);=0A=
    return this;=0A=
  }=0A=
=0A=
  function toPaddedString(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
=0A=
  function abs() {=0A=
    return Math.abs(this);=0A=
  }=0A=
=0A=
  function round() {=0A=
    return Math.round(this);=0A=
  }=0A=
=0A=
  function ceil() {=0A=
    return Math.ceil(this);=0A=
  }=0A=
=0A=
  function floor() {=0A=
    return Math.floor(this);=0A=
  }=0A=
=0A=
  return {=0A=
    toColorPart:    toColorPart,=0A=
    succ:           succ,=0A=
    times:          times,=0A=
    toPaddedString: toPaddedString,=0A=
    toJSON:         toJSON,=0A=
    abs:            abs,=0A=
    round:          round,=0A=
    ceil:           ceil,=0A=
    floor:          floor=0A=
  };=0A=
})());=0A=
=0A=
function $R(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
}=0A=
=0A=
var ObjectRange =3D Class.create(Enumerable, (function() {=0A=
  function initialize(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  }=0A=
=0A=
  function _each(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  }=0A=
=0A=
  function include(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: initialize,=0A=
    _each:      _each,=0A=
    include:    include=0A=
  };=0A=
})());=0A=
=0A=
=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() {Ajax.activeRequestCount++},=0A=
  onComplete: function() {Ajax.activeRequestCount--}=0A=
});=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) {headers[pair.key] =3D =
pair.value});=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) {return 0}=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) {return null;}=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) {return ''}=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) {return null}=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { };nsertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
=0A=
=0A=
=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
=0A=
(function(global) {=0A=
=0A=
  var SETATTRIBUTE_IGNORES_NAME =3D (function(){=0A=
    var elForm =3D document.createElement("form");=0A=
    var elInput =3D document.createElement("input");=0A=
    var root =3D document.documentElement;=0A=
    elInput.setAttribute("name", "test");=0A=
    elForm.appendChild(elInput);=0A=
    root.appendChild(elForm);=0A=
    var isBuggy =3D elForm.elements=0A=
      ? (typeof elForm.elements.test =3D=3D "undefined")=0A=
      : null;=0A=
    root.removeChild(elForm);=0A=
    elForm =3D elInput =3D null;=0A=
    return isBuggy;=0A=
  })();=0A=
=0A=
  var element =3D global.Element;=0A=
  global.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (SETATTRIBUTE_IGNORES_NAME && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(global.Element, element || { });=0A=
  if (element) global.Element.prototype =3D element.prototype;=0A=
})(this);=0A=
=0A=
Element.cache =3D { };=0A=
Element.idCounter =3D 1;=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
=0A=
  hide: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: (function(){=0A=
=0A=
    var SELECT_ELEMENT_INNERHTML_BUGGY =3D (function(){=0A=
      var el =3D document.createElement("select"),=0A=
          isBuggy =3D true;=0A=
      el.innerHTML =3D "<option value=3D\"test\">test</option>";=0A=
      if (el.options && el.options[0]) {=0A=
        isBuggy =3D el.options[0].nodeName.toUpperCase() !=3D=3D =
"OPTION";=0A=
      }=0A=
      el =3D null;=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    var TABLE_ELEMENT_INNERHTML_BUGGY =3D (function(){=0A=
      try {=0A=
        var el =3D document.createElement("table");=0A=
        if (el && el.tBodies) {=0A=
          el.innerHTML =3D "<tbody><tr><td>test</td></tr></tbody>";=0A=
          var isBuggy =3D typeof el.tBodies[0] =3D=3D "undefined";=0A=
          el =3D null;=0A=
          return isBuggy;=0A=
        }=0A=
      } catch (e) {=0A=
        return true;=0A=
      }=0A=
    })();=0A=
=0A=
    var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING =3D (function () {=0A=
      var s =3D document.createElement("script"),=0A=
          isBuggy =3D false;=0A=
      try {=0A=
        s.appendChild(document.createTextNode(""));=0A=
        isBuggy =3D !s.firstChild ||=0A=
          s.firstChild && s.firstChild.nodeType !=3D=3D 3;=0A=
      } catch (e) {=0A=
        isBuggy =3D true;=0A=
      }=0A=
      s =3D null;=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    function update(element, content) {=0A=
      element =3D $(element);=0A=
=0A=
      if (content && content.toElement)=0A=
        content =3D content.toElement();=0A=
=0A=
      if (Object.isElement(content))=0A=
        return element.update().insert(content);=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
      if (tagName =3D=3D=3D 'SCRIPT' && =
SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING) {=0A=
        element.text =3D content;=0A=
        return element;=0A=
      }=0A=
=0A=
      if (SELECT_ELEMENT_INNERHTML_BUGGY || =
TABLE_ELEMENT_INNERHTML_BUGGY) {=0A=
        if (tagName in Element._insertionTranslations.tags) {=0A=
          while (element.firstChild) {=0A=
            element.removeChild(element.firstChild);=0A=
          }=0A=
          Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
            .each(function(node) {=0A=
              element.appendChild(node)=0A=
            });=0A=
        }=0A=
        else {=0A=
          element.innerHTML =3D content.stripScripts();=0A=
        }=0A=
      }=0A=
      else {=0A=
        element.innerHTML =3D content.stripScripts();=0A=
      }=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
      return element;=0A=
    }=0A=
=0A=
    return update;=0A=
  })(),=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return Element.recursivelyCollect(element, 'parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return Element.select(element, "*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return Element.recursivelyCollect(element, 'previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return Element.recursivelyCollect(element, 'nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return Element.previousSiblings(element).reverse()=0A=
      .concat(Element.nextSiblings(element));=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D Element.ancestors(element);=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
Element.firstDescendant(element);=0A=
    return Object.isNumber(expression) ? =
Element.descendants(element)[expression] :=0A=
      Element.select(element, expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D Element.previousSiblings(element);=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D Element.nextSiblings(element);=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
=0A=
  select: function(element) {=0A=
    var args =3D Array.prototype.slice.call(arguments, 1);=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function(element) {=0A=
    var args =3D Array.prototype.slice.call(arguments, 1);=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D Element.readAttribute(element, 'id');=0A=
    if (id) return id;=0A=
    do {id =3D 'anonymous_element_' + Element.idCounter++} while ($(id));=0A=
    Element.writeAttribute(element, 'id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return Element.getDimensions(element).height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return Element.getDimensions(element).width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!Element.hasClassName(element, className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return Element[Element.hasClassName(element, className) ?=0A=
      'removeClassName' : 'addClassName'](element, className);=0A=
  },=0A=
=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (ancestor.contains)=0A=
      return ancestor.contains(element) && ancestor !=3D=3D element;=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D ancestor) return true;=0A=
=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.cumulativeOffset(element);=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value || value =3D=3D 'auto') {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D Element.getStyle(element, 'display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    if (originalPosition !=3D 'fixed') // Switching fixed to absolute =
causes issues in Safari=0A=
      els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      if (Prototype.Browser.Opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') return =
element;=0A=
=0A=
    var offsets =3D Element.positionedOffset(element);=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'relative') return =
element;=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || (element.tagName && =
(element.tagName.toUpperCase() =3D=3D 'BODY'))) {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    source =3D $(source);=0A=
    var p =3D Element.viewportOffset(source);=0A=
=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D Element.getOffsetParent(element);=0A=
      delta =3D Element.viewportOffset(parent);=0A=
    }=0A=
=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default:return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      try {element.offsetParent}=0A=
      catch(e) {return $(document.body)}=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({position: 'relative'});=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({position: position});=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        try {element.offsetParent}=0A=
        catch(e) {return Element._returnOffset(0,0)}=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({zoom: 1});=0A=
        element.setStyle({position: 'relative'});=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({position: position});=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.cumulativeOffset =3D =
Element.Methods.cumulativeOffset.wrap(=0A=
    function(proceed, element) {=0A=
      try {element.offsetParent}=0A=
      catch(e) {return Element._returnOffset(0,0)}=0A=
      return proceed(element);=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D (function(){=0A=
=0A=
    var classProp =3D 'className';=0A=
    var forProp =3D 'for';=0A=
=0A=
    var el =3D document.createElement('div');=0A=
=0A=
    el.setAttribute(classProp, 'x');=0A=
=0A=
    if (el.className !=3D=3D 'x') {=0A=
      el.setAttribute('class', 'x');=0A=
      if (el.className =3D=3D=3D 'x') {=0A=
        classProp =3D 'class';=0A=
      }=0A=
    }=0A=
    el =3D null;=0A=
=0A=
    el =3D document.createElement('label');=0A=
    el.setAttribute(forProp, 'x');=0A=
    if (el.htmlFor !=3D=3D 'x') {=0A=
      el.setAttribute('htmlFor', 'x');=0A=
      if (el.htmlFor =3D=3D=3D 'x') {=0A=
        forProp =3D 'htmlFor';=0A=
      }=0A=
    }=0A=
    el =3D null;=0A=
=0A=
    return {=0A=
      read: {=0A=
        names: {=0A=
          'class':      classProp,=0A=
          'className':  classProp,=0A=
          'for':        forProp,=0A=
          'htmlFor':    forProp=0A=
        },=0A=
        values: {=0A=
          _getAttr: function(element, attribute) {=0A=
            return element.getAttribute(attribute);=0A=
          },=0A=
          _getAttr2: function(element, attribute) {=0A=
            return element.getAttribute(attribute, 2);=0A=
          },=0A=
          _getAttrNode: function(element, attribute) {=0A=
            var node =3D element.getAttributeNode(attribute);=0A=
            return node ? node.value : "";=0A=
          },=0A=
          _getEv: (function(){=0A=
=0A=
            var el =3D document.createElement('div');=0A=
            el.onclick =3D Prototype.emptyFunction;=0A=
            var value =3D el.getAttribute('onclick');=0A=
            var f;=0A=
=0A=
            if (String(value).indexOf('{') > -1) {=0A=
              f =3D function(element, attribute) {=0A=
                attribute =3D element.getAttribute(attribute);=0A=
                if (!attribute) return null;=0A=
                attribute =3D attribute.toString();=0A=
                attribute =3D attribute.split('{')[1];=0A=
                attribute =3D attribute.split('}')[0];=0A=
                return attribute.strip();=0A=
              };=0A=
            }=0A=
            else if (value =3D=3D=3D '') {=0A=
              f =3D function(element, attribute) {=0A=
                attribute =3D element.getAttribute(attribute);=0A=
                if (!attribute) return null;=0A=
                return attribute.strip();=0A=
              };=0A=
            }=0A=
            el =3D null;=0A=
            return f;=0A=
          })(),=0A=
          _flag: function(element, attribute) {=0A=
            return $(element).hasAttribute(attribute) ? attribute : null;=0A=
          },=0A=
          style: function(element) {=0A=
            return element.style.cssText.toLowerCase();=0A=
          },=0A=
          title: function(element) {=0A=
            return element.title;=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
  })();=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc =
frameBorder').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr2,=0A=
      src:         v._getAttr2,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
=0A=
  if (Prototype.BrowserFeatures.ElementExtensions) {=0A=
    (function() {=0A=
      function _descendants(element) {=0A=
        var nodes =3D element.getElementsByTagName('*'), results =3D [];=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName !=3D=3D "!") // Filter out comment nodes.=0A=
            results.push(node);=0A=
        return results;=0A=
      }=0A=
=0A=
      Element.Methods.down =3D function(element, expression, index) {=0A=
        element =3D $(element);=0A=
        if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
        return Object.isNumber(expression) ? =
_descendants(element)[expression] :=0A=
          Element.select(element, expression)[index || 0];=0A=
      }=0A=
    })();=0A=
  }=0A=
=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {=0A=
        element.width++;element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.documentElement) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) {parent.insertBefore(node, =
nextSibling)});=0A=
      else=0A=
        fragments.each(function(node) {parent.appendChild(node)});=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() {div =3D div.firstChild});=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  var tags =3D Element._insertionTranslations.tags;=0A=
  Object.extend(tags, {=0A=
    THEAD: tags.TBODY,=0A=
    TFOOT: tags.TBODY,=0A=
    TH:    tags.TD=0A=
  });=0A=
})();=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return !!(node && node.specified);=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
(function(div) {=0A=
=0A=
  if (!Prototype.BrowserFeatures.ElementExtensions && div['__proto__']) {=0A=
    window.HTMLElement =3D { };=0A=
    window.HTMLElement.prototype =3D div['__proto__'];=0A=
    Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
  }=0A=
=0A=
  div =3D null;=0A=
=0A=
})(document.createElement('div'))=0A=
=0A=
Element.extend =3D (function() {=0A=
=0A=
  function checkDeficiency(tagName) {=0A=
    if (typeof window.Element !=3D 'undefined') {=0A=
      var proto =3D window.Element.prototype;=0A=
      if (proto) {=0A=
        var id =3D '_' + (Math.random()+'').slice(2);=0A=
        var el =3D document.createElement(tagName);=0A=
        proto[id] =3D 'x';=0A=
        var isBuggy =3D (el[id] !=3D=3D 'x');=0A=
        delete proto[id];=0A=
        el =3D null;=0A=
        return isBuggy;=0A=
      }=0A=
    }=0A=
    return false;=0A=
  }=0A=
=0A=
  function extendElementWith(element, methods) {=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY =3D checkDeficiency('object');=0A=
=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions) {=0A=
    if (HTMLOBJECTELEMENT_PROTOTYPE_BUGGY) {=0A=
      return function(element) {=0A=
        if (element && typeof element._extendedByPrototype =3D=3D =
'undefined') {=0A=
          var t =3D element.tagName;=0A=
          if (t && (/^(?:object|applet|embed)$/i.test(t))) {=0A=
            extendElementWith(element, Element.Methods);=0A=
            extendElementWith(element, Element.Methods.Simulated);=0A=
            extendElementWith(element, =
Element.Methods.ByTag[t.toUpperCase()]);=0A=
          }=0A=
        }=0A=
        return element;=0A=
      }=0A=
    }=0A=
    return Prototype.K;=0A=
  }=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || typeof element._extendedByPrototype !=3D 'undefined' =
||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
        tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    extendElementWith(element, methods);=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    var element =3D document.createElement(tagName);=0A=
    var proto =3D element['__proto__'] || element.constructor.prototype;=0A=
    element =3D null;=0A=
    return proto;=0A=
  }=0A=
=0A=
  var elementPrototype =3D window.HTMLElement ? HTMLElement.prototype :=0A=
   Element.prototype;=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, elementPrototype);=0A=
    copy(Element.Methods.Simulated, elementPrototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
=0A=
document.viewport =3D {=0A=
=0A=
  getDimensions: function() {=0A=
    return {width: this.getWidth(), height: this.getHeight()};=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop  || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
=0A=
(function(viewport) {=0A=
  var B =3D Prototype.Browser, doc =3D document, element, property =3D =
{};=0A=
=0A=
  function getRootElement() {=0A=
    if (B.WebKit && !doc.evaluate)=0A=
      return document;=0A=
=0A=
    if (B.Opera && window.parseFloat(window.opera.version()) < 9.5)=0A=
      return document.body;=0A=
=0A=
    return document.documentElement;=0A=
  }=0A=
=0A=
  function define(D) {=0A=
    if (!element) element =3D getRootElement();=0A=
=0A=
    property[D] =3D 'client' + D;=0A=
=0A=
    viewport['get' + D] =3D function() {return element[property[D]]};=0A=
    return viewport['get' + D]();=0A=
  }=0A=
=0A=
  viewport.getWidth  =3D define.curry('Width');=0A=
=0A=
  viewport.getHeight =3D define.curry('Height');=0A=
})(document.viewport);=0A=
=0A=
=0A=
Element.Storage =3D {=0A=
  UID: 1=0A=
};=0A=
=0A=
Element.addMethods({=0A=
  getStorage: function(element) {=0A=
    if (!(element =3D $(element))) return;=0A=
=0A=
    var uid;=0A=
    if (element =3D=3D=3D window) {=0A=
      uid =3D 0;=0A=
    } else {=0A=
      if (typeof element._prototypeUID =3D=3D=3D "undefined")=0A=
        element._prototypeUID =3D [Element.Storage.UID++];=0A=
      uid =3D element._prototypeUID[0];=0A=
    }=0A=
=0A=
    if (!Element.Storage[uid])=0A=
      Element.Storage[uid] =3D $H();=0A=
=0A=
    return Element.Storage[uid];=0A=
  },=0A=
=0A=
  store: function(element, key, value) {=0A=
    if (!(element =3D $(element))) return;=0A=
=0A=
    if (arguments.length =3D=3D=3D 2) {=0A=
      Element.getStorage(element).update(key);=0A=
    } else {=0A=
      Element.getStorage(element).set(key, value);=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  retrieve: function(element, key, defaultValue) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var hash =3D Element.getStorage(element), value =3D hash.get(key);=0A=
=0A=
    if (Object.isUndefined(value)) {=0A=
      hash.set(key, defaultValue);=0A=
      value =3D defaultValue;=0A=
    }=0A=
=0A=
    return value;=0A=
  },=0A=
=0A=
  clone: function(element, deep) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var clone =3D element.cloneNode(deep);=0A=
    clone._prototypeUID =3D void 0;=0A=
    if (deep) {=0A=
      var descendants =3D Element.select(clone, '*'),=0A=
          i =3D descendants.length;=0A=
      while (i--) {=0A=
        descendants[i]._prototypeUID =3D void 0;=0A=
      }=0A=
    }=0A=
    return Element.extend(clone);=0A=
  }=0A=
});=0A=
/* Portions of the Selector class are derived from Jack Slocum's =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
=0A=
    if (this.shouldUseSelectorsAPI()) {=0A=
      this.mode =3D 'selectorsAPI';=0A=
    } else if (this.shouldUseXPath()) {=0A=
      this.mode =3D 'xpath';=0A=
      this.compileXPathMatcher();=0A=
    } else {=0A=
      this.mode =3D "normal";=0A=
      this.compileMatcher();=0A=
    }=0A=
=0A=
  },=0A=
=0A=
  shouldUseXPath: (function() {=0A=
=0A=
    var IS_DESCENDANT_SELECTOR_BUGGY =3D (function(){=0A=
      var isBuggy =3D false;=0A=
      if (document.evaluate && window.XPathResult) {=0A=
        var el =3D document.createElement('div');=0A=
        el.innerHTML =3D =
'<ul><li></li></ul><div><ul><li></li></ul></div>';=0A=
=0A=
        var xpath =3D ".//*[local-name()=3D'ul' or local-name()=3D'UL']" =
+=0A=
          "//*[local-name()=3D'li' or local-name()=3D'LI']";=0A=
=0A=
        var result =3D document.evaluate(xpath, el, null,=0A=
          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
=0A=
        isBuggy =3D (result.snapshotLength !=3D=3D 2);=0A=
        el =3D null;=0A=
      }=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    return function() {=0A=
      if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
      var e =3D this.expression;=0A=
=0A=
      if (Prototype.Browser.WebKit &&=0A=
       (e.include("-of-type") || e.include(":empty")))=0A=
        return false;=0A=
=0A=
      if ((/(\[[\w-]*?:|:checked)/).test(e))=0A=
        return false;=0A=
=0A=
      if (IS_DESCENDANT_SELECTOR_BUGGY) return false;=0A=
=0A=
      return true;=0A=
    }=0A=
=0A=
  })(),=0A=
=0A=
  shouldUseSelectorsAPI: function() {=0A=
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;=0A=
=0A=
    if (Selector.CASE_INSENSITIVE_CLASS_NAMES) return false;=0A=
=0A=
    if (!Selector._div) Selector._div =3D new Element('div');=0A=
=0A=
    try {=0A=
      Selector._div.querySelector(this.expression);=0A=
    } catch(e) {=0A=
      return false;=0A=
    }=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m, len =3D ps.length, name;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        p =3D ps[i].re;=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[name]) ? c[name](m) :=0A=
            new Template(c[name]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m, len =3D ps.length, name;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e];return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(ps[i].re)) {=0A=
          this.matcher.push(Object.isFunction(x[name]) ? x[name](m) :=0A=
            new Template(x[name]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    var e =3D this.expression, results;=0A=
=0A=
    switch (this.mode) {=0A=
      case 'selectorsAPI':=0A=
        if (root !=3D=3D document) {=0A=
          var oldId =3D root.id, id =3D $(root).identify();=0A=
          id =3D id.replace(/([\.:])/g, "\\$1");=0A=
          e =3D "#" + id + " " + e;=0A=
        }=0A=
=0A=
        results =3D $A(root.querySelectorAll(e)).map(Element.extend);=0A=
        root.id =3D oldId;=0A=
=0A=
        return results;=0A=
      case 'xpath':=0A=
        return document._getElementsByXPath(this.xpath, root);=0A=
      default:=0A=
       return this.matcher(root);=0A=
    }=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m, len =3D ps.length, name;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        p =3D ps[i].re;=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(p)) {=0A=
          if (as[name]) {=0A=
            this.tokens.push([name, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false;break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.BrowserFeatures.SelectorsAPI &&=0A=
 document.compatMode =3D=3D=3D 'BackCompat') {=0A=
  Selector.CASE_INSENSITIVE_CLASS_NAMES =3D (function(){=0A=
    var div =3D document.createElement('div'),=0A=
     span =3D document.createElement('span');=0A=
=0A=
    div.id =3D "prototype_test_id";=0A=
    span.className =3D 'Test';=0A=
    div.appendChild(span);=0A=
    var isIgnored =3D (div.querySelector('#prototype_test_id .test') =
!=3D=3D null);=0A=
    div =3D span =3D null;=0A=
    return isIgnored;=0A=
  })();=0A=
}=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",=0A=
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v, len =3D p.length, name;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i =3D 0; i<len; i++) {=0A=
            name =3D p[i].name=0A=
            if (m =3D e.match(p[i].re)) {=0A=
              v =3D Object.isFunction(x[name]) ? x[name](m) : new =
Template(x[name]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1";return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1";return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos;return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b});=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: [=0A=
    {name: 'laterSibling', re: /^\s*~\s*/},=0A=
    {name: 'child',        re: /^\s*>\s*/},=0A=
    {name: 'adjacent',     re: /^\s*\+\s*/},=0A=
    {name: 'descendant',   re: /^\s/},=0A=
=0A=
    {name: 'tagName',      re: /^\s*(\*|[\w\-]+)(\b|$)?/},=0A=
    {name: 'id',           re: /^#([\w\-\*]+)(\b|$)/},=0A=
    {name: 'className',    re: /^\.([\w\-\*]+)(\b|$)/},=0A=
    {name: 'pseudo',       re: =
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/},=0A=
    {name: 'attrPresence', re: /^\[((?:[\w-]+:)?[\w-]+)\]/},=0A=
    {name: 'attr',         re: =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/}=0A=
  ],=0A=
=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: (function(){=0A=
=0A=
      var PROPERTIES_ATTRIBUTES_MAP =3D (function(){=0A=
        var el =3D document.createElement('div'),=0A=
            isBuggy =3D false,=0A=
            propName =3D '_countedByPrototype',=0A=
            value =3D 'x'=0A=
        el[propName] =3D value;=0A=
        isBuggy =3D (el.getAttribute(propName) =3D=3D=3D value);=0A=
        el =3D null;=0A=
        return isBuggy;=0A=
      })();=0A=
=0A=
      return PROPERTIES_ATTRIBUTES_MAP ?=0A=
        function(nodes) {=0A=
          for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
            node.removeAttribute('_countedByPrototype');=0A=
          return nodes;=0A=
        } :=0A=
        function(nodes) {=0A=
          for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
            node._countedByPrototype =3D void 0;=0A=
          return nodes;=0A=
        }=0A=
    })(),=0A=
=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (typeof (n =3D nodes[i])._countedByPrototype =3D=3D =
'undefined') {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
=0A=
      if (root =3D=3D document) {=0A=
        if (!targetNode) return [];=0A=
        if (!nodes) return [targetNode];=0A=
      } else {=0A=
        if (!root.sourceIndex || root.sourceIndex < 1) {=0A=
          var nodes =3D root.getElementsByTagName('*');=0A=
          for (var j =3D 0, node; node =3D nodes[j]; j++) {=0A=
            if (node.id =3D=3D=3D id) return [node];=0A=
          }=0A=
        }=0A=
      }=0A=
=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (node.tagName =3D=3D '!' || node.firstChild) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) {return nv =3D=3D v;},=0A=
    '!=3D': function(nv, v) {return nv !=3D v;},=0A=
    '^=3D': function(nv, v) {return nv =3D=3D v || nv && =
nv.startsWith(v);},=0A=
    '$=3D': function(nv, v) {return nv =3D=3D v || nv && =
nv.endsWith(v);},=0A=
    '*=3D': function(nv, v) {return nv =3D=3D v || nv && nv.include(v);},=0A=
    '~=3D': function(nv, v) {return (' ' + nv + ' ').include(' ' + v + ' =
');},=0A=
    '|=3D': function(nv, v) {return ('-' + (nv || "").toUpperCase() +=0A=
     '-').include('-' + (v || "").toUpperCase() + '-');}=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression;expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    form =3D $(form);=0A=
    form.reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D {hash: !!options};=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name;value =3D $(element).getValue();=0A=
        if (value !=3D null && element.type !=3D 'file' && (element.type =
!=3D 'submit' || (!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    var elements =3D $(form).getElementsByTagName('*'),=0A=
        element,=0A=
        arr =3D [ ],=0A=
        serializers =3D Form.Element.Serializers;=0A=
    for (var i =3D 0; element =3D elements[i]; i++) {=0A=
      arr.push(element);=0A=
    }=0A=
    return arr.inject([], function(elements, child) {=0A=
      if (serializers[child.tagName.toLowerCase()])=0A=
        elements.push(Element.extend(child));=0A=
      return elements;=0A=
    })=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) {return element.tabIndex}).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return /^(?:input|select|textarea)$/i.test(element.tagName);=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !(/^(?:button|reset|submit)$/i.test(element.type))))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, value) {=0A=
    if (Object.isUndefined(value))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, currentValue, single =3D !Object.isArray(value);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        currentValue =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (currentValue =3D=3D value) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D value.include(currentValue);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
(function() {=0A=
=0A=
  var Event =3D {=0A=
    KEY_BACKSPACE: 8,=0A=
    KEY_TAB:       9,=0A=
    KEY_RETURN:   13,=0A=
    KEY_ESC:      27,=0A=
    KEY_LEFT:     37,=0A=
    KEY_UP:       38,=0A=
    KEY_RIGHT:    39,=0A=
    KEY_DOWN:     40,=0A=
    KEY_DELETE:   46,=0A=
    KEY_HOME:     36,=0A=
    KEY_END:      35,=0A=
    KEY_PAGEUP:   33,=0A=
    KEY_PAGEDOWN: 34,=0A=
    KEY_INSERT:   45,=0A=
=0A=
    cache: {}=0A=
  };=0A=
=0A=
  var docEl =3D document.documentElement;=0A=
  var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED =3D 'onmouseenter' in docEl=0A=
    && 'onmouseleave' in docEl;=0A=
=0A=
  var _isButton;=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D {0: 1, 1: 4, 2: 2};=0A=
    _isButton =3D function(event, code) {=0A=
      return event.button =3D=3D=3D buttonMap[code];=0A=
    };=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    _isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0:return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1:return event.which =3D=3D 1 && event.metaKey;=0A=
        default:return false;=0A=
      }=0A=
    };=0A=
  } else {=0A=
    _isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  function isLeftClick(event)   {return _isButton(event, 0)}=0A=
=0A=
  function isMiddleClick(event) {return _isButton(event, 1)}=0A=
=0A=
  function isRightClick(event)  {return _isButton(event, 2)}=0A=
=0A=
  function element(event) {=0A=
    event =3D Event.extend(event);=0A=
=0A=
    var node =3D event.target, type =3D event.type,=0A=
     currentTarget =3D event.currentTarget;=0A=
=0A=
    if (currentTarget && currentTarget.tagName) {=0A=
      if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||=0A=
        (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'=0A=
          && currentTarget.type =3D=3D=3D 'radio'))=0A=
            node =3D currentTarget;=0A=
    }=0A=
=0A=
    if (node.nodeType =3D=3D Node.TEXT_NODE)=0A=
      node =3D node.parentNode;=0A=
=0A=
    return Element.extend(node);=0A=
  }=0A=
=0A=
  function findElement(event, expression) {=0A=
    var element =3D Event.element(event);=0A=
    if (!expression) return element;=0A=
    var elements =3D [element].concat(element.ancestors());=0A=
    return Selector.findElement(elements, expression, 0);=0A=
  }=0A=
=0A=
  function pointer(event) {=0A=
    return {x: pointerX(event), y: pointerY(event)};=0A=
  }=0A=
=0A=
  function pointerX(event) {=0A=
    var docElement =3D document.documentElement,=0A=
     body =3D document.body || {scrollLeft: 0};=0A=
=0A=
    return event.pageX || (event.clientX +=0A=
      (docElement.scrollLeft || body.scrollLeft) -=0A=
      (docElement.clientLeft || 0));=0A=
  }=0A=
=0A=
  function pointerY(event) {=0A=
    var docElement =3D document.documentElement,=0A=
     body =3D document.body || {scrollTop: 0};=0A=
=0A=
    return  event.pageY || (event.clientY +=0A=
       (docElement.scrollTop || body.scrollTop) -=0A=
       (docElement.clientTop || 0));=0A=
  }=0A=
=0A=
=0A=
  function stop(event) {=0A=
    Event.extend(event);=0A=
    event.preventDefault();=0A=
    event.stopPropagation();=0A=
=0A=
    event.stopped =3D true;=0A=
  }=0A=
=0A=
  Event.Methods =3D {=0A=
    isLeftClick: isLeftClick,=0A=
    isMiddleClick: isMiddleClick,=0A=
    isRightClick: isRightClick,=0A=
=0A=
    element: element,=0A=
    findElement: findElement,=0A=
=0A=
    pointer: pointer,=0A=
    pointerX: pointerX,=0A=
    pointerY: pointerY,=0A=
=0A=
    stop: stop=0A=
  };=0A=
=0A=
=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    function _relatedTarget(event) {=0A=
      var element;=0A=
      switch (event.type) {=0A=
        case 'mouseover':element =3D event.fromElement;break;=0A=
        case 'mouseout':element =3D event.toElement;break;=0A=
        default:return null;=0A=
      }=0A=
      return Element.extend(element);=0A=
    }=0A=
=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() {this.cancelBubble =3D true},=0A=
      preventDefault:  function() {this.returnValue =3D false},=0A=
      inspect: function() {return '[object Event]'}=0A=
    });=0A=
=0A=
    Event.extend =3D function(event, element) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
=0A=
      Object.extend(event, {=0A=
        target: event.srcElement || element,=0A=
        relatedTarget: _relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
  } else {=0A=
    Event.prototype =3D window.Event.prototype || =
document.createEvent('HTMLEvents').__proto__;=0A=
    Object.extend(Event.prototype, methods);=0A=
    Event.extend =3D Prototype.K;=0A=
  }=0A=
=0A=
  function _createResponder(element, eventName, handler) {=0A=
    var registry =3D Element.retrieve(element, =
'prototype_event_registry');=0A=
=0A=
    if (Object.isUndefined(registry)) {=0A=
      CACHE.push(element);=0A=
      registry =3D Element.retrieve(element, 'prototype_event_registry', =
$H());=0A=
    }=0A=
=0A=
    var respondersForEvent =3D registry.get(eventName);=0A=
    if (Object.isUndefined(respondersForEvent)) {=0A=
      respondersForEvent =3D [];=0A=
      registry.set(eventName, respondersForEvent);=0A=
    }=0A=
=0A=
    if (respondersForEvent.pluck('handler').include(handler)) return =
false;=0A=
=0A=
    var responder;=0A=
    if (eventName.include(":")) {=0A=
      responder =3D function(event) {=0A=
        if (Object.isUndefined(event.eventName))=0A=
          return false;=0A=
=0A=
        if (event.eventName !=3D=3D eventName)=0A=
          return false;=0A=
=0A=
        Event.extend(event, element);=0A=
        handler.call(element, event);=0A=
      };=0A=
    } else {=0A=
      if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED &&=0A=
       (eventName =3D=3D=3D "mouseenter" || eventName =3D=3D=3D =
"mouseleave")) {=0A=
        if (eventName =3D=3D=3D "mouseenter" || eventName =3D=3D=3D =
"mouseleave") {=0A=
          responder =3D function(event) {=0A=
            Event.extend(event, element);=0A=
=0A=
            var parent =3D event.relatedTarget;=0A=
            while (parent && parent !=3D=3D element) {=0A=
              try {parent =3D parent.parentNode;}=0A=
              catch(e) {parent =3D element;}=0A=
            }=0A=
=0A=
            if (parent =3D=3D=3D element) return;=0A=
=0A=
            handler.call(element, event);=0A=
          };=0A=
        }=0A=
      } else {=0A=
        responder =3D function(event) {=0A=
          Event.extend(event, element);=0A=
          handler.call(element, event);=0A=
        };=0A=
      }=0A=
    }=0A=
=0A=
    responder.handler =3D handler;=0A=
    respondersForEvent.push(responder);=0A=
    return responder;=0A=
  }=0A=
=0A=
  function _destroyCache() {=0A=
    for (var i =3D 0, length =3D CACHE.length; i < length; i++) {=0A=
      Event.stopObserving(CACHE[i]);=0A=
      CACHE[i] =3D null;=0A=
    }=0A=
  }=0A=
=0A=
  var CACHE =3D [];=0A=
=0A=
  if (Prototype.Browser.IE)=0A=
    window.attachEvent('onunload', _destroyCache);=0A=
=0A=
  if (Prototype.Browser.WebKit)=0A=
    window.addEventListener('unload', Prototype.emptyFunction, false);=0A=
=0A=
=0A=
  var _getDOMEventName =3D Prototype.K;=0A=
=0A=
  if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED) {=0A=
    _getDOMEventName =3D function(eventName) {=0A=
      var translations =3D {mouseenter: "mouseover", mouseleave: =
"mouseout"};=0A=
      return eventName in translations ? translations[eventName] : =
eventName;=0A=
    };=0A=
  }=0A=
=0A=
  function observe(element, eventName, handler) {=0A=
    element =3D $(element);=0A=
=0A=
    var responder =3D _createResponder(element, eventName, handler);=0A=
=0A=
    if (!responder) return element;=0A=
=0A=
    if (eventName.include(':')) {=0A=
      if (element.addEventListener)=0A=
        element.addEventListener("dataavailable", responder, false);=0A=
      else {=0A=
        element.attachEvent("ondataavailable", responder);=0A=
        element.attachEvent("onfilterchange", responder);=0A=
      }=0A=
    } else {=0A=
      var actualEventName =3D _getDOMEventName(eventName);=0A=
=0A=
      if (element.addEventListener)=0A=
        element.addEventListener(actualEventName, responder, false);=0A=
      else=0A=
        element.attachEvent("on" + actualEventName, responder);=0A=
    }=0A=
=0A=
    return element;=0A=
  }=0A=
=0A=
  function stopObserving(element, eventName, handler) {=0A=
    element =3D $(element);=0A=
=0A=
    var registry =3D Element.retrieve(element, =
'prototype_event_registry');=0A=
=0A=
    if (Object.isUndefined(registry)) return element;=0A=
=0A=
    if (eventName && !handler) {=0A=
      var responders =3D registry.get(eventName);=0A=
=0A=
      if (Object.isUndefined(responders)) return element;=0A=
=0A=
      responders.each( function(r) {=0A=
        Element.stopObserving(element, eventName, r.handler);=0A=
      });=0A=
      return element;=0A=
    } else if (!eventName) {=0A=
      registry.each( function(pair) {=0A=
        var eventName =3D pair.key, responders =3D pair.value;=0A=
=0A=
        responders.each( function(r) {=0A=
          Element.stopObserving(element, eventName, r.handler);=0A=
        });=0A=
      });=0A=
      return element;=0A=
    }=0A=
=0A=
    var responders =3D registry.get(eventName);=0A=
=0A=
    if (!responders) return;=0A=
=0A=
    var responder =3D responders.find( function(r) {return r.handler =
=3D=3D=3D handler;});=0A=
    if (!responder) return element;=0A=
=0A=
    var actualEventName =3D _getDOMEventName(eventName);=0A=
=0A=
    if (eventName.include(':')) {=0A=
      if (element.removeEventListener)=0A=
        element.removeEventListener("dataavailable", responder, false);=0A=
      else {=0A=
        element.detachEvent("ondataavailable", responder);=0A=
        element.detachEvent("onfilterchange",  responder);=0A=
      }=0A=
    } else {=0A=
      if (element.removeEventListener)=0A=
        element.removeEventListener(actualEventName, responder, false);=0A=
      else=0A=
        element.detachEvent('on' + actualEventName, responder);=0A=
    }=0A=
=0A=
    registry.set(eventName, responders.without(responder));=0A=
=0A=
    return element;=0A=
  }=0A=
=0A=
  function fire(element, eventName, memo, bubble) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isUndefined(bubble))=0A=
      bubble =3D true;=0A=
=0A=
    if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
      element =3D document.documentElement;=0A=
=0A=
    var event;=0A=
    if (document.createEvent) {=0A=
      event =3D document.createEvent('HTMLEvents');=0A=
      event.initEvent('dataavailable', true, true);=0A=
    } else {=0A=
      event =3D document.createEventObject();=0A=
      event.eventType =3D bubble ? 'ondataavailable' : 'onfilterchange';=0A=
    }=0A=
=0A=
    event.eventName =3D eventName;=0A=
    event.memo =3D memo || { };=0A=
=0A=
    if (document.createEvent)=0A=
      element.dispatchEvent(event);=0A=
    else=0A=
      element.fireEvent(event.eventType, event);=0A=
=0A=
    return Event.extend(event);=0A=
  }=0A=
=0A=
=0A=
  Object.extend(Event, Event.Methods);=0A=
=0A=
  Object.extend(Event, {=0A=
    fire:          fire,=0A=
    observe:       observe,=0A=
    stopObserving: stopObserving=0A=
  });=0A=
=0A=
  Element.addMethods({=0A=
    fire:          fire,=0A=
=0A=
    observe:       observe,=0A=
=0A=
    stopObserving: stopObserving=0A=
  });=0A=
=0A=
  Object.extend(document, {=0A=
    fire:          fire.methodize(),=0A=
=0A=
    observe:       observe.methodize(),=0A=
=0A=
    stopObserving: stopObserving.methodize(),=0A=
=0A=
    loaded:        false=0A=
  });=0A=
=0A=
  if (window.Event) Object.extend(window.Event, Event);=0A=
  else window.Event =3D Event;=0A=
})();=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards, John Resig, and Diego Perini. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearTimeout(timer);=0A=
    document.loaded =3D true;=0A=
    document.fire('dom:loaded');=0A=
  }=0A=
=0A=
  function checkReadyState() {=0A=
    if (document.readyState =3D=3D=3D 'complete') {=0A=
      document.stopObserving('readystatechange', checkReadyState);=0A=
      fireContentLoadedEvent();=0A=
    }=0A=
  }=0A=
=0A=
  function pollDoScroll() {=0A=
    try {document.documentElement.doScroll('left');}=0A=
    catch(e) {=0A=
      timer =3D pollDoScroll.defer();=0A=
      return;=0A=
    }=0A=
    fireContentLoadedEvent();=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    document.addEventListener('DOMContentLoaded', =
fireContentLoadedEvent, false);=0A=
  } else {=0A=
    document.observe('readystatechange', checkReadyState);=0A=
    if (window =3D=3D top)=0A=
      timer =3D pollDoScroll.defer();=0A=
  }=0A=
=0A=
  Event.observe(window, 'load', fireContentLoadedEvent);=0A=
})();=0A=
=0A=
Element.addMethods();=0A=
=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D {display: Element.toggle};=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
var Position =3D {=0A=
  includeScrollOffsets: false,=0A=
=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
// Copyright (c) 2005-2008 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// Contributors:=0A=
//  Justin Palmer (http://encytemedia.com/)=0A=
//  Mark Pilgrim (http://diveintomark.org/)=0A=
//  Martin Bialasinki=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// converts rgb() and #xxx to #xxxxxx format,=0A=
// returns self (or first argument) if not convertable=0A=
String.prototype.parseColor =3D function() {=0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {=0A=
    var cols =3D this.slice(4,this.length-1).split(',');=0A=
    var i=3D0;do {color +=3D parseInt(cols[i]).toColorPart()} while =
(++i<3);=0A=
  } else {=0A=
    if (this.slice(0,1) =3D=3D '#') {=0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();=0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();=0A=
    }=0A=
  }=0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?=0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);=0A=
  element.setStyle({fontSize: (percent/100) + 'em'});=0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + .5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;=0A=
    },=0A=
    pulse: function(pos, pulses) {=0A=
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;=0A=
    },=0A=
    spring: function(pos) {=0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));=0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
=0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character),=0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') ||=0A=
        Object.isFunction(element)) &&=0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
=0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, {delay: index * =
options.speed + masterDelay}));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect) {=0A=
    element =3D $(element);=0A=
    effect =3D (effect || 'appear').toLowerCase();=0A=
    var options =3D Object.extend({=0A=
      queue: {position:'end', scope:(element.id || 'global'), limit: 1}=0A=
    }, arguments[2] || { });=0A=
    Effect[element.visible() ?=0A=
      Effect.PAIRS[effect][1] : Effect.PAIRS[effect][0]](element, =
options);=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;=0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
=0A=
    var position =3D Object.isString(effect.options.queue) ?=0A=
      effect.options.queue : effect.options.queue.position;=0A=
=0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect=0A=
        this.effects.findAll(function(e){return =
e.state=3D=3D'idle'}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
=0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
=0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) {return =
e=3D=3Deffect});=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)=0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
=0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    function codeForEvent(options,eventName){=0A=
      return (=0A=
        (options[eventName+'Internal'] ? =
'this.options.'+eventName+'Internal(this);' : '') +=0A=
        (options[eventName] ? 'this.options.'+eventName+'(this);' : '')=0A=
      );=0A=
    }=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
=0A=
    this.render =3D (function() {=0A=
      function dispatch(effect, eventName) {=0A=
        if (effect.options[eventName + 'Internal'])=0A=
          effect.options[eventName + 'Internal'](effect);=0A=
        if (effect.options[eventName])=0A=
          effect.options[eventName](effect);=0A=
      }=0A=
=0A=
      return function(pos) {=0A=
        if (this.state =3D=3D=3D "idle") {=0A=
          this.state =3D "running";=0A=
          dispatch(this, 'beforeSetup');=0A=
          if (this.setup) this.setup();=0A=
          dispatch(this, 'afterSetup');=0A=
        }=0A=
        if (this.state =3D=3D=3D "running") {=0A=
          pos =3D (this.options.transition(pos) * this.fromToDelta) + =
this.options.from;=0A=
          this.position =3D pos;=0A=
          dispatch(this, 'beforeUpdate');=0A=
          if (this.update) this.update(pos);=0A=
          dispatch(this, 'afterUpdate');=0A=
        }=0A=
      };=0A=
    })();=0A=
=0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish();=0A=
        this.event('afterFinish');=0A=
        return;=0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(),=0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) :=0A=
      function(value) {object[method] =3D value};=0A=
    this.start(Object.extend({from: from, to: to}, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({duration: 0}, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element,=0A=
    Object.extend({x: toLeft, y: toTop}, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
=0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
=0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
=0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
=0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
=0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType});=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({startcolor: '#ffff99'}, arguments[1] =
|| { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') =
{this.cancel();return;}=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16)}.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i]}.bind=
(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart());}.bin=
d(this))});=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
  scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
  elementOffsets =3D $(element).cumulativeOffset();=0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1],=0A=
    options,=0A=
    function(p){scrollTo(scrollOffsets.left, p.round());}=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) {=0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity});=0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show();=0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    opacity: element.getInlineOpacity(),=0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200,=0A=
      {sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true}),=0A=
     new Effect.Opacity(element, {sync: true, to: 0.0} ) ],=0A=
     Object.extend({duration: 1.0,=0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element);=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle);}=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({scaleContent: false,=0A=
      scaleX: false,=0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, {=0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) {=0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      });=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity()};=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true}),=0A=
      new Effect.Opacity(element, {sync: true, to: 0.0}) ],=0A=
    Object.extend(=0A=
      {duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        }=0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left')};=0A=
    return new Effect.Move(element,=0A=
      {x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      {x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }});}});}});}});}});}});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px'});=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});}=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px'});=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish=0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, {=0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping();=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity()};=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, {sync: true, to: 1.0, from: =
0.0, transition: options.opacityTransition}),=0A=
          new Effect.Move(effect.element, {x: moveX, y: moveY, sync: =
true, transition: options.moveTransition}),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: {originalHeight: dims.height, originalWidth: =
dims.width},=0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show();=0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le);=0A=
             }=0A=
           }, options)=0A=
      );=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity()};=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, {sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition}),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, {sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, {x: moveX, y: moveY, sync: true, =
transition: options.moveTransition})=0A=
    ], Object.extend({=0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping();=0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle);}=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { },=0A=
    oldOpacity =3D element.getInlineOpacity(),=0A=
    transition =3D options.transition || Effect.Transitions.linear,=0A=
    reverser   =3D function(pos){=0A=
      return 1 - =
transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);=0A=
    };=0A=
=0A=
  return new Effect.Opacity(element,=0A=
    Object.extend(Object.extend({duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) =
{effect.element.setStyle({opacity: oldOpacity});}=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height};=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, {=0A=
      scaleContent: false,=0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      }});=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
=0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        };=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
=0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 );=0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return {=0A=
        style: property.camelize(),=0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0),=0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      );=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D=0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) +=0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: {style: data}=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){return new effect(e, =
Object.extend({sync:true}, options))});=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' +=0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
=0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
=0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]);=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, =
property) {=0A=
      results[property] =3D css[property];=0A=
      return results;=0A=
    });=0A=
    if (!styles.opacity) styles.opacity =3D element.getOpacity();=0A=
    return styles;=0A=
  };=0A=
}=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({style: style}, arguments[2] =
|| { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) {=0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    };=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each(=0A=
  function(f) {Effect.Methods[f] =3D Element[f];}=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);// script.aculo.us builder.js v1.8.0, =
Tue Nov 06 15:01:40 +0300 2007=0A=
=0A=
// Copyright (c) 2005-2007 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
var Builder =3D {=0A=
  NODEMAP: {=0A=
    AREA: 'map',=0A=
    CAPTION: 'table',=0A=
    COL: 'table',=0A=
    COLGROUP: 'table',=0A=
    LEGEND: 'fieldset',=0A=
    OPTGROUP: 'select',=0A=
    OPTION: 'select',=0A=
    PARAM: 'object',=0A=
    TBODY: 'table',=0A=
    TD: 'table',=0A=
    TFOOT: 'table',=0A=
    TH: 'table',=0A=
    THEAD: 'table',=0A=
    TR: 'table'=0A=
  },=0A=
  // note: For Firefox < 1.5, OPTION and OPTGROUP tags are currently =
broken,=0A=
  //       due to a Firefox bug=0A=
  node: function(elementName) {=0A=
    elementName =3D elementName.toUpperCase();=0A=
    =0A=
    // try innerHTML approach=0A=
    var parentTag =3D this.NODEMAP[elementName] || 'div';=0A=
    var parentElement =3D document.createElement(parentTag);=0A=
    try { // prevent IE "feature": http://dev.rubyonrails.org/ticket/2707=0A=
      parentElement.innerHTML =3D "<" + elementName + "></" + =
elementName + ">";=0A=
    } catch(e) {}=0A=
    var element =3D parentElement.firstChild || null;=0A=
      =0A=
    // see if browser added wrapping tags=0A=
    if(element && (element.tagName.toUpperCase() !=3D elementName))=0A=
      element =3D element.getElementsByTagName(elementName)[0];=0A=
    =0A=
    // fallback to createElement approach=0A=
    if(!element) element =3D document.createElement(elementName);=0A=
    =0A=
    // abort if nothing could be created=0A=
    if(!element) return;=0A=
=0A=
    // attributes (or text)=0A=
    if(arguments[1])=0A=
      if(this._isStringOrNumber(arguments[1]) ||=0A=
        (arguments[1] instanceof Array) ||=0A=
        arguments[1].tagName) {=0A=
          this._children(element, arguments[1]);=0A=
        } else {=0A=
          var attrs =3D this._attributes(arguments[1]);=0A=
          if(attrs.length) {=0A=
            try { // prevent IE "feature": =
http://dev.rubyonrails.org/ticket/2707=0A=
              parentElement.innerHTML =3D "<" +elementName + " " +=0A=
                attrs + "></" + elementName + ">";=0A=
            } catch(e) {}=0A=
            element =3D parentElement.firstChild || null;=0A=
            // workaround firefox 1.0.X bug=0A=
            if(!element) {=0A=
              element =3D document.createElement(elementName);=0A=
              for(attr in arguments[1]) =0A=
                element[attr =3D=3D 'class' ? 'className' : attr] =3D =
arguments[1][attr];=0A=
            }=0A=
            if(element.tagName.toUpperCase() !=3D elementName)=0A=
              element =3D =
parentElement.getElementsByTagName(elementName)[0];=0A=
          }=0A=
        } =0A=
=0A=
    // text, or array of children=0A=
    if(arguments[2])=0A=
      this._children(element, arguments[2]);=0A=
=0A=
     return element;=0A=
  },=0A=
  _text: function(text) {=0A=
     return document.createTextNode(text);=0A=
  },=0A=
=0A=
  ATTR_MAP: {=0A=
    'className': 'class',=0A=
    'htmlFor': 'for'=0A=
  },=0A=
=0A=
  _attributes: function(attributes) {=0A=
    var attrs =3D [];=0A=
    for(attribute in attributes)=0A=
      attrs.push((attribute in this.ATTR_MAP ? this.ATTR_MAP[attribute] =
: attribute) +=0A=
          '=3D"' + =
attributes[attribute].toString().escapeHTML().gsub(/"/,'&quot;') + '"');=0A=
    return attrs.join(" ");=0A=
  },=0A=
  _children: function(element, children) {=0A=
    if(children.tagName) {=0A=
      element.appendChild(children);=0A=
      return;=0A=
    }=0A=
    if(typeof children=3D=3D'object') { // array can hold nodes and text=0A=
      children.flatten().each( function(e) {=0A=
        if(typeof e=3D=3D'object')=0A=
          element.appendChild(e);=0A=
        else=0A=
          if(Builder._isStringOrNumber(e))=0A=
            element.appendChild(Builder._text(e));=0A=
      });=0A=
    } else=0A=
      if(Builder._isStringOrNumber(children))=0A=
        element.appendChild(Builder._text(children));=0A=
  },=0A=
  _isStringOrNumber: function(param) {=0A=
    return(typeof param=3D=3D'string' || typeof param=3D=3D'number');=0A=
  },=0A=
  build: function(html) {=0A=
    var element =3D this.node('div');=0A=
    $(element).update(html.strip());=0A=
    return element.down();=0A=
  },=0A=
  dump: function(scope) { =0A=
    if(typeof scope !=3D 'object' && typeof scope !=3D 'function') scope =
=3D window; //global scope =0A=
  =0A=
    var tags =3D ("A ABBR ACRONYM ADDRESS APPLET AREA B BASE BASEFONT =
BDO BIG BLOCKQUOTE BODY " +=0A=
      "BR BUTTON CAPTION CENTER CITE CODE COL COLGROUP DD DEL DFN DIR =
DIV DL DT EM FIELDSET " +=0A=
      "FONT FORM FRAME FRAMESET H1 H2 H3 H4 H5 H6 HEAD HR HTML I IFRAME =
IMG INPUT INS ISINDEX "+=0A=
      "KBD LABEL LEGEND LI LINK MAP MENU META NOFRAMES NOSCRIPT OBJECT =
OL OPTGROUP OPTION P "+=0A=
      "PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG STYLE =
SUB SUP TABLE TBODY TD "+=0A=
      "TEXTAREA TFOOT TH THEAD TITLE TR TT U UL VAR").split(/\s+/);=0A=
  =0A=
    tags.each( function(tag){ =0A=
      scope[tag] =3D function() { =0A=
        return Builder.node.apply(Builder, [tag].concat($A(arguments))); =
 =0A=
      } =0A=
    });=0A=
  }=0A=
};// Tooltip Object=0A=
var Tooltip =3D Class.create();=0A=
Tooltip.prototype =3D {=0A=
  initialize: function(el, options) {=0A=
    this.el =3D $(el);=0A=
    this.initialized =3D false;=0A=
    this.setOptions(options);=0A=
    =0A=
    // Event handlers=0A=
    this.showEvent =3D this.show.bindAsEventListener(this);=0A=
    this.hideEvent =3D this.hide.bindAsEventListener(this);=0A=
    this.updateEvent =3D this.update.bindAsEventListener(this);=0A=
    Event.observe(this.el, "mouseover", this.showEvent );=0A=
    Event.observe(this.el, "mouseout", this.hideEvent );=0A=
    =0A=
    // Removing title from DOM element to avoid showing it=0A=
    this.content =3D this.el.title;=0A=
    this.el.title =3D "";=0A=
  },=0A=
  setOptions: function(options) {=0A=
    this.options =3D {=0A=
      backgroundColor: '#999', // Default background color=0A=
      borderColor: '#666', // Default border color=0A=
      textColor: '', // Default text color (use CSS value)=0A=
      textShadowColor: '', // Default text shadow color (use CSS value)=0A=
      maxWidth: 250,	// Default tooltip width=0A=
      align: "left", // Default align=0A=
      delay: 250, // Default delay before tooltip appears in ms=0A=
      mouseFollow: false, // Tooltips follows the mouse moving=0A=
      opacity: .75, // Default tooltips opacity=0A=
      appearDuration: .25, // Default appear duration in sec=0A=
      hideDuration: .25 // Default disappear duration in sec=0A=
    };=0A=
    Object.extend(this.options, options || {});=0A=
  },=0A=
  show: function(e) {=0A=
    this.xCord =3D Event.pointerX(e);=0A=
    this.yCord =3D Event.pointerY(e);=0A=
    if(!this.initialized)=0A=
      this.timeout =3D window.setTimeout(this.appear.bind(this), =
this.options.delay);=0A=
  },=0A=
  hide: function(e) {=0A=
    if(this.initialized) {=0A=
      this.appearingFX.cancel();=0A=
      if(this.options.mouseFollow)=0A=
        Event.stopObserving(this.el, "mousemove", this.updateEvent);=0A=
      new Effect.Fade(this.tooltip, {duration: =
this.options.hideDuration, afterFinish: function() =
{Element.remove(this.tooltip)}.bind(this)});=0A=
    }=0A=
    this._clearTimeout(this.timeout);=0A=
    =0A=
    this.initialized =3D false;=0A=
  },=0A=
  update: function(e){=0A=
    this.xCord =3D Event.pointerX(e);=0A=
    this.yCord =3D Event.pointerY(e);=0A=
    this.setup();=0A=
  },=0A=
  appear: function() {=0A=
    // Building tooltip container=0A=
    this.tooltip =3D Builder.node("div", {className: "tooltip", style: =
"display: none;"}, [=0A=
      Builder.node("div", {className:"xtop"}, [=0A=
        Builder.node("div", {className:"xb1", style:"background-color:" =
+ this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb2", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb3", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb4", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"})=0A=
      ]),=0A=
      Builder.node("div", {className: "xboxcontent", style: =
"background-color:" + this.options.backgroundColor + =0A=
        "; border-color:" + this.options.borderColor + =0A=
        ((this.options.textColor !=3D '') ? "; color:" + =
this.options.textColor : "") + =0A=
        ((this.options.textShadowColor !=3D '') ? "; text-shadow:2px 2px =
0" + this.options.textShadowColor + ";" : "")}, this.content), =0A=
      Builder.node("div", {className:"xbottom"}, [=0A=
        Builder.node("div", {className:"xb4", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb3", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb2", style: "background-color:" =
+ this.options.backgroundColor + "; border-color:" + =
this.options.borderColor + ";"}),=0A=
        Builder.node("div", {className:"xb1", style:"background-color:" =
+ this.options.borderColor + ";"})=0A=
      ]),=0A=
    ]);=0A=
    document.body.insertBefore(this.tooltip, =
document.body.childNodes[0]);=0A=
    =0A=
    Element.extend(this.tooltip); // IE needs element to be manually =
extended=0A=
    this.options.width =3D this.tooltip.getWidth();=0A=
    this.tooltip.style.width =3D this.options.width + 'px'; // IE7 needs =
width to be defined=0A=
    =0A=
    this.setup();=0A=
    =0A=
    if(this.options.mouseFollow)=0A=
      Event.observe(this.el, "mousemove", this.updateEvent);=0A=
    =0A=
    this.initialized =3D true;=0A=
    this.appearingFX =3D new Effect.Appear(this.tooltip, {duration: =
this.options.appearDuration, to: this.options.opacity});=0A=
  },=0A=
  setup: function(){=0A=
    // If content width is more then allowed max width, set width to max=0A=
    if(this.options.width > this.options.maxWidth) {=0A=
      this.options.width =3D this.options.maxWidth;=0A=
      this.tooltip.style.width =3D this.options.width + 'px';=0A=
    }=0A=
    =0A=
    // Tooltip doesn't fit the current document dimensions=0A=
    if(this.xCord + this.options.width >=3D =
Element.getWidth(document.body)) {=0A=
      this.options.align =3D "right";=0A=
      this.xCord =3D this.xCord - this.options.width + 20;=0A=
    }=0A=
    =0A=
    this.tooltip.style.left =3D this.xCord - 7 + "px";=0A=
    this.tooltip.style.top =3D this.yCord + 12 + "px";=0A=
  },=0A=
  stop: function() {=0A=
    this.hide();=0A=
    Event.stopObserving(this.el, "mouseover", this.showEvent );=0A=
    Event.stopObserving(this.el, "mouseout", this.hideEvent );          =0A=
    Event.stopObserving(this.el, "mousemove", this.updateEvent);=0A=
  },        =0A=
  _clearTimeout: function(timer) {=0A=
    clearTimeout(timer);=0A=
    clearInterval(timer);=0A=
    return null;=0A=
  }=0A=
};//modified by Quake (added tooltip integration and remove some unused =
code)=0A=
=0A=
/**=0A=
 * modified by badqiu (badqiu(a)gmail.com)=0A=
 * blog: http://badqiu.javaeye.com=0A=
 * Project Home: http://code.google.com/p/rapid-validation/=0A=
 */=0A=
=0A=
/*=0A=
 * Really easy field validation with Prototype=0A=
 * =
http://tetlaw.id.au/view/blog/really-easy-field-validation-with-prototype=0A=
 * Andrew Tetlaw=0A=
 * Version 1.5.3 (2006-07-15)=0A=
 * =0A=
 * Copyright (c) 2006 Andrew Tetlaw=0A=
 * http://www.opensource.org/licenses/mit-license.php=0A=
 */=0A=
=0A=
var ValidationDefaultOptions =3D function(){};=0A=
ValidationDefaultOptions.prototype =3D {=0A=
  onSubmit : true, =
//=E6=98=AF=E5=90=A6=E7=9B=91=E5=90=ACform=E7=9A=84submit=E4=BA=8B=E4=BB=B6=0A=
  stopOnFirst : false, =
//=E8=A1=A8=E5=8D=95=E9=AA=8C=E8=AF=81=E6=97=B6=E5=81=9C=E7=95=99=E5=9C=A8=
=E7=AC=AC=E4=B8=80=E4=B8=AA=E9=AA=8C=E8=AF=81=E7=9A=84=E5=9C=B0=E6=96=B9,=
=E4=B8=8D=E7=BB=A7=E7=BB=AD=E9=AA=8C=E8=AF=81=E4=B8=8B=E5=8E=BB=0A=
  immediate : true, =
//=E6=98=AF=E5=90=A6=E5=AE=9E=E6=97=B6=E6=A3=80=E6=9F=A5=E6=95=B0=E6=8D=AE=
=E7=9A=84=E5=90=88=E6=B3=95=E6=80=A7=0A=
  focusOnError : true, =
//=E6=98=AF=E5=90=A6=E5=87=BA=E9=94=99=E6=97=B6=E5=B0=86=E5=85=89=E6=A0=87=
=E6=8C=87=E9=92=88=E7=A7=BB=E5=88=B0=E5=87=BA=E9=94=99=E7=9A=84=E8=BE=93=E5=
=85=A5=E6=A1=86=E4=B8=8A=0A=
  useTitles : false, =
//=E6=98=AF=E5=90=A6=E4=BD=BF=E7=94=A8input=E7=9A=84title=E5=B1=9E=E6=80=A7=
=E4=BD=9C=E4=B8=BA=E5=87=BA=E9=94=99=E6=97=B6=E7=9A=84=E6=8F=90=E7=A4=BA=E4=
=BF=A1=E6=81=AF=0A=
  onFormValidate : function(result, form) =
{},//Form=E9=AA=8C=E8=AF=81=E6=97=B6=E7=9A=84=E5=9B=9E=E8=B0=83=E5=87=BD=E6=
=95=B0=0A=
  onElementValidate : function(result, elm) {} =
//=E6=9F=90=E4=B8=AAinput=E9=AA=8C=E8=AF=81=E6=97=B6=E7=9A=84=E5=9B=9E=E8=
=B0=83=E5=87=BD=E6=95=B0=0A=
};=0A=
=0A=
var ValidatorDefaultOptions =3D function(){};=0A=
ValidatorDefaultOptions.prototype =3D {=0A=
  ignoreEmptyValue : true, =
//=E6=98=AF=E5=90=A6=E5=BF=BD=E7=95=A5=E7=A9=BA=E5=80=BC=0A=
  depends : [] //=E7=9B=B8=E5=85=B3=E4=BE=9D=E8=B5=96=E9=A1=B9=0A=
};=0A=
 =0A=
Validator =3D Class.create();=0A=
=0A=
ValidationUtils =3D {=0A=
  getReferenceForm : function(elm) {=0A=
    while(elm && elm.tagName !=3D 'BODY') {=0A=
      if(elm.tagName =3D=3D 'FORM') return elm;=0A=
      elm =3D elm.parentNode;=0A=
    }=0A=
    return null;=0A=
  },=0A=
  getInputValue : function(elm) {=0A=
    var elm =3D $(elm);=0A=
    if(elm.type.toLowerCase() =3D=3D 'file') {=0A=
      return elm.value;=0A=
    }else {=0A=
      return $F(elm);=0A=
    }=0A=
  },=0A=
  getElmID : function(elm) {=0A=
    return elm.id ? elm.id : elm.name;=0A=
  },=0A=
  format : function(str,args) {=0A=
    args =3D args || [];=0A=
    ValidationUtils.assert(args.constructor =3D=3D =
Array,"ValidationUtils.format() arguement 'args' must is Array");=0A=
    var result =3D str;=0A=
    for (var i =3D 0; i < args.length; i++){=0A=
      result =3D result.replace(/%s/, args[i]);	=0A=
    }=0A=
    return result;=0A=
  },=0A=
  // =
=E9=80=9A=E8=BF=87classname=E4=BC=A0=E9=80=92=E7=9A=84=E5=8F=82=E6=95=B0=E5=
=BF=85=E9=A1=BB=E9=80=9A=E8=BF=87'-'=E5=88=86=E9=9A=94=E5=90=84=E4=B8=AA=E5=
=8F=82=E6=95=B0=0A=
  // =
=E8=BF=94=E5=9B=9E=E5=80=BC=E5=8C=85=E5=90=AB=E4=B8=80=E4=B8=AA=E5=8F=82=E6=
=95=B0singleArgument,=E4=BE=8B:validate-pattern-/[a-c]/gi,singleArgument=E5=
=80=BC=E4=B8=BA/[a-c]/gi=0A=
  getArgumentsByClassName : function(prefix,className) {=0A=
    if(!className || !prefix)=0A=
      return [];=0A=
    var pattern =3D new RegExp(prefix+'-(\\S+)');=0A=
    var matchs =3D className.match(pattern);=0A=
    if(!matchs)=0A=
      return [];=0A=
    var results =3D [];=0A=
    results.singleArgument =3D matchs[1];=0A=
    var args =3D  matchs[1].split('-');=0A=
    for(var i =3D 0; i < args.length; i++) {=0A=
      if(args[i] =3D=3D '') {=0A=
        if(i+1 < args.length) args[i+1] =3D '-'+args[i+1];=0A=
      }else{=0A=
        results.push(args[i]);=0A=
      }=0A=
    }=0A=
    return results;=0A=
  },=0A=
  assert : function(condition,message) {=0A=
    var errorMessage =3D message || ("assert failed =
error,condition=3D"+condition);=0A=
    if (!condition) {=0A=
      alert(errorMessage);=0A=
      throw new Error(errorMessage);=0A=
    }else {=0A=
      return condition;=0A=
    }=0A=
  },=0A=
  isDate : function(v,dateFormat) {=0A=
    var MONTH =3D "MM";=0A=
    var DAY =3D "dd";=0A=
    var YEAR =3D "yyyy";=0A=
    var regex =3D =
'^'+dateFormat.replace(YEAR,'\\d{4}').replace(MONTH,'\\d{2}').replace(DAY=
,'\\d{2}')+'$';=0A=
    if(!new RegExp(regex).test(v)) return false;=0A=
=0A=
    var year =3D v.substr(dateFormat.indexOf(YEAR),4);=0A=
    var month =3D v.substr(dateFormat.indexOf(MONTH),2);=0A=
    var day =3D v.substr(dateFormat.indexOf(DAY),2);=0A=
		=0A=
    var d =3D new =
Date(ValidationUtils.format('%s/%s/%s',[year,month,day]));=0A=
    return ( parseInt(month, 10) =3D=3D (1+d.getMonth()) ) && =0A=
      (parseInt(day, 10) =3D=3D d.getDate()) && =0A=
      (parseInt(year, 10) =3D=3D d.getFullYear() );		=0A=
  },=0A=
  getLanguage : function() {=0A=
    var lang =3D null;=0A=
    if (typeof navigator.userLanguage =3D=3D 'undefined')=0A=
      lang =3D navigator.language.toLowerCase();=0A=
    else=0A=
      lang =3D navigator.userLanguage.toLowerCase();=0A=
    return lang;=0A=
  },=0A=
  getMessageSource : function() {=0A=
    var lang =3D ValidationUtils.getLanguage();=0A=
    var messageSource =3D Validator.messageSource['zh-cn'];=0A=
    if(Validator.messageSource[lang]) {=0A=
      messageSource =3D Validator.messageSource[lang];=0A=
    }=0A=
    return messageSource;=0A=
  }=0A=
};=0A=
=0A=
Validator.messages =3D {=0A=
  'validation-failed' : '=E9=AA=8C=E8=AF=81=E5=A4=B1=E8=B4=A5.',=0A=
  'required' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E5=80=BC.',=0A=
  'validate-number' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E6=95=B0=E5=AD=97=
.',=0A=
  'validate-digits' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E6=95=B0=E5=AD=97.',=0A=
  'validate-alpha' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E8=8B=B1=E6=96=87=E5=AD=97=E6=AF=8D.',=0A=
  'validate-alphanum' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E8=8B=B1=E6=96=87=E5=AD=97=E6=AF=8D=E6=88=96=
=E6=98=AF=E6=95=B0=E5=AD=97,=E5=85=B6=E5=AE=83=E5=AD=97=E7=AC=A6=E6=98=AF=
=E4=B8=8D=E5=85=81=E8=AE=B8=E7=9A=84.',=0A=
  'validate-email' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E9=82=AE=E4=BB=B6=
=E5=9C=B0=E5=9D=80,=E5=8F=AA=E8=83=BD=E4=BD=BF=E7=94=A8a-z A-Z 0-9 _ . =
-\',=E5=A6=82 username@example.com=E3=80=82 ',=0A=
  'validate-url' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84URL=E5=9C=B0=E5=9D=
=80.',=0A=
  'validate-currency-dollar' : 'Please enter a valid $ amount. For =
example $100.00 .',=0A=
  'validate-one-required' : =
'=E5=9C=A8=E4=B8=8A=E9=9D=A2=E9=80=89=E9=A1=B9=E8=87=B3=E5=B0=91=E9=80=89=
=E6=8B=A9=E4=B8=80=E4=B8=AA.',=0A=
  'validate-integer' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84=E6=95=B4=E6=95=B0=
',=0A=
  'validate-pattern' : =
'=E5=A1=AB=E5=86=99=E7=9A=84=E5=80=BC=E4=B8=8D=E5=8C=B9=E9=85=8D',=0A=
  'validate-ip' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84IP=E5=9C=B0=E5=9D=80=
',=0A=
  'min-value' : '=E6=9C=80=E5=B0=8F=E5=80=BC=E4=B8=BA%s',=0A=
  'max-value' : '=E6=9C=80=E5=A4=A7=E5=80=BC=E4=B8=BA%s',=0A=
  'min-length' : =
'=E6=9C=80=E5=B0=8F=E9=95=BF=E5=BA=A6=E4=B8=BA%s,=E5=BD=93=E5=89=8D=E9=95=
=BF=E5=BA=A6=E4=B8=BA%s.',=0A=
  'max-length' : =
'=E6=9C=80=E5=A4=A7=E9=95=BF=E5=BA=A6=E4=B8=BA%s,=E5=BD=93=E5=89=8D=E9=95=
=BF=E5=BA=A6=E4=B8=BA%s.',=0A=
  'int-range' : '=E5=A1=AB=E5=86=99=E5=80=BC=E5=BA=94=E8=AF=A5=E4=B8=BA =
%s =E8=87=B3 %s =E7=9A=84=E6=95=B4=E6=95=B0',=0A=
  'float-range' : =
'=E5=A1=AB=E5=86=99=E5=80=BC=E5=BA=94=E8=AF=A5=E4=B8=BA %s =E8=87=B3 %s =
=E7=9A=84=E6=95=B0=E5=AD=97',=0A=
  'length-range' : =
'=E5=A1=AB=E5=86=99=E5=80=BC=E7=9A=84=E9=95=BF=E5=BA=A6=E5=BA=94=E8=AF=A5=
=E5=9C=A8 %s =E8=87=B3 %s =
=E4=B9=8B=E9=97=B4,=E5=BD=93=E5=89=8D=E9=95=BF=E5=BA=A6=E4=B8=BA%s',=0A=
  'equals' : =
'=E4=B8=A4=E6=AC=A1=E5=A1=AB=E5=86=99=E4=B8=8D=E4=B8=80=E8=87=B4,=E8=AF=B7=
=E9=87=8D=E6=96=B0=E5=A1=AB=E5=86=99',=0A=
  'less-than' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=B0=8F=E4=BA=8E=E5=89=8D=E9=9D=A2=E7=9A=84=
=E5=80=BC',=0A=
  'great-than' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=A4=A7=E4=BA=8E=E5=89=8D=E9=9D=A2=E7=9A=84=
=E5=80=BC',=0A=
  'validate-date' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E6=97=A5=E6=9C=9F=
,=E6=A0=BC=E5=BC=8F=E4=B8=BA %s. =E4=BE=8B=E5=A6=82:%s.',=0A=
  'validate-file' : function(v,elm,args,metadata) {=0A=
    return =
ValidationUtils.format("=E6=96=87=E4=BB=B6=E7=B1=BB=E5=9E=8B=E5=BA=94=E8=AF=
=A5=E4=B8=BA[%s]=E5=85=B6=E4=B8=AD=E4=B9=8B=E4=B8=80",[args.join(',')]);=0A=
  },=0A=
  'validate-id-number' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=90=88=E6=B3=95=E7=9A=84=E8=BA=AB=E4=BB=BD=
=E8=AF=81=E5=8F=B7=E7=A0=81',=0A=
  'validate-chinese' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E4=B8=AD=E6=96=87',=0A=
  'validate-phone' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84=E7=94=B5=E8=AF=9D=
=E5=8F=B7=E7=A0=81,=E5=A6=82:021-87654321,=E5=BD=93=E5=89=8D=E9=95=BF=E5=BA=
=A6=E4=B8=BA%s.',=0A=
  'validate-mobile-phone' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=AD=A3=E7=A1=AE=E7=9A=84=E6=89=8B=E6=9C=BA=
=E5=8F=B7=E7=A0=81,=E5=BD=93=E5=89=8D=E9=95=BF=E5=BA=A6=E4=B8=BA%s.',=0A=
  'validate-zip' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84=E9=82=AE=E6=94=BF=
=E7=BC=96=E7=A0=81',=0A=
  'validate-qq' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E6=9C=89=E6=95=88=E7=9A=84QQ=E5=8F=B7=E7=A0=81=
.',=0A=
  'validate-richeditor' : '=E8=AF=B7=E5=A1=AB=E5=86=99=E5=80=BC.',=0A=
  'validate-combobox' : =
'=E8=AF=B7=E5=A1=AB=E5=86=99=E5=80=BC=E6=88=96=E9=80=89=E5=8F=96=E5=89=8D=
=E9=9D=A2=E7=9A=84=E9=80=89=E9=A1=B9.',=0A=
  'max-tag' : '=E8=AF=B7=E5=A1=AB=E5=86=991-%s=E4=B8=AATag.'=0A=
};=0A=
=0A=
Validator.bad_words=3D[/fuck/i,/shit/i,/QQ=E7=BE=A4/i,/MSN=E7=BE=A4/i,/=E6=
=B1=82(=E5=8A=A9|=E6=95=91)/,/(=E8=B7=AA|=E8=A3=B8)=E6=B1=82/,/=E6=80=A5=E6=
=80=A5|=E6=88=91=E5=BE=88=E6=80=A5|=E7=B4=A7=E6=80=A5=E5=AF=BB=E6=B1=82/,=
/=E5=9C=A8=E7=BA=BF=E7=AD=89/,/=E6=95=91(=E5=91=BD|=E6=88=91|=E6=80=A5|=E6=
=95=91)/,/=E6=80=A5(!|=EF=BC=81)/,/(=E9=AB=98=E6=89=8B|=E9=AB=98=E4=BA=BA=
|=E5=A4=A7=E8=99=BE|=E5=A4=A7=E4=BE=A0|=E8=BE=BE=E4=BA=BA|=E5=89=8D=E8=BE=
=88|=E5=BF=AB=E6=9D=A5|=E6=B2=A1=E6=9C=89=E4=BA=BA)(=E6=8C=87=E7=82=B9|=E8=
=A7=A3=E7=AD=94|=E5=B8=AE=E5=BF=99|=E5=B8=AE=E5=B8=AE|=E6=8C=87=E6=95=99|=
=E8=B5=90=E6=95=99|=E6=8F=90=E7=82=B9|=E4=B8=8D=E5=90=9D=E8=B5=90=E6=95=99=
|=E5=88=B0=E5=93=AA)/,/(=E6=88=91=E6=98=AF|=E5=B8=AE=E5=B8=AE)(=E6=96=B0=E6=
=89=8B|=E5=B0=8F=E5=BC=9F|=E8=8F=9C=E9=B8=9F)/,/=E5=B8=AE=E5=B8=AE=E5=BF=99=
/, /=E4=B8=87=E5=88=86=E7=81=AB=E6=80=A5/, =
/=E6=88=91=E9=A1=B6|=E9=A1=B6=E4=B8=8A=E5=8E=BB|=E5=A5=BD=E8=B4=B4=E8=A6=81=
=E9=A1=B6|=E5=B8=AE=E9=A1=B6|=E7=9C=8B=E7=9C=8B=E5=85=88|=E9=A1=B6=E4=B8=80=
=E4=B8=8B/,/=E6=9C=89*=E6=B2=A1=E6=9C=89=E4=BA=BA(=E5=9B=9E=E7=AD=94|=E5=B8=
=AE=E5=BF=99|=E5=85=B3=E6=B3=A8|=E7=9F=A5=E9=81=93=E5=95=8A|=E5=9B=9E=E5=A4=
=8D)/,/=E6=95=99=E4=B8=BB|=E8=A3=85B|=E8=A3=8513/,/=E5=85=B3=E6=B3=A8(ing=
|=E4=B8=AD)/i,/=E6=94=B6=E8=97=8F=E5=85=88/,/=E5=85=88=E6=94=B6=E8=97=8F/=
,/=E6=94=B6=E8=97=8F=E4=BA=86/,/=E5=9B=BE=E4=B9=A6=E5=85=BC=E8=81=8C=E4=BD=
=9C=E8=80=85/,/=E8=B0=A2=E8=B0=A2=E6=A5=BC=E4=B8=BB/,/=E4=BC=A0=E6=99=BA=E6=
=92=AD=E5=AE=A2/,/FineReport/i];=0A=
=0A=
Validator.prototype =3D {=0A=
  initialize : function(className, test, options) {=0A=
    this.options =3D Object.extend(new ValidatorDefaultOptions(), =
options || {});=0A=
    this._test =3D test ? test : function(v,elm){return true;};=0A=
    this._error =3D Validator.messages[className] ? =
Validator.messages[className] : Validator.messages['validation-failed'];=0A=
    this.className =3D className;=0A=
    this._dependsTest =3D this._dependsTest.bind(this);=0A=
    this._getDependError =3D this._getDependError.bind(this);=0A=
  },=0A=
  _dependsTest : function(v,elm) {=0A=
    if(this.options.depends && this.options.depends.length > 0) {=0A=
      var dependsResult =3D =
$A(this.options.depends).all(function(depend){=0A=
        return Validation.get(depend).test(v,elm);=0A=
      });=0A=
      return dependsResult;=0A=
    }=0A=
    return true;=0A=
  },=0A=
  test : function(v, elm) {=0A=
    if(!this._dependsTest(v,elm))=0A=
      return false;=0A=
    if(!elm) elm =3D {};=0A=
    return (this.options.ignoreEmptyValue && ((v =3D=3D null) || =
(v.length =3D=3D 0))) || =
this._test(v,elm,ValidationUtils.getArgumentsByClassName(this.className,e=
lm.className),this);=0A=
  },=0A=
  _getDependError : function(v,elm,useTitle) {=0A=
    var dependError =3D null;=0A=
    $A(this.options.depends).any(function(depend){=0A=
      var validation =3D Validation.get(depend);=0A=
      if(!validation.test(v,elm))  {=0A=
        dependError =3D validation.error(v,elm,useTitle);=0A=
        return true;=0A=
      }=0A=
      return false;=0A=
    });=0A=
    return dependError;=0A=
  }, =0A=
  error : function(v,elm,useTitle) {=0A=
    var dependError =3D this._getDependError(v,elm,useTitle);=0A=
    if(dependError !=3D null) return dependError;=0A=
=0A=
    var args  =3D =
ValidationUtils.getArgumentsByClassName(this.className,elm.className);=0A=
    var error =3D this._error;=0A=
    if(typeof error =3D=3D 'string') {=0A=
      if(v) args.push(v.length);=0A=
      error =3D ValidationUtils.format(this._error,args);=0A=
    }else if(typeof error =3D=3D 'function') {=0A=
      error =3D error(v,elm,args,this);=0A=
    }else {=0A=
      alert('property "_error" must type of string or function');=0A=
    }=0A=
    if(!useTitle) useTitle =3D elm.className.indexOf('useTitle') >=3D 0;=0A=
    return useTitle ? ((elm && elm.title) ? elm.title : error) : error;=0A=
  }=0A=
};=0A=
=0A=
var Validation =3D Class.create();=0A=
=0A=
Validation.prototype =3D {=0A=
  initialize : function(form, options){=0A=
    this.options =3D Object.extend(new ValidationDefaultOptions(), =
options || {});=0A=
    this.form =3D $(form);=0A=
    var formId =3D  ValidationUtils.getElmID($(form));=0A=
    Validation.validations[formId] =3D this;=0A=
    if(this.options.onSubmit) =
Event.observe(this.form,'submit',this.onSubmit.bind(this),false);=0A=
    if(this.options.immediate) {=0A=
      var useTitles =3D this.options.useTitles;=0A=
      var callback =3D this.options.onElementValidate;=0A=
      Form.getElements(this.form).each(function(input) { // Thanks Mike!=0A=
        Event.observe(input, 'blur', function(ev) =
{Validation.validateElement(Event.element(ev),{useTitle : useTitles, =
onElementValidate : callback});});=0A=
      });=0A=
    }=0A=
  },=0A=
  onSubmit :  function(ev){=0A=
    if(this.form.spinner && this.form.spinner.visible()) {=0A=
      Event.stop(ev);=0A=
    }else if(!this.validate()) {=0A=
      Event.stop(ev);=0A=
    }else {=0A=
      =
Event.observe(this.form,'submit',function(e){Event.stop(e);}.bind(this.fo=
rm),false);=0A=
      if(this.form.spinner) {=0A=
        this.form.spinner.show();=0A=
      }else{=0A=
        this.form.spinner =3D $(document.createElement("img"));=0A=
        this.form.spinner.className =3D 'spinner_img';=0A=
        this.form.spinner.src =3D =
'http://www.iteye.com/images/spinner.gif';=0A=
        Element.insert(this.form.select('input.submit')[0], {"after" : =
this.form.spinner});=0A=
      }=0A=
    }=0A=
  },=0A=
  validate : function() {=0A=
    var result =3D false;=0A=
    var useTitles =3D this.options.useTitles;=0A=
    var callback =3D this.options.onElementValidate;=0A=
    if(this.options.stopOnFirst) {=0A=
      result =3D Form.getElements(this.form).all(function(elm) {return =
Validation.validateElement(elm,{useTitle : useTitles, onElementValidate =
: callback});});=0A=
    } else {=0A=
      result =3D Form.getElements(this.form).collect(function(elm) =
{return Validation.validateElement(elm,{useTitle : useTitles, =
onElementValidate : callback});}).all();=0A=
    }=0A=
    if(!result && this.options.focusOnError) {=0A=
      var first =3D =
Form.getElements(this.form).findAll(function(elm){return =
$(elm).hasClassName('validation-failed');}).first();=0A=
      try{=0A=
        if(first.select) first.select();=0A=
        first.focus();=0A=
      }catch(e){}=0A=
    }=0A=
    this.options.onFormValidate(result, this.form);=0A=
    return result;=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Validation, {=0A=
  validateElement : function(elm, options){=0A=
    options =3D Object.extend({=0A=
      useTitle : false,=0A=
      onElementValidate : function(result, elm) {}=0A=
    }, options || {});=0A=
    elm =3D $(elm);=0A=
    var cn =3D elm.classNames();=0A=
    return cn.all(function(value) {=0A=
      var test =3D Validation.test(value,elm,options.useTitle);=0A=
      options.onElementValidate(test, elm);=0A=
      return test;=0A=
    });=0A=
  },=0A=
  showErrorMsg : function(name,elm,errorMsg) {           =0A=
    if(!elm.tooltip) elm.tooltip =3D new Tooltip(elm, {backgroundColor: =
"#FC9", borderColor: "#C96", textColor: "#000", textShadowColor: =
"#FFF"});=0A=
    elm.tooltip.content =3D errorMsg;=0A=
    elm.removeClassName('validation-passed');=0A=
    elm.addClassName('validation-failed');=0A=
  },=0A=
  showErrorMsgByValidator : function(name,elm,useTitle) {=0A=
    =
Validation.showErrorMsg(name,elm,Validation.get(name).error(ValidationUti=
ls.getInputValue(elm),elm,useTitle));=0A=
  },=0A=
  hideErrorMsg : function(name,elm) {		=0A=
    if(elm.tooltip) {=0A=
      elm.tooltip.stop();=0A=
      elm.tooltip =3D false;            =0A=
    }=0A=
    elm.removeClassName('validation-failed');=0A=
    elm.addClassName('validation-passed');=0A=
  },=0A=
  test : function(name, elm, useTitle) {=0A=
    var v =3D Validation.get(name);=0A=
    if(!v.test(ValidationUtils.getInputValue(elm),elm)) {=0A=
      Validation.showErrorMsgByValidator(name,elm,useTitle);=0A=
      return false;=0A=
    } else {=0A=
      Validation.hideErrorMsg(name,elm);=0A=
      return true;=0A=
    }=0A=
  },=0A=
  getAdvice : function(name, elm) {=0A=
    return Try.these(=0A=
    function(){return $('advice-' + name + '-' + =
ValidationUtils.getElmID(elm));},=0A=
    function(){return $('advice-' + ValidationUtils.getElmID(elm));}=0A=
  );=0A=
  },=0A=
  add : function(className, test, options) {=0A=
    var nv =3D {};=0A=
    var testFun =3D test;=0A=
    if(test instanceof RegExp)=0A=
      testFun =3D function(v,elm,args,metadata){return test.test(v);};=0A=
    nv[className] =3D new Validator(className, testFun, options);=0A=
    Object.extend(Validation.methods, nv);=0A=
  },=0A=
  addAllThese : function(validators) {=0A=
    $A(validators).each(function(value) {=0A=
      Validation.add(value[0], value[1], (value.length > 2 ? value[2] : =
{}));=0A=
    });=0A=
  },=0A=
  get : function(name) {=0A=
    var resultMethodName;=0A=
    for(var methodName in Validation.methods) {=0A=
      if(name =3D=3D methodName) {=0A=
        resultMethodName =3D methodName;=0A=
        break;=0A=
      }=0A=
      if(name.indexOf(methodName) >=3D 0) {=0A=
        resultMethodName =3D methodName;=0A=
      }=0A=
    }=0A=
    return Validation.methods[resultMethodName] ? =
Validation.methods[resultMethodName] : new Validator();=0A=
  },=0A=
  $ : function(formId) {=0A=
    return Validation.validations[formId];=0A=
  },=0A=
  methods : {},=0A=
  validations : {}=0A=
});=0A=
=0A=
Validation.addAllThese([=0A=
  ['required', function(v) {=0A=
      return !((v =3D=3D null) || (v.length =3D=3D 0) || =
/^[\s|\u3000]+$/.test(v));=0A=
    },{ignoreEmptyValue:false}],=0A=
  ['validate-number', function(v) {=0A=
      return (!isNaN(v) && !/^\s+$/.test(v));=0A=
    }],=0A=
  ['validate-digits', function(v) {=0A=
      return !/[^\d]/.test(v);=0A=
    }],=0A=
  ['validate-alphanum', function(v) {=0A=
      return !/\W/.test(v);=0A=
    }],=0A=
  ['validate-one-required', function (v,elm) {=0A=
      var p =3D elm.parentNode;=0A=
      var options =3D p.getElementsByTagName('INPUT');=0A=
      return $A(options).any(function(elm) {=0A=
        return $F(elm);=0A=
      });=0A=
    },{ignoreEmptyValue : false}],=0A=
			=0A=
  ['validate-digits',/^[\d]+$/],		=0A=
  ['validate-alphanum',/^[a-zA-Z0-9]+$/],		=0A=
  ['validate-alpha',/^[a-zA-Z]+$/],=0A=
=0A=
  ['validate-email',/^[\w.+-]+@(?:[-a-z0-9]+\.)+[a-z]{2,4}$/i],=0A=
  =
['validate-url',/^(http|https|ftp):\/\/(([A-Z0-9][A-Z0-9_-]*)(\.[A-Z0-9][=
A-Z0-9_-]*)+)(:(\d+))?\/?/i],=0A=
  // [$]1[##][,###]+[.##]=0A=
  // [$]1###+[.##]=0A=
  // [$]0.##=0A=
  // [$].##=0A=
  =
['validate-currency-dollar',/^\$?\-?([1-9]{1}[0-9]{0,2}(\,[0-9]{3})*(\.[0=
-9]{0,2})?|[1-9]{1}\d*(\.[0-9]{0,2})?|0(\.[0-9]{0,2})?|(\.[0-9]{1,2})?)$/=
]=0A=
]);=0A=
=0A=
//custom validate start=0A=
=0A=
Validation.addAllThese([=0A=
  /**=0A=
   * Usage : equals-$otherInputId=0A=
   * Example : equals-username or equals-email etc..=0A=
   */=0A=
  ['equals', function(v,elm,args,metadata) {=0A=
      return $F(args[0]) =3D=3D v;=0A=
    },{ignoreEmptyValue:false}],=0A=
  /**=0A=
   * Usage : less-than-$otherInputId=0A=
   */=0A=
  ['less-than', function(v,elm,args,metadata) {=0A=
      if(Validation.get('validate-number').test(v) && =
Validation.get('validate-number').test($F(args[0])))=0A=
        return parseFloat(v) < parseFloat($F(args[0]));=0A=
      return v < $F(args[0]);=0A=
    }],=0A=
  /**=0A=
   * Usage : great-than-$otherInputId=0A=
   */=0A=
  ['great-than', function(v,elm,args,metadata) {=0A=
      if(Validation.get('validate-number').test(v) && =
Validation.get('validate-number').test($F(args[0])))=0A=
        return parseFloat(v) > parseFloat($F(args[0]));=0A=
      return v > $F(args[0]);=0A=
    }],=0A=
  /*=0A=
   * Usage: min-length-$number=0A=
   * Example: min-length-10=0A=
   */=0A=
  ['min-length',function(v,elm,args,metadata) {=0A=
      return v.length >=3D parseInt(args[0]);=0A=
    }],=0A=
  /*=0A=
   * Usage: max-length-$number=0A=
   * Example: max-length-10=0A=
   */=0A=
  ['max-length',function(v,elm,args,metadata) {=0A=
      return v.length <=3D parseInt(args[0]);=0A=
    }],=0A=
  /*=0A=
   * Usage: validate-file-$type1-$type2-$typeX=0A=
   * Example: validate-file-png-jpg-jpeg=0A=
   */=0A=
  ['validate-file',function(v,elm,args,metadata) {=0A=
      return $A(args).any(function(extentionName) {=0A=
        return new RegExp('\\.'+extentionName+'$','i').test(v);=0A=
      });=0A=
    }],=0A=
  /*=0A=
   * Usage: float-range-$minValue-$maxValue=0A=
   * Example: -2.1 to 3 =3D float-range--2.1-3=0A=
   */=0A=
  ['float-range',function(v,elm,args,metadata) {=0A=
      return (parseFloat(v) >=3D parseFloat(args[0]) && parseFloat(v) =
<=3D parseFloat(args[1]));=0A=
    },{depends : ['validate-number']}],=0A=
  /*=0A=
   * Usage: int-range-$minValue-$maxValue=0A=
   * Example: -10 to 20 =3D int-range--10-20=0A=
   */=0A=
  ['int-range',function(v,elm,args,metadata) {=0A=
      return (parseInt(v) >=3D parseInt(args[0]) && parseInt(v) <=3D =
parseInt(args[1]));=0A=
    },{depends : ['validate-integer']}],=0A=
  /*=0A=
   * Usage: length-range-$minLength-$maxLength=0A=
   * Example: 10 to 20 =3D length-range-10-20=0A=
   */=0A=
  ['length-range',function(v,elm,args,metadata) {=0A=
      return (v.length >=3D parseInt(args[0]) && v.length <=3D =
parseInt(args[1]));=0A=
    }],=0A=
  /*=0A=
   * Usage: max-value-$number=0A=
   * Example: max-value-10=0A=
   */=0A=
  ['max-value',function(v,elm,args,metadata) {=0A=
      return parseFloat(v) <=3D parseFloat(args[0]);=0A=
    },{depends : ['validate-number']}],=0A=
  /*=0A=
   * Usage: min-value-$number=0A=
   * Example: min-value-10=0A=
   */=0A=
  ['min-value',function(v,elm,args,metadata) {=0A=
      return parseFloat(v) >=3D parseFloat(args[0]);=0A=
    },{depends : ['validate-number']}],=0A=
  /*=0A=
   * Usage: validate-pattern-$RegExp=0A=
   * Example: <input id=3D'sex' class=3D'validate-pattern-/^[fm]$/i'>=0A=
   */=0A=
  ['validate-pattern',function(v,elm,args,metadata) {=0A=
      return eval('('+args.singleArgument+'.test(v))');=0A=
    }],=0A=
  /*=0A=
   * Usage: validate-ajax-$url=0A=
   * Example: <input id=3D'email' =
class=3D'validate-ajax-http://localhost:8080/validate-email.jsp'>=0A=
   */=0A=
  ['validate-ajax',function(v,elm,args,metadata) {=0A=
      var form =3D ValidationUtils.getReferenceForm(elm);=0A=
      var params =3D (form ? Form.serialize(form) : =
Form.Element.serialize(elm));=0A=
      params +=3D =
ValidationUtils.format("&what=3D%s&value=3D%s",[elm.name,encodeURICompone=
nt(v)]);=0A=
      var request =3D new Ajax.Request(args.singleArgument,{=0A=
        parameters : params,=0A=
        asynchronous : false,=0A=
        method : "post"=0A=
      });=0A=
		=0A=
      var responseText =3D request.transport.responseText;=0A=
      if("" =3D=3D responseText.strip()) return true;=0A=
      metadata._error =3D responseText;=0A=
      return false;=0A=
    }],=0A=
  /*=0A=
   * Usage: validate-date-$dateFormat or validate-date($dateFormat =
default is yyyy-MM-dd)=0A=
   * Example: validate-date-yyyy/MM/dd=0A=
   */=0A=
  ['validate-date', function(v,elm,args,metadata) {=0A=
      var dateFormat =3D args.singleArgument || 'yyyy-MM-dd';=0A=
      metadata._error =3D =
ValidationUtils.format(Validator.messages[metadata.className],[dateFormat=
,dateFormat.replace('yyyy','2006').replace('MM','03').replace('dd','12')]=
);=0A=
      return ValidationUtils.isDate(v,dateFormat);=0A=
    }],	=0A=
  ['validate-integer',/^[-+]?[1-9]\d*$|^0$/],=0A=
  =
['validate-ip',/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0=
-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/],=0A=
  =
//=E4=B8=AD=E5=9B=BD=E7=9B=B8=E5=85=B3=E9=AA=8C=E8=AF=81=E5=BC=80=E5=A7=8B=0A=
  ['validate-id-number',function(v,elm,args,metadata) {=0A=
      if(!(/^\d{17}(\d|x)$/i.test(v) || /^\d{15}$/i.test(v))) return =
false;=0A=
      var provinceCode =3D parseInt(v.substr(0,2));=0A=
      if((provinceCode < 11) || (provinceCode > 91)) return false;=0A=
      var forTestDate =3D v.length =3D=3D 18 ? v : =
v.substr(0,6)+"19"+v.substr(6,15);=0A=
      var birthday =3D forTestDate.substr(6,8);=0A=
      if(!ValidationUtils.isDate(birthday,'yyyyMMdd')) return false;=0A=
      if(v.length =3D=3D 18) {=0A=
        v =3D v.replace(/x$/i,"a");=0A=
        var verifyCode =3D 0;=0A=
        for(var i =3D 17;i >=3D 0;i--)   =0A=
          verifyCode +=3D (Math.pow(2,i) % 11) * parseInt(v.charAt(17 - =
i),11);=0A=
        if(verifyCode % 11 !=3D 1) return false;=0A=
      }=0A=
      return true;=0A=
    }],=0A=
  ['validate-chinese',/^[\u4e00-\u9fa5]+$/],=0A=
  ['validate-phone',/^((0[1-9]{3})?(0[12][0-9])?[-])?\d{6,8}$/],=0A=
  ['validate-mobile-phone',/(^0?[1][35][0-9]{9}$)/],=0A=
  ['validate-zip',/^[1-9]\d{5}$/],=0A=
  ['validate-qq',/^[1-9]\d{4,8}$/],=0A=
	=0A=
  //javaeye added=0A=
  ['validate-richeditor', function(v, elm) {=0A=
      if(editor.mode =3D=3D "rich") {=0A=
        v =3D =
tinyMCE.activeEditor.getContent().stripTags().replace(/&nbsp;/g,' ');	=0A=
      }=0A=
      return !((v =3D=3D null) || (v.length =3D=3D 0) || =
/^[\s|\u3000]+$/.test(v));			=0A=
    },{ignoreEmptyValue:false}],=0A=
	=0A=
  ['bad-words', function(v) {=0A=
      for (var i=3D0; i < Validator.bad_words.length; i++) {=0A=
        var m =3D v.match(Validator.bad_words[i]);=0A=
        if (m) {=0A=
          =
alert("ITeye=E5=8F=91=E8=B4=B4=E6=8F=90=E7=A4=BA\n\nITeye=E7=BD=91=E7=AB=99=
=E4=B8=8D=E5=85=81=E8=AE=B8=E6=82=A8=E4=BD=BF=E7=94=A8 \"" + m[0] + "\" =
=E8=BF=99=E6=A0=B7=E7=9A=84=E8=AF=8D=E6=B1=87=E5=8F=91=E8=B4=B4=EF=BC=81\=
n\n=E6=82=A8=E5=BE=88=E5=8F=AF=E8=83=BD=E8=BF=9D=E5=8F=8D=E4=BA=86=E7=BD=91=
=E7=AB=99=E8=A7=84=E5=88=99=EF=BC=8C=E8=AF=B7=E4=BB=94=E7=BB=86=E9=98=85=E8=
=AF=BB=E5=B9=B6=E9=81=B5=E5=AE=88=E7=BD=91=E7=AB=99=E8=A7=84=E5=88=99=EF=BC=
=8C=E5=90=A6=E5=88=99=E5=B0=86=E8=A2=AB=E6=89=A3=E5=88=86=E5=88=A0=E8=B4=B4=
=E3=80=82\n\n");=0A=
          return false;=0A=
        }}=0A=
      return true;		=0A=
    }],=0A=
  ['validate-combobox', function(v, elm, args) {=0A=
      var v =3D $F(args[0]);=0A=
      return Validation.get('required').test(elm.value) || =
Validation.get('required').test(v);=0A=
    },{ignoreEmptyValue:false}],=0A=
=0A=
  /*=0A=
   * Usage: max-tag-$number=0A=
   * Example: max-tag-3=0A=
   */=0A=
  ['max-tag', function(v, elm, args){=0A=
    return v.replace(/^\s+|\s+$/g, '').split(/,\s*|=EF=BC=8C\s*/).length =
<=3D parseInt(args[0]);=0A=
  }]=0A=
]);=0A=
String.prototype.trim =3D function() {return this.replace(/^\s+|\s+$/g, =
'');};=0A=
=0A=
function multiple_upload_attachment(ele, max_size) {=0A=
  Event.observe(ele, 'change', function() {=0A=
    addAttachmentDiv(ele, max_size);=0A=
  });=0A=
  if (multiple_upload_attachment_counter >=3D max_size) ele.disabled =3D =
true;=0A=
}=0A=
=0A=
var attachment_template =3D new =
Template('<table><tr><th>=E6=96=87=E4=BB=B6:</th><td><span>#{filename}</s=
pan><span class=3D"more"><a href=3D"#" =
class=3D"delete">=E5=88=A0=E9=99=A4</a></span><div =
class=3D"clear"></div></td></tr><tr><th>=E6=8F=8F=E8=BF=B0:</th><td><text=
area name=3D"attachments[][remark]" cols=3D"" =
rows=3D""></textarea></td></tr></table>');=0A=
=0A=
function addAttachmentDiv(ele, max_size) {=0A=
  if (!$A(['jpg','jpeg','bmp','png','gif','rar','zip', 'tar', 'gz', =
'jar', 'war', 'bz2', '7z']).any(function(extName){return new =
RegExp('\\.'+extName+'$','i').test(ele.value);})){=0A=
    =
alert("=E5=A6=82=E6=9E=9C=E6=82=A8=E4=B8=8A=E4=BC=A0=E5=9B=BE=E7=89=87=EF=
=BC=8C=E8=AF=B7=E4=B8=8A=E4=BC=A0JPG=E3=80=81BMP=E3=80=81PNG=E6=88=96=E8=80=
=85GIF=E6=A0=BC=E5=BC=8F=E7=9A=84=E5=9B=BE=E7=89=87\n=E5=A6=82=E6=9E=9C=E6=
=82=A8=E4=B8=8A=E4=BC=A0=E9=99=84=E4=BB=B6=EF=BC=8C=E8=AF=B7=E5=85=88=E5=8E=
=8B=E7=BC=A9=E5=86=8D=E4=B8=8A=E4=BC=A0");=0A=
      return false;=0A=
  }=0A=
=0A=
  multiple_upload_attachment_counter++;=0A=
  var div =3D attachment_template.evaluate({filename: ele.value}); =0A=
  var new_input =3D new Element("input", {type: "file", name: ele.name, =
id: ele.id, disabled: multiple_upload_attachment_counter >=3D max_size});=0A=
=0A=
  Event.observe(new_input, 'change', function() {=0A=
    addAttachmentDiv(new_input, max_size);=0A=
  });=0A=
  $('groups_upload_button').insert({before : div});=0A=
  ele.insert({after: new_input});=0A=
  ele.id =3D ele.id + multiple_upload_attachment_counter;=0A=
  ele.name =3D "attachments[][uploaded_data]";=0A=
  div =3D $('groups_upload_button').previous();=0A=
  div.down('.delete').observe('click', function(event) {=0A=
    removeAttachmentDiv(this);=0A=
  });=0A=
  div.appendChild(ele.hide());=0A=
}=0A=
=0A=
function removeAttachmentDiv(link) {=0A=
  multiple_upload_attachment_counter--;=0A=
  link.up('table').remove();=0A=
  $('attachment_upload').disabled =3D false;=0A=
}=0A=
=0A=
function multiple_upload_picture(ele, max_size, tags) {=0A=
  Event.observe(ele, 'change', function() {=0A=
    addPictureDiv(ele, max_size, tags);=0A=
  });=0A=
  if (multiple_upload_picture_counter >=3D max_size) ele.disabled =3D =
true;=0A=
}=0A=
=0A=
function addPictureDiv(ele, max_size, tags) {=0A=
  if (!$A(['jpg','jpeg','bmp','png','gif']).any(function(extName){return =
new RegExp('\\.'+extName+'$','i').test(ele.value);})){=0A=
    =
alert("=E6=82=A8=E4=B8=8A=E4=BC=A0=E7=9A=84=E5=9B=BE=E7=89=87=E6=A0=BC=E5=
=BC=8F=E4=B8=8D=E6=94=AF=E6=8C=81=EF=BC=8C=E8=AF=B7=E6=82=A8=E4=B8=8A=E4=BC=
=A0JPG=E3=80=81BMP=E3=80=81PNG=E6=88=96=E8=80=85GIF=E6=A0=BC=E5=BC=8F=E7=9A=
=84=E5=9B=BE=E7=89=87");=0A=
    return false;=0A=
  }=0A=
  =0A=
  multiple_upload_picture_counter++;=0A=
  //fix for opera=0A=
  var file_name =3D ele.value;=0A=
  try {file_name =3D ele.value.match(/(.*)[\/\\]([^\/\\]+)\.\w+$/)[2];} =
catch(e) {} =0A=
  var tag_select =3D "";=0A=
  if(tags.length > 0) {=0A=
    var tag_select =3D "<select =
onchange=3D'Element.previous($(this)).value =3D this.value;'><option =
value=3D''>=E9=80=89=E6=8B=A9=E5=B7=B2=E6=9C=89=E6=A0=87=E7=AD=BE</option=
>";=0A=
    for (var i =3D 0; i < tags.length; i++)=0A=
      tag_select +=3D "<option value=3D'" + tags[i] + "'>" + tags[i] + =
"</option>";=0A=
    tag_select +=3D "</select>";=0A=
  }=0A=
  var div =3D new Element("div").update("<ul><li>=E6=96=87=E4=BB=B6: " + =
ele.value + " <a href=3D'#' onclick=3D'removePictureDiv(this, \"" + =
ele.id + "\");return =
false;'>=E5=88=A0=E9=99=A4</a></li><li>=E5=90=8D=E7=A7=B0: <input =
type=3D'text' name=3D'pictures[][name]' value=3D'" + file_name + "' =
size=3D'50' class=3D'text'/></li><li>=E6=8F=8F=E8=BF=B0: <textarea =
name=3D'pictures[][description]' =
style=3D'width:400px;height:80px;'></textarea></li></ul>");=0A=
  var new_input =3D new Element("input", {type: "file", name: ele.name, =
id: ele.id, disabled: multiple_upload_picture_counter >=3D max_size});=0A=
  =0A=
  Event.observe(new_input, 'change', function() {=0A=
    addPictureDiv(new_input, max_size, tags);=0A=
  });=0A=
  ele.insert({after : div});=0A=
  div.insert({after : new_input});=0A=
  ele.id =3D ele.id + multiple_upload_picture_counter;=0A=
  ele.name =3D "pictures[][uploaded_data]";=0A=
  div.appendChild(ele.hide().remove());=0A=
}=0A=
=0A=
function removePictureDiv(link, eleId) {=0A=
  multiple_upload_picture_counter--;=0A=
  link.parentNode.parentNode.parentNode.remove();=0A=
  $(eleId).disabled =3D false;=0A=
}=0A=
=0A=
function move_messages(dest) {=0A=
  $('dest').value =3D dest;=0A=
  $('messages_form').submit();=0A=
}=0A=
=0A=
function digg(type, id, bury) {=0A=
    var url =3D '/' + type + (bury ? '/bury' : '/digg');=0A=
    var small_button =3D !!$('d' + id);=0A=
    if(small_button) $('d'+id).innerHTML =3D "<h3><img =
src=3D'/images/spinner.gif'/><br/><span>...</span></h3>";=0A=
=0A=
    if($('digg_bottom')){=0A=
      $$('#digg_bottom div').each(function(div){div.innerHTML=3D"<img =
src=3D'/images/spinner.gif'/>";});=0A=
      new =
Ajax.Request(url,{asynchronous:true,evalScripts:true,parameters:{"id":id,=
 "bottom":true, small_button:small_button}});=0A=
    }else{=0A=
      new =
Ajax.Request(url,{asynchronous:true,evalScripts:true,parameters:{"id":id,=
 small_button:small_button}});=0A=
    }=0A=
}=0A=
=0A=
function bury_blog(blog_id) {=0A=
    $('b' + blog_id).innerHTML =3D "<h3><img =
src=3D'/images/spinner.gif'/><br/><span>...</span></h3>";=0A=
    if($('digg_bottom') !=3D undefined) {=0A=
        $$('#digg_bottom div').each(function(div){div.innerHTML=3D"<img =
src=3D'/images/spinner.gif'/>";});=0A=
        new =
Ajax.Request('/blogs/bury',{asynchronous:true,evalScripts:true,parameters=
:{"id":blog_id, "bottom":true}});=0A=
    }else{=0A=
        new =
Ajax.Request('/blogs/bury',{asynchronous:true,evalScripts:true,parameters=
:{"id":blog_id}});=0A=
    }=0A=
}=0A=
=0A=
function fix_image_size(images, maxW) {=0A=
  if(images.length > 0) {=0A=
    Event.observe(window,'load',function() {=0A=
      images.each(function(img) {=0A=
        var w =3D img.width;=0A=
        var h =3D img.height;=0A=
        if (w > maxW) {=0A=
          var f =3D 1-((w - maxW) / w);=0A=
          img.title =3D =
"=E7=82=B9=E5=87=BB=E6=9F=A5=E7=9C=8B=E5=8E=9F=E5=A7=8B=E5=A4=A7=E5=B0=8F=
=E5=9B=BE=E7=89=87";=0A=
          img.addClassName("magplus");=0A=
          img.onclick =3D function() {window.open(this.src);};=0A=
          img.width =3D w * f;=0A=
          img.height =3D h * f;=0A=
        }=0A=
      });=0A=
    });=0A=
  }=0A=
}=0A=
=0A=
function highlight_suggested_tags(tags) {=0A=
    if ($('suggested_tags_panel') !=3D=3D null) {=0A=
        $('suggested_tags_panel').select('a').each( function(el) {=0A=
            var exist_tag =3D tags.find(function(tag){=0A=
                return tag.match(new RegExp('^' + el.text + '$', 'i'));=0A=
            });=0A=
            if (exist_tag) {=0A=
                el.addClassName('added');=0A=
            } else {=0A=
                el.removeClassName('added');=0A=
            }=0A=
        });=0A=
    }=0A=
}=0A=
=0A=
function extract_tag_list(value) {=0A=
    var tags =3D value.trim().split(/,\s*|=EF=BC=8C\s*/).without('');=0A=
    highlight_suggested_tags(tags);=0A=
    tag_list =3D tags.map(function(tag) { =0A=
        return "<span>" + tag + "</span>";=0A=
    }).join('');=0A=
    if (!tag_list.empty()) {=0A=
        tag_list =3D '=E5=BD=93=E5=89=8D=E6=A0=87=E7=AD=BE=EF=BC=9A' + =
tag_list;=0A=
    }=0A=
    if ($("current_tags_panel") !=3D=3D null) {=0A=
        $("current_tags_panel").update(tag_list);=0A=
    }=0A=
}=0A=
=0A=
function observe_tag_list(id) {=0A=
    extract_tag_list($(id).value);=0A=
    new Form.Element.Observer(=0A=
        id,=0A=
        0.2,=0A=
        function(el, value) {=0A=
            extract_tag_list(value);=0A=
        }=0A=
    )=0A=
}=0A=
=0A=
function trigger_suggested_tag() {=0A=
  var tag_list_input =3D this.parentNode.previous("input");=0A=
  var current_value =3D tag_list_input.value.trim();=0A=
  if (this.hasClassName('added')) {=0A=
    var tag_regex =3D new RegExp('^' + this.text + '$', 'i')=0A=
    tag_list_input.value =3D =
current_value.split(/,\s*|=EF=BC=8C\s*/).findAll(function(tag){=0A=
      tag =3D tag.trim();=0A=
      if (tag !=3D=3D '' && !tag_regex.match(tag)) {=0A=
        return true;=0A=
      }=0A=
    }).join(', ');=0A=
    this.removeClassName('added');=0A=
  } else {=0A=
    if(current_value !=3D=3D "" && current_value[current_value.length-1] =
!=3D=3D ","){=0A=
      tag_list_input.value +=3D ", ";=0A=
    }=0A=
    tag_list_input.value +=3D this.innerHTML;=0A=
    this.addClassName('added');=0A=
  }=0A=
  Validation.validateElement($(tag_list_input));=0A=
}=0A=
=0A=
function check_category_list(checkboxes, category_list){=0A=
  checkboxes.each(function(element){=0A=
    element.checked =3D category_list.split(',').any(function(name){=0A=
      return name.trim().toLowerCase() =3D=3D this;=0A=
    }, element.value.toLowerCase());=0A=
  });=0A=
}=0A=
=0A=
document.observe("dom:loaded",function(){=0A=
    $$("div.quick_menu").each(function(ele) {=0A=
        Event.observe(ele.previous(), 'mouseover', function(e) {=0A=
            $$("div.quick_menu").invoke('hide');=0A=
            ele.style.left =3D ele.previous().positionedOffset()[0] + =
"px";=0A=
            ele.show();=0A=
        });=0A=
        Event.observe(ele.previous(), 'mouseout', function(e) {=0A=
            if(!Position.within(ele,Event.pointerX(e),Event.pointerY(e) =
+ 5))=0A=
                ele.hide();=0A=
        });=0A=
        Event.observe(ele, 'mouseout', function(e) {=0A=
            if(!Position.within(ele,Event.pointerX(e),Event.pointerY(e)))=0A=
                ele.hide();=0A=
        });=0A=
    });=0A=
    $$("div.nav_side > ul > li:not(.select)").each(function(ele) {=0A=
      Event.observe(ele, 'mouseover', function(e) {=0A=
        Event.findElement(e, 'LI').addClassName('select');=0A=
      });=0A=
      Event.observe(ele, 'mouseout', function(e) {=0A=
        Event.findElement(e, 'LI').removeClassName('select');=0A=
      });=0A=
    });=0A=
=0A=
    $$('#blog_category_checkbox =
input[type=3Dcheckbox]').each(function(element){=0A=
      element.observe('change', function(ev){=0A=
        var current_value =3D $('blog_category_list').value.trim();=0A=
        if(this.checked) {=0A=
          if(current_value =3D=3D '' || =
current_value[current_value.length -1] =3D=3D ',')=0A=
            $('blog_category_list').value +=3D this.value;=0A=
          else=0A=
            $('blog_category_list').value +=3D (','+this.value);=0A=
        } else {=0A=
          $('blog_category_list').value =3D =
current_value.split(',').reject(function(name){=0A=
            return name.trim() =3D=3D this;=0A=
          }, this.value).join(',');=0A=
        }=0A=
      });=0A=
    });=0A=
=0A=
});=0A=
=0A=
//IE6 background image cache fix=0A=
try {document.execCommand('BackgroundImageCache', false, true);} =
catch(e) {}=0A=
=0A=
=0A=
=0A=
//resume=0A=
=0A=
function add_work_experience(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $(button).up().insert({before: =
content.replace(/new_work_experiences/g, new_id)});=0A=
}=0A=
=0A=
function add_project_experience(link, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $(link).up().insert({before: =
content.replace(/new_project_experiences/g, new_id)});=0A=
}=0A=
=0A=
function add_education(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $$('.editing .educations')[0].insert({bottom: =
content.replace(/new_educations/g, new_id)});=0A=
}=0A=
=0A=
function add_training(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $$('.editing .trainings')[0].insert({bottom: =
content.replace(/new_trainings/g, new_id)});=0A=
}=0A=
=0A=
function add_certificate(button, content){=0A=
  var new_id =3D new Date().getTime();=0A=
  $$('.editing .certificates')[0].insert({bottom: =
content.replace(/new_certificates/g, new_id)});=0A=
}=0A=
=0A=
function add_skill(button, content){=0A=
  $$('.editing .skills')[0].insert({bottom: content});=0A=
}=0A=
=0A=
function add_language(button, content){=0A=
  $$('.editing .languages')[0].insert({bottom: content});=0A=
}=0A=
=0A=
document.observe("dom:loaded",function(){=0A=
  $$('#my_resume .control .expand').each(function(el){=0A=
    el.hide();=0A=
  });=0A=
  document.observe('click', function(event){=0A=
=0A=
    if(el =3D event.findElement('#my_resume .control .expand')){=0A=
      el.up('h1').next('.view_con').show();=0A=
      el.previous('.contract').show();=0A=
      el.hide();=0A=
      event.stop();=0A=
    } else if(el =3D event.findElement('#my_resume .control .contract')){=0A=
      el.up('h1').next('.view_con').hide();=0A=
      el.next('.expand').show();=0A=
      el.hide();=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('#my_resume .control .edit')){=0A=
      if($('profile_invalid_flag') && =
!(/myresume\/edit$/.test(el['href']))){=0A=
        =
alert("=E4=B8=AA=E4=BA=BA=E8=B5=84=E6=96=99=E4=B8=8D=E5=AE=8C=E6=95=B4,=E8=
=AF=B7=E5=85=88=E5=AE=8C=E5=96=84=E4=B8=AA=E4=BA=BA=E8=B5=84=E6=96=99");=0A=
      }else{=0A=
        new Ajax.Request(el['href'], {=0A=
          method: 'get',=0A=
          onSuccess: function(res){=0A=
            el.up('.view').replace(res.responseText);=0A=
          }=0A=
        });=0A=
      }=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('.work_exp > .del_work a.del')){=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E5=B7=A5=
=E4=BD=9C=E7=BB=8F=E9=AA=8C=E5=90=97=EF=BC=9F")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('.work_exp').remove();=0A=
        } else {=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            onSuccess: function(res){=0A=
              el.up('.work_exp').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if(el =3D event.findElement('.project_exp > .del_project =
a.del')) {=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E9=A1=B9=
=E7=9B=AE=E7=BB=8F=E9=AA=8C=E5=90=97=EF=BC=9F")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('.project_exp').remove();=0A=
        } else {=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            onSuccess: function(res){=0A=
              el.up('.project_exp').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if(el =3D event.findElement('.edu_exp a.del')){=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E5=90=97=EF=BC=9F=
")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('.edu_exp').remove();=0A=
        } else {=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            onSuccess: function(res){=0A=
              el.up('.edu_exp').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('.skills a.del')){=0A=
      =
if(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E6=8A=80=
=E8=83=BD=E5=90=97=EF=BC=9F")){=0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('li').remove();=0A=
        } else {=0A=
          var form =3D el.up('form');=0A=
=0A=
          el.up('li').getElementsBySelector('.level =
input[type=3Dradio]').each(function(radio){=0A=
            radio['name'] =3D 'destroied';=0A=
          });=0A=
=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            parameters: form.serialize(),=0A=
            onSuccess: function(){=0A=
              el.up('li').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    } else if (el =3D event.findElement('.languages a.del')) {=0A=
      if =
(confirm("=E7=A1=AE=E5=AE=9A=E8=A6=81=E5=88=A0=E9=99=A4=E8=AF=A5=E8=AF=AD=
=E7=A7=8D=E5=90=97?")) { =0A=
        if(/\#$/.test(el['href'])){=0A=
          el.up('li').remove();=0A=
        }else{=0A=
          var form =3D el.up('form');=0A=
=0A=
          el.up('li').getElementsBySelector('.level =
select').each(function(select_elem){=0A=
            select_elem['name'] =3D 'destroied';=0A=
          });=0A=
=0A=
          new Ajax.Request(el['href'], {=0A=
            method: 'delete',=0A=
            parameters: form.serialize(),=0A=
            onSuccess: function(){=0A=
              el.up('li').remove();=0A=
            }=0A=
          });=0A=
        }=0A=
      }=0A=
      event.stop();=0A=
    }=0A=
=0A=
  });=0A=
=0A=
  var resume_submit_precess =3D function(event){=0A=
    if(form =3D event.findElement('#my_resume .editing form.remote')){=0A=
      form.request({=0A=
        onSuccess: function(res){=0A=
          var prev =3D form.up('.editing').previous();=0A=
          prev.insert({after: res.responseText});=0A=
          prev.next().down('.expand').hide();=0A=
          form.up('.editing').remove();=0A=
        }=0A=
      });=0A=
      event.stop();=0A=
    }=0A=
  };=0A=
  if(Prototype.Browser.IE){=0A=
    document.observe('focusin', function(event){=0A=
      var form =3D event.findElement("#my_resume form");=0A=
      if(form && !form.submit_bubbles_on_ie){=0A=
        form.submit_bubbles_on_ie =3D true;=0A=
        form.observe('submit', resume_submit_precess);=0A=
      }=0A=
    });=0A=
  }else{=0A=
    document.observe('submit', resume_submit_precess);=0A=
  }=0A=
=0A=
=0A=
=0A=
  var resume_change_process =3D function(event){=0A=
    if(select =3D event.findElement('#my_resume .skills .title =
.skill_option_one')){=0A=
      var two_elem =3D select.next();=0A=
      var skill_title =3D '';=0A=
      if('=E6=89=8B=E5=8A=A8=E6=B7=BB=E5=8A=A0' =3D=3D select['value']){=0A=
        two_elem.replace('<input class=3D"skill_option_two" =
name=3D"skill_option_two" style=3D"width:80px;" type=3D"text">');=0A=
      }else{=0A=
        if(two_elem.nodeName.toUpperCase() =3D=3D "SELECT"){=0A=
          two_elem.length =3D 0;=0A=
        }else{=0A=
          two_elem.replace(new Element('select', =
{'class':'skill_option_two', 'name': 'skill_option_two'}));=0A=
        }=0A=
        window.skill_options_two.get(select['value']).each(function(v){ =
select.next().appendChild(new Element('option', { 'value': v =
}).update(v)); });=0A=
        skill_title =3D window.skill_options_two.get(select['value'])[0];=0A=
      }=0A=
      =
select.up('.title').next('.level').getElementsBySelector('input').each(fu=
nction(radio){=0A=
        radio.checked =3D false;=0A=
        radio['name'] =3D 'resume[skills][' + skill_title + ']';=0A=
      });=0A=
    }else if(select =3D event.findElement('#my_resume .skills .title =
.skill_option_two')){=0A=
      =
select.up('.title').next('.level').getElementsBySelector('input').each(fu=
nction(radio){=0A=
        radio.checked =3D false;=0A=
        radio['name'] =3D 'resume[skills][' + select['value'] + ']';=0A=
      });=0A=
    }else if(select =3D event.findElement('#my_resume .languages .title =
select')){=0A=
      =
select.up('.title').next('.level').getElementsBySelector('select').each(f=
unction(select_elem){=0A=
        select_elem['name'] =3D 'resume[languages]['+ select['value'] =
+'][]';=0A=
      });=0A=
    }else if(select =3D (event.findElement('#my_resume .work_exp =
select.company_industry') || =
event.findElement('#company_industry_search'))){=0A=
      if(select['value'] =3D=3D '=E5=85=B6=E5=AE=83'){=0A=
         var elem_str =3D "<input type=3D'text' class=3D'input_1 =
required' style=3D'margin-left: 10px;' name=3D'" + select['name'] + "' =
/>"=0A=
         if(select['id'] =3D=3D 'company_industry_search'){elem_str =3D =
"<input type=3D'text' class=3D'text' style=3D'margin-left: 10px;' =
name=3D'" + select['name'] + "' />"}=0A=
         select.insert({'after': elem_str});=0A=
         select['name'] =3D '';=0A=
      }else{=0A=
        var ci_text_elem =3D select.next('input');=0A=
        if(ci_text_elem){=0A=
          select['name'] =3D ci_text_elem['name'];=0A=
          select.next('input').remove();=0A=
        }=0A=
      }=0A=
    }else if(select =3D event.findElement('#skills_search')){=0A=
      if(select['value'] =3D=3D '=E5=85=B6=E5=AE=83'){=0A=
        select.insert({'after': "<input type=3D'text' class=3D'text' =
style=3D'margin-left:10px;' name=3D'"+ select['name'] +"' />"})=0A=
        select['name'] =3D '';=0A=
      }else{=0A=
        var ci_text_elem =3D select.next('input');=0A=
        if(ci_text_elem){=0A=
          select['name'] =3D ci_text_elem['name'];=0A=
          select.next('input').remove();=0A=
        }=0A=
      }=0A=
    }=0A=
  };=0A=
  if(Prototype.Browser.IE){=0A=
    document.observe('focusin', function(event){=0A=
      var select =3D event.findElement("#my_resume select");=0A=
      if(select && !select.change_bubbles_on_ie){=0A=
        select.change_bubbles_on_ie =3D true;=0A=
        select.observe('change', resume_change_process);=0A=
      }=0A=
    });=0A=
  }else{=0A=
    document.observe('change', resume_change_process);=0A=
  }=0A=
});=0A=
=0A=
function add_vote_option(btn, html_str){=0A=
  var new_id =3D new Date().getTime();=0A=
  $(btn).up().previous().insert({bottom: =
html_str.replace(/new_vote_option_id/g, new_id)});=0A=
}=0A=
function del_vote_option(vote_option){=0A=
  vote_option =3D $(vote_option);=0A=
  var tr1 =3D vote_option.up(1);=0A=
  var tr2 =3D tr1.next();=0A=
  var vote_option_url =3D vote_option.getAttribute('url');=0A=
  if(vote_option_url){=0A=
    =
if(confirm('=E6=85=8E=E7=94=A8,=E5=A6=82=E6=8A=95=E7=A5=A8=E9=80=89=E9=A1=
=B9=E4=B8=8B=E6=9C=89=E5=BE=88=E5=A4=9A=E6=8A=95=E7=A5=A8,=E4=BC=9A=E5=88=
=A0=E9=99=A4=E5=85=B6=E6=89=80=E6=9C=89=E6=8A=95=E7=A5=A8,=E8=80=8C=E5=A2=
=9E=E5=8A=A0=E6=9C=8D=E5=8A=A1=E5=99=A8=E5=8E=8B=E5=8A=9B')){=0A=
    new Ajax.Request(vote_option_url, {=0A=
        method: 'delete',=0A=
        onSuccess: function(transport){ tr1.remove(); tr2.remove();}=0A=
        });=0A=
    }=0A=
  }else{=0A=
    tr1.remove();=0A=
    tr2.remove();=0A=
  }=0A=
}=0A=
/* JSON-P implementation for Prototype.js somewhat by Dan Dean =
(http://www.dandean.com)=0A=
 * =0A=
 * *HEAVILY* based on Tobie Langel's version: =
http://gist.github.com/145466.=0A=
 * Might as well just call this an iteration.=0A=
 * =0A=
 * This version introduces:=0A=
 * - Support for predefined callbacks (Necessary for OAuth signed =
requests, by @rboyce)=0A=
 * - Partial integration with Ajax.Responders (Thanks to @sr3d for the =
kick in this direction)=0A=
 * - Compatibility with Prototype 1.7 (Thanks to @soung3 for the bug =
report)=0A=
 * - Will not break if page lacks a <head> element=0A=
 *=0A=
 * See examples in README for usage=0A=
 *=0A=
 * VERSION 1.1.2=0A=
 *=0A=
 * new Ajax.JSONRequest(url, options);=0A=
 * - url (String): JSON-P endpoint url.=0A=
 * - options (Object): Configuration options for the request.=0A=
 */=0A=
Ajax.JSONRequest =3D Class.create(Ajax.Base, (function() {=0A=
  var id =3D 0, head =3D document.getElementsByTagName('head')[0] || =
document.body;=0A=
  return {=0A=
    initialize: function($super, url, options) {=0A=
      $super(options);=0A=
      this.options.url =3D url;=0A=
      this.options.callbackParamName =3D this.options.callbackParamName =
|| 'callback';=0A=
      this.options.timeout =3D this.options.timeout || 10; // Default =
timeout: 10 seconds=0A=
      this.options.invokeImmediately =3D =
(!Object.isUndefined(this.options.invokeImmediately)) ? =
this.options.invokeImmediately : true ;=0A=
      =0A=
      if (!Object.isUndefined(this.options.parameters) && =
Object.isString(this.options.parameters)) {=0A=
        this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
      }=0A=
      =0A=
      if (this.options.invokeImmediately) {=0A=
        this.request();=0A=
      }=0A=
    },=0A=
    =0A=
    /**=0A=
     *  Ajax.JSONRequest#_cleanup() -> undefined=0A=
     *  Cleans up after the request=0A=
     **/=0A=
    _cleanup: function() {=0A=
      if (this.timeout) {=0A=
        clearTimeout(this.timeout);=0A=
        this.timeout =3D null;=0A=
      }=0A=
      if (this.transport && Object.isElement(this.transport)) {=0A=
        this.transport.remove();=0A=
        this.transport =3D null;=0A=
      }=0A=
    },=0A=
  =0A=
    /**=0A=
     *  Ajax.JSONRequest#request() -> undefined=0A=
     *  Invokes the JSON-P request lifecycle=0A=
     **/=0A=
    request: function() {=0A=
      =0A=
      // Define local vars=0A=
      var response =3D new Ajax.JSONResponse(this);=0A=
      var key =3D this.options.callbackParamName,=0A=
        name =3D '_prototypeJSONPCallback_' + (id++),=0A=
        complete =3D function() {=0A=
          if (Object.isFunction(this.options.onComplete)) {=0A=
            this.options.onComplete.call(this, response);=0A=
          }=0A=
          Ajax.Responders.dispatch('onComplete', this, response);=0A=
        }.bind(this);=0A=
      =0A=
      // If the callback parameter is already defined, use that=0A=
      if (this.options.parameters[key] !=3D=3D undefined) {=0A=
        name =3D this.options.parameters[key];=0A=
      }=0A=
      // Otherwise, add callback as a parameter=0A=
      else {=0A=
        this.options.parameters[key] =3D name;=0A=
      }=0A=
      =0A=
      // Build request URL=0A=
      this.options.parameters[key] =3D name;=0A=
      var url =3D this.options.url + ((this.options.url.include('?') ? =
'&' : '?') + Object.toQueryString(this.options.parameters));=0A=
      =0A=
      // Define callback function=0A=
      window[name] =3D function(json) {=0A=
        this._cleanup(); // Garbage collection=0A=
        window[name] =3D undefined;=0A=
=0A=
        response.status =3D 200;=0A=
        response.statusText =3D "OK";=0A=
        response.setResponseContent(json);=0A=
=0A=
        if (Object.isFunction(this.options.onSuccess)) {=0A=
          this.options.onSuccess.call(this, response);=0A=
        }=0A=
        Ajax.Responders.dispatch('onSuccess', this, response);=0A=
=0A=
        complete();=0A=
=0A=
      }.bind(this);=0A=
      =0A=
      this.transport =3D new Element('script', {type: 'text/javascript', =
src: url});=0A=
      =0A=
      if (Object.isFunction(this.options.onCreate)) {=0A=
        this.options.onCreate.call(this, response);=0A=
      }=0A=
      Ajax.Responders.dispatch('onCreate', this);=0A=
      =0A=
      head.appendChild(this.transport);=0A=
=0A=
      this.timeout =3D setTimeout(function() {=0A=
        this._cleanup();=0A=
        window[name] =3D Prototype.emptyFunction;=0A=
        if (Object.isFunction(this.options.onFailure)) {=0A=
          response.status =3D 504;=0A=
          response.statusText =3D "Gateway Timeout";=0A=
          this.options.onFailure.call(this, response);=0A=
        }=0A=
        complete();=0A=
      }.bind(this), this.options.timeout * 1000);=0A=
    },=0A=
    toString: function() {return "[object Ajax.JSONRequest]";}=0A=
  };=0A=
})());=0A=
=0A=
Ajax.JSONResponse =3D Class.create({=0A=
  initialize: function(request) {=0A=
    this.request =3D request;=0A=
  },=0A=
  request: undefined,=0A=
  status: 0,=0A=
  statusText: '',=0A=
  responseJSON: undefined,=0A=
  responseText: undefined,=0A=
  setResponseContent: function(json) {=0A=
    this.responseJSON =3D json;=0A=
    this.responseText =3D Object.toJSON(json);=0A=
  },=0A=
  getTransport: function() {=0A=
    if (this.request) return this.request.transport;=0A=
  },=0A=
  toString: function() {return "[object Ajax.JSONResponse]";}=0A=
});document.observe("dom:loaded", function() {=0A=
  (function(){=0A=
    function is_ie6(){=0A=
      return ((window.XMLHttpRequest =3D=3D undefined) && (ActiveXObject =
!=3D undefined));=0A=
    }=0A=
=0A=
    var notifications;=0A=
    var unread_count =3D 0;=0A=
    var notifications_count =3D $('notifications_count');=0A=
    var notifications_menu =3D $('notifications_menu');=0A=
    var notifications_summary, notifications_detail;=0A=
=0A=
    var Render =3D {=0A=
      summary_names : function(names) {=0A=
        if (names.length > 3) {=0A=
          return new =
Template('#{names}=E5=92=8C=E5=8F=A6=E5=A4=96#{other}=E4=BA=BA').evaluate=
({=0A=
            'names' : names.clone().splice(0,3).join('=EF=BC=8C'), =
'other' : names.length - 3=0A=
          });=0A=
        } else {=0A=
          return names.join('=EF=BC=8C');=0A=
        }=0A=
      },=0A=
=0A=
      template_blog_comment : function(notification) {=0A=
        this.render_comments_common_template(notification, 'blog', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E7=9A=84=E5=8D=9A=E5=AE=A2=E6=96=87=
=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_blog_comment_other : function(notification) {=0A=
        this.render_comments_common_template(notification, 'blog', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E5=9B=9E=E5=A4=8D=E8=BF=87=E7=9A=84=
=E5=8D=9A=E5=AE=A2=E6=96=87=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_topic_post : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E7=9A=84=E8=AE=BA=E5=9D=9B=E4=B8=BB=
=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_topic_post_other : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E5=9B=9E=E5=A4=8D=E8=BF=87=E7=9A=84=
=E8=AE=BA=E5=9D=9B=E4=B8=BB=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_group_topic_post : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E7=9A=84=E7=BE=A4=E7=BB=84=E4=B8=BB=
=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_group_topic_post_other : function(notification) {=0A=
        this.render_comments_common_template(notification, 'topic', =
'=E5=9B=9E=E5=A4=8D=E4=BA=86=E6=82=A8=E5=9B=9E=E5=A4=8D=E8=BF=87=E7=9A=84=
=E7=BE=A4=E7=BB=84=E4=B8=BB=E9=A2=98', 'posts');=0A=
      },=0A=
=0A=
      template_news_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'news', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E8=B5=84=E8=AE=AF=E6=96=87=
=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_news_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'news', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E8=B5=84=E8=AE=AF=E6=96=87=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_essence_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'essence', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E7=B2=BE=E5=8D=8E=E6=96=87=
=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_essence_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'essence', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E7=B2=BE=E5=8D=8E=E6=96=87=E7=AB=A0');=0A=
      },=0A=
=0A=
      template_problem_solution: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=9B=9E=E7=AD=94=E4=BA=86=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98', =
'solutions');=0A=
      },=0A=
=0A=
      template_problem_solution_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=9B=9E=E7=AD=94=E4=BA=86=E6=82=A8=E5=9B=9E=E7=AD=94=E8=BF=87=E7=9A=84=
=E9=97=AE=E9=A2=98', 'solutions');=0A=
      },=0A=
=0A=
      template_problem_solution_follow: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=9B=9E=E7=AD=94=E4=BA=86=E6=82=A8=E5=85=B3=E6=B3=A8=E7=9A=84=E9=97=AE=
=E9=A2=98', 'solutions');=0A=
      },=0A=
=0A=
      template_problem_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98', =
'comments');=0A=
      },=0A=
=0A=
      template_problem_comment_follow: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E5=85=B3=E6=B3=A8=E7=9A=84=E9=97=AE=
=E9=A2=98', 'comments');=0A=
      },=0A=
=0A=
      template_problem_follow: function(notification) {=0A=
        this.render_comments_common_template(notification, 'problem', =
'=E5=85=B3=E6=B3=A8=E4=BA=86=E6=82=A8=E7=9A=84=E9=97=AE=E9=A2=98', =
'follows');=0A=
      },=0A=
=0A=
      template_solution_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'solution', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E5=9B=9E=E7=AD=94', =
'comments');=0A=
      },=0A=
=0A=
      template_event_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'event', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E6=B4=BB=E5=8A=A8', =
'comments');=0A=
      },=0A=
=0A=
      template_event_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'event', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E6=B4=BB=E5=8A=A8', 'comments');=0A=
      },=0A=
=0A=
      template_event_comment_member: function(notification) {=0A=
        this.render_comments_common_template(notification, 'event', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E5=8F=82=E4=B8=8E=E7=9A=84=E6=B4=BB=
=E5=8A=A8', 'comments');=0A=
      },=0A=
=0A=
      template_page_comment: function(notification) {=0A=
        this.render_comments_common_template(notification, 'page', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E7=9A=84=E7=9F=A5=E8=AF=86=E5=BA=93=
', 'comments');=0A=
      },=0A=
=0A=
      template_page_comment_other: function(notification) {=0A=
        this.render_comments_common_template(notification, 'page', =
'=E8=AF=84=E8=AE=BA=E4=BA=86=E6=82=A8=E8=AF=84=E8=AE=BA=E8=BF=87=E7=9A=84=
=E7=9F=A5=E8=AF=86=E5=BA=93', 'comments');=0A=
      },=0A=
=0A=
      render_comments_common_template : function(notification, subject, =
title, comments) {=0A=
        comments =3D comments || 'comments';=0A=
        var names =3D notification[comments].map(function(comment) =
{return comment.user.name;}).uniq();=0A=
        var summary =3D this.summary_names(names) + title;=0A=
=0A=
        var link =3D new Template(' <span class=3D"subject_link"><a =
href=3D"#{url}" target=3D"_blank">#{title}</a></span>').evaluate({=0A=
          'summary' : summary, 'url' : notification[subject].url, =
'title' : notification[subject].title=0A=
        });=0A=
        var detail_items =3D new Element('div', {'class' : =
'detail_items'});=0A=
        notification[comments].each(function(comment, index) {=0A=
          if (index > 2) {=0A=
            var template =3D new Template('<div =
class=3D"notification_detail_item clearfix" =
style=3D"display:none;"><span class=3D"left"><a href=3D"#{user_url}" =
target=3D"_blank">#{user_name}</a>=EF=BC=9A#{body} </span><span =
class=3D"time">#{time}</span></div>')=0A=
          } else {=0A=
            var template =3D new Template('<div =
class=3D"notification_detail_item clearfix"><span class=3D"left"><a =
href=3D"#{user_url}" =
target=3D"_blank">#{user_name}</a>=EF=BC=9A#{body}</span> <span =
class=3D"time">#{time}</span></div>')=0A=
          }=0A=
          detail_items.insert(template.evaluate({=0A=
            user_url : comment.user.url, user_name : comment.user.name, =
body : comment.body, time : comment.created_at=0A=
          }));=0A=
          if (comment.url) {=0A=
            var comment_link =3D ' <a target=3D"_blank" href=3D"' + =
comment.url + '">=E6=9F=A5=E7=9C=8B</a>';=0A=
            detail_items.select(":last-child =
.left")[0].insert(comment_link);=0A=
          }=0A=
          if (index =3D=3D=3D 2 && notification[comments].length > 3) {=0A=
            var actions =3D new Element('div', {'class' : =
'notification_detail_item clearfix'});=0A=
            var show_all =3D new Element('a', {'class': =
'show_all'}).update('=E6=9F=A5=E7=9C=8B=E5=8F=A6=E5=A4=96'+ =
(notification[comments].length - 3) + '=E6=9D=A1' );=0A=
            show_all.observe('click', function(ev) {=0A=
              this.up().siblings().each(Element.show);=0A=
              this.up().hide();=0A=
            });=0A=
            actions.insert(show_all);=0A=
            detail_items.insert(actions);=0A=
          }=0A=
        });=0A=
=0A=
        this.render_common_template(notification, {summary : summary, =
detail_title : summary + link, detail_items : detail_items});=0A=
      },=0A=
=0A=
      template_subscription: function(notification) {=0A=
        var names =3D notification.subscribers.map(function(subscriber) =
{return subscriber.name;}).uniq();=0A=
        var summary =3D new =
Template('#{names}=E5=85=B3=E6=B3=A8=E4=BA=86=E6=82=A8').evaluate({=0A=
          names : this.summary_names(names)=0A=
        });=0A=
=0A=
        var detail_items =3D new Element('div', {'class' : =
'detail_items'});=0A=
        notification.subscribers.each(function(subscriber){=0A=
          detail_items.insert(new Template('<div =
class=3D"notification_detail_item clearfix"><div class=3D"logo"><a =
href=3D"#{user_url}" target=3D"_blank"><img src=3D"#{logo_path}" =
/></a></div><a href=3D"#{user_url}" =
target=3D"_blank">#{user_name}</a></div>').evaluate({=0A=
            user_url : subscriber.url, user_name : subscriber.name, =
logo_path : subscriber.logo_path=0A=
          }));=0A=
        });=0A=
        this.render_common_template(notification, {summary : summary, =
detail_title : summary, detail_items : detail_items});=0A=
      },=0A=
=0A=
      template_common: function(notification) {=0A=
        this.render_common_template(notification, {summary : =
notification.title,=0A=
          detail_title : notification.title, detail_content : =
notification.detail,=0A=
          detail_notice : notification.notice});=0A=
      },=0A=
=0A=
      render_common_template: function(notification, params){=0A=
        var summary =3D new Element('div', {id: 'notification_summary_' =
+ notification.id, 'class' : "notification_summary clearfix"});=0A=
        var summary_title =3D new Element('div', {'class' : =
'left'}).update(params.summary);=0A=
        var time =3D '<span class=3D"time">' + notification.updated_at + =
'</span>';=0A=
        if (!notification.read) {=0A=
          summary.addClassName("unread");=0A=
        }=0A=
        summary.update(summary_title).insert(time);=0A=
        notifications_summary.insert(summary);=0A=
=0A=
        var detail =3D new Element('div', {id : 'notification_' + =
notification.id, 'class' : 'notification_detail clearfix'});=0A=
        detail.update('<div class=3D"notification_detail_title =
clearfix"></div><div class=3D"notification_detail_content =
clearfix"></div>').hide();=0A=
        var detail_title =3D new Element('div', {'class' : =
'left'}).update(params.detail_title);=0A=
        =
detail.down('.notification_detail_title').insert(detail_title).insert(tim=
e);=0A=
        var content =3D detail.down('.notification_detail_content');=0A=
        if (params.detail_content) {=0A=
          content.insert(new Element('div', {'class' : =
'system_message'}).insert(params.detail_content));=0A=
        }=0A=
        if (params.detail_items) {content.insert(params.detail_items);}=0A=
        if (params.detail_notice) {=0A=
          var notice =3D new Element('div', {'class' : =
'notification_detail_notice clearfix'}).update(params.detail_notice);=0A=
          detail.insert({bottom : notice});=0A=
        }=0A=
        notifications_detail.insert(detail);=0A=
=0A=
        summary.observe('click', function(ev) {=0A=
          if (notifications_summary.down('.current')) {=0A=
            =
notifications_summary.down('.current').removeClassName('current');=0A=
          }=0A=
          this.addClassName('current');=0A=
          summary_to_detail();=0A=
        });=0A=
      }=0A=
    }=0A=
=0A=
    function refresh_paginate_button() {=0A=
      var current =3D notifications_detail.down('.current')=0A=
      if (current.next('.notification_detail')) {=0A=
        $('next_button').removeClassName('disable');=0A=
      } else {=0A=
        $('next_button').addClassName('disable');=0A=
      }=0A=
      if (current.previous('.notification_detail')) {=0A=
        $('prev_button').removeClassName('disable');=0A=
      } else {=0A=
        $('prev_button').addClassName('disable');=0A=
      }=0A=
    }=0A=
=0A=
    var change_page_effect_running =3D false;=0A=
    function change_page_effect(from, to, reverse) {=0A=
      var topOffset =3D from.positionedOffset()[1] + 'px';=0A=
      var from_status, to_status;=0A=
      change_page_effect_running =3D true;=0A=
      function clean_style(effect){=0A=
        if (effect.element.id =3D=3D=3D from.id) {=0A=
          from_status =3D true;=0A=
        } else {=0A=
          to_status =3D true;=0A=
        }=0A=
        if (from_status && to_status) {=0A=
          from.writeAttribute('style', 'display:none');=0A=
          to.writeAttribute('style', '');=0A=
          change_page_effect_running =3D false;=0A=
          if (!is_ie6() && notifications_detail.visible()) {=0A=
            var link =3D =
notifications_detail.down('.current').select('a').first();=0A=
            if (link) {link.focus();}=0A=
          }=0A=
        }=0A=
      }=0A=
      var width =3D notifications_menu.getWidth();=0A=
      var widthPx =3D width + 'px';=0A=
      if (reverse) {=0A=
        to.setStyle({position: 'absolute', left: '-' + widthPx, width: =
widthPx, top: topOffset}).show();=0A=
        Effect.multiple([from, to], Effect.Move, {speed: 0, x: width, =
duration: 0.15, afterFinish: clean_style});=0A=
      } else {=0A=
        to.setStyle({position: 'absolute', left: widthPx, width: =
widthPx, top: topOffset}).show();=0A=
        Effect.multiple([from, to], Effect.Move, {speed: 0, x: -width, =
duration: 0.15, afterFinish: clean_style});=0A=
      }=0A=
    }=0A=
=0A=
    function read_detail(detail) {=0A=
      $('notification_summary_' + =
detail.id.split('_').last()).removeClassName('unread');=0A=
    }=0A=
=0A=
    function change_detail_page(current, to, reverse) {=0A=
      current.removeClassName('current');=0A=
      to.addClassName('current');=0A=
      var id =3D to.id.split('_').last();=0A=
      notifications_summary.down('.current').removeClassName('current');=0A=
      notifications_summary.down('#notification_summary_' + =
id).addClassName('current');=0A=
      change_page_effect(current, to, reverse);=0A=
      read_detail(to);=0A=
      refresh_paginate_button();=0A=
    }=0A=
=0A=
    function next_detail() {=0A=
      var current =3D notifications_detail.down('.current');=0A=
      var next_page =3D current.next('.notification_detail');=0A=
      if (next_page) {=0A=
        change_detail_page(current, next_page);=0A=
      }=0A=
    }=0A=
=0A=
    function prev_detail() {=0A=
      var current =3D notifications_detail.down('.current');=0A=
      var prev_page =3D current.previous('.notification_detail');=0A=
      if (prev_page) {=0A=
        change_detail_page(current, prev_page, true);=0A=
      }=0A=
    }=0A=
=0A=
    function init_detail_paginate() {=0A=
      var paginate =3D new Element('span', {'class' : 'paginate'});=0A=
      var prev =3D new Element('a', {id : =
'prev_button'}).update('=E2=80=B9 =E4=B8=8A=E4=B8=80=E6=9D=A1');=0A=
      var next =3D new Element('a', {id : =
'next_button'}).update('=E4=B8=8B=E4=B8=80=E6=9D=A1 =E2=80=BA');=0A=
      next.observe('click', function(ev) {=0A=
        if (!this.hasClassName('disable')){=0A=
          next_detail();=0A=
        }=0A=
      });=0A=
      prev.observe('click', function(ev) {=0A=
        if (!this.hasClassName('disable')){=0A=
          prev_detail();=0A=
        }=0A=
      });=0A=
      paginate.insert(prev).insert('<span =
class=3D"separated">|</span>').insert(next);=0A=
      return paginate;=0A=
    }=0A=
=0A=
    function summary_to_detail() {=0A=
      var summary =3D notifications_summary.down('.current');=0A=
      var detail =3D notifications_detail.down('#notification_' + =
summary.id.split('_').last());=0A=
      var prev =3D notifications_detail.down('.current');=0A=
      if (prev) {=0A=
        prev.removeClassName('current').hide();=0A=
      }=0A=
      detail.addClassName('current').show();=0A=
      read_detail(detail);=0A=
      refresh_paginate_button();=0A=
      change_page_effect(notifications_summary, notifications_detail);=0A=
    }=0A=
=0A=
    function hotkey_left() {=0A=
      if (notifications_detail.visible()) {=0A=
        if =
(notifications_detail.down('.current').previous('.notification_detail')) =
{=0A=
          prev_detail();=0A=
        } else {=0A=
          change_page_effect(notifications_detail, =
notifications_summary, true);=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_right() {=0A=
      if (notifications_detail.visible()) {=0A=
        next_detail();=0A=
      } else {=0A=
        if (!notifications_summary.down('.current')) {=0A=
          =
notifications_summary.down('.notification_summary').addClassName('current=
');=0A=
        }=0A=
        summary_to_detail();=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_up() {=0A=
      if (notifications_summary.visible()) {=0A=
        var current_summary =3D notifications_summary.down('.current');=0A=
        if (current_summary) {=0A=
          if (current_summary.previous('.notification_summary')) {=0A=
            current_summary.removeClassName('current');=0A=
            =
current_summary.previous('.notification_summary').addClassName('current')=
;=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_down() {=0A=
      if (notifications_summary.visible()) {=0A=
        var current_summary =3D notifications_summary.down('.current');=0A=
        if (current_summary) {=0A=
          if (current_summary.next('.notification_summary')) {=0A=
            current_summary.removeClassName('current');=0A=
            =
current_summary.next('.notification_summary').addClassName('current');=0A=
          }=0A=
        } else {=0A=
          =
notifications_summary.down('.notification_summary').addClassName('current=
');=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_enter(event) {=0A=
      if (notifications_summary.visible() && =
notifications_summary.down('.current')) {=0A=
        summary_to_detail();=0A=
        event.stop();=0A=
      }=0A=
    }=0A=
=0A=
    function hotkey_backspace() {=0A=
      if (notifications_detail.visible()) {=0A=
        change_page_effect(notifications_detail, notifications_summary, =
true);=0A=
      }=0A=
    }=0A=
=0A=
    function init_notification_menu() {=0A=
      notifications_menu =3D new Element('div', {'id': =
'notifications_menu'});=0A=
      notifications_summary =3D new Element('div', {'id': =
'notifications_summary'});=0A=
      notifications_summary.update('<div class=3D"menu_title =
clearfix"><span class=3D"title">=E6=8F=90=E9=86=92</span><span =
class=3D"all"><a =
href=3D"http://my.iteye.com/notifications">=E6=9F=A5=E7=9C=8B=E6=89=80=E6=
=9C=89 =C2=BB</a></span></div>');=0A=
      notifications_menu.insert(notifications_summary);=0A=
=0A=
      notifications_detail =3D new Element('div', {'id': =
'notifications_detail'});=0A=
      var detail_menu_title =3D new Element('div', {'class' : =
'menu_title clearfix'});=0A=
      var return_button =3D new Element('span', {'class' : 'return =
left'}).update('=C2=AB =
=E8=BF=94=E5=9B=9E=E9=80=9A=E7=9F=A5=E5=88=97=E8=A1=A8');=0A=
      =
detail_menu_title.insert(return_button).insert(init_detail_paginate());=0A=
=0A=
      return_button.observe('click', function(ev) {=0A=
        change_page_effect(notifications_detail, notifications_summary, =
true);=0A=
      });=0A=
      notifications_detail.insert(detail_menu_title).hide();=0A=
      notifications_menu.insert(notifications_detail);=0A=
      $('user_nav').insert({after: notifications_menu});=0A=
=0A=
      $(document).observe('keydown', function(event) {=0A=
        if (notifications_menu.visible() && notifications.length > 0 && =
!change_page_effect_running){=0A=
          var keyCode =3D event.keyCode;=0A=
          if (keyCode =3D=3D Event.KEY_LEFT || keyCode =3D=3D 72 ) {=0A=
            hotkey_left();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_RIGHT || keyCode =3D=3D =
76) {=0A=
            hotkey_right();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_UP || keyCode =3D=3D 75) {=0A=
            hotkey_up();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_DOWN || keyCode =3D=3D 74) =
{=0A=
            hotkey_down();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_RETURN) {=0A=
            hotkey_enter(event);=0A=
          } else if (keyCode =3D=3D Event.KEY_BACKSPACE) {=0A=
            hotkey_backspace();=0A=
            event.stop();=0A=
          } else if (keyCode =3D=3D Event.KEY_ESC) {=0A=
            hide_notification_menu();=0A=
          }=0A=
        }=0A=
      });=0A=
=0A=
      $(document.body).observe('click', function(event) {=0A=
        if (notifications_menu.visible()) {=0A=
          var clicked =3D event.element();=0A=
          if (!(clicked =3D=3D=3D notifications_menu || =
clicked.up("#notifications_menu"))) {=0A=
            hide_notification_menu();=0A=
          }=0A=
        }=0A=
      });=0A=
=0A=
    }=0A=
=0A=
    function update_notifications_menu() {=0A=
      $$('#notifications_menu =
.notification_summary').each(Element.remove);=0A=
      $$('#notifications_menu =
.notification_detail').each(Element.remove);=0A=
=0A=
      if (notifications.length > 0) {=0A=
        notifications.each(function(notification) {=0A=
          if (notification) {=0A=
            if (Render['template_' + notification.type]) {=0A=
              Render['template_' + notification.type](notification);=0A=
            } else {=0A=
              Render['template_common'](notification);=0A=
            }=0A=
          };=0A=
        });=0A=
      } else {=0A=
        notifications_summary.insert('<div =
class=3D"notification_summary">=E5=BD=93=E5=89=8D=E6=B2=A1=E6=9C=89=E6=8F=
=90=E9=86=92=E4=BF=A1=E6=81=AF</div>');=0A=
      }=0A=
    }=0A=
=0A=
    function refresh_unread_count(count) {=0A=
      unread_count =3D count;=0A=
      notifications_count.update(unread_count);=0A=
      if (count > 0) {=0A=
        =
notifications_count.addClassName('new_notice').writeAttribute('title', =
'=E6=9C=89' + count + '=E6=9D=A1=E6=9C=AA=E8=AF=BB=E6=B6=88=E6=81=AF');=0A=
      } else {=0A=
        =
notifications_count.removeClassName('new_notice').writeAttribute('title',=
 '=E6=B2=A1=E6=9C=89=E6=9C=AA=E8=AF=BB=E6=B6=88=E6=81=AF');=0A=
      }=0A=
    }=0A=
=0A=
    function update_unread_count(pe) {=0A=
      new =
Ajax.JSONRequest('http://n.iteye.com/notifications/unread_count.json', {=0A=
        method: "get",=0A=
        onComplete: function(response) {=0A=
          var json_respone =3D response.responseJSON;=0A=
          refresh_unread_count(json_respone.unread_count);=0A=
        }=0A=
      });=0A=
    }=0A=
=0A=
    function update_notifications() {=0A=
      var loading =3D new Element('div', {id : =
'notifications_loading'}).update('=E8=BD=BD=E5=85=A5=E4=B8=AD...');=0A=
      notifications_menu.insert({top: loading});=0A=
      new Ajax.Request('/notifications.json', {=0A=
        method: "get",=0A=
        onComplete: function(response) {=0A=
          var json_respone =3D response.responseJSON;=0A=
          notifications =3D json_respone;=0A=
          update_notifications_menu();=0A=
          loading.remove();=0A=
          mark_as_read();=0A=
        }=0A=
      });=0A=
    }=0A=
=0A=
    function mark_as_read() {=0A=
      var unread_ids =3D notifications.map(function(notification){=0A=
        if (!notification.read) {=0A=
          return notification.id;=0A=
        }=0A=
      }).without(undefined);=0A=
      if (unread_ids.length > 0) {=0A=
        new Ajax.Request('/notifications/read.json?ids=3D' + =
unread_ids.join(','), {=0A=
          method: "put",=0A=
          onComplete: function(response) {=0A=
            notifications.each(function(notification){notification.read =
=3D true});=0A=
            refresh_unread_count(response.responseJSON.unread_count);=0A=
          }=0A=
        });=0A=
      }=0A=
    }=0A=
=0A=
    function show_notification_menu() {=0A=
      if (notifications_menu =3D=3D=3D null) {=0A=
        init_notification_menu();=0A=
      } else {=0A=
        notifications_summary.show();=0A=
      }=0A=
      if (unread_count > 0 || notifications =3D=3D=3D undefined) {=0A=
        update_notifications();=0A=
      }=0A=
      notifications_menu.show();=0A=
      notifications_count.addClassName('clicked');=0A=
    }=0A=
=0A=
    function hide_notification_menu() {=0A=
      notifications_summary.hide();=0A=
      notifications_detail.hide();=0A=
      notifications_menu.hide();=0A=
      notifications_count.removeClassName('clicked');=0A=
    }=0A=
=0A=
    function trigger_menu() {=0A=
      if (notifications_count.hasClassName('clicked')) {=0A=
        hide_notification_menu();=0A=
      } else {=0A=
        show_notification_menu();=0A=
      }=0A=
    }=0A=
=0A=
    if (notifications_count) {=0A=
      notifications_count.observe('click', function(event) {=0A=
        trigger_menu();=0A=
        event.stop();=0A=
      });=0A=
      $(document).observe('keydown', function(event){=0A=
        // alt + n=0A=
        if (event.keyCode =3D=3D 78 && event.altKey) {=0A=
          trigger_menu();=0A=
        }=0A=
      });=0A=
      update_unread_count();=0A=
      new PeriodicalExecuter(update_unread_count, 60);=0A=
    }=0A=
  })();=0A=
})=0A=
document.observe("dom:loaded", function() {(function() {=0A=
    var spinner_elem =3D new Element('img', {=0A=
      src: '/images/spinner.gif',=0A=
      'class': 'spinner'=0A=
    });=0A=
=0A=
    var AskPageAction =3D Class.create({=0A=
      initialize: function() {=0A=
        this.data =3D new Hash();=0A=
      },=0A=
      toggle_action: function(event, event_element) {=0A=
        this._event_element =3D event_element;=0A=
        if (this._check()) {=0A=
          this._clean();=0A=
          if (this._is_show) this._factory().show();=0A=
        }=0A=
        event.stop();=0A=
      },=0A=
      get_event_element_parent_id: function() {=0A=
        return this._event_element.readAttribute('data_parent_id');=0A=
      },=0A=
      set_status: function(status_str) {=0A=
        if (status_str =3D=3D 'showing') this.data.set('status', =
'showing');=0A=
        else this.data.set('status', undefined);=0A=
      },=0A=
      get_status: function() {=0A=
        return this.data.get('status');=0A=
      },=0A=
      set_dropdown_status: function(status_str) {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        this.data.set(parent_id + '_status', status_str);=0A=
        this.set_status(status_str)=0A=
      },=0A=
      set_dropdown_current: function(action_obj) {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        this.data.set(parent_id + '_current', action_obj);=0A=
      },=0A=
      get_dropdown_status: function() {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        return this.data.get(parent_id + '_status');=0A=
      },=0A=
      get_dropdown_current: function() {=0A=
        var parent_id =3D this.get_event_element_parent_id();=0A=
        return this.data.get(parent_id + '_current');=0A=
      },=0A=
      set_popup_status: function(status_str) {=0A=
        this.data.set('popup_status', status_str);=0A=
        this.set_status(status_str)=0A=
      },=0A=
      set_popup_current: function(action_obj) {=0A=
        this.data.set('popup_current', action_obj);=0A=
      },=0A=
      get_popup_status: function() {=0A=
        return this.data.get('popup_status');=0A=
      },=0A=
      get_popup_current: function() {=0A=
        return this.data.get('popup_current');=0A=
      },=0A=
      hide_current_popup: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        var popup_current;=0A=
        if (popup_current =3D this.get_popup_current()) =
popup_current.hide();=0A=
      },=0A=
      hide_current_dropdown: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        var dropdown_current;=0A=
        if (dropdown_current =3D this.get_dropdown_current()) =
dropdown_current.hide();=0A=
      },=0A=
      submit_comment: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        if (this._event_element.previous('.spinner')) return;=0A=
        var parent_id =3D this.get_event_element_parent_id;=0A=
        var form_elem =3D event_element.up('form');=0A=
        var comment_validate;=0A=
        if (!this.data.get(parent_id + '_comment_validate')) {=0A=
          comment_validate =3D new Validation(form_elem);=0A=
          this.data.set(parent_id + '_comment_validate');=0A=
        }=0A=
        if (!comment_validate.validate()) return;=0A=
=0A=
        var url =3D form_elem['action'];=0A=
        var right_spinner_elem =3D spinner_elem.clone();=0A=
        right_spinner_elem.style.float =3D 'right';=0A=
        this._event_element.insert({=0A=
          before: right_spinner_elem=0A=
        });=0A=
        new Ajax.Request(url, {=0A=
          method: 'post',=0A=
          parameters: form_elem.serialize(),=0A=
          onFailure:function(response){=0A=
            form_elem.insert({top:response.responseText})=0A=
            this._event_element.previous('.spinner').remove();=0A=
            Element.scrollTo(form_elem);=0A=
          }.bind(this),=0A=
          onSuccess: function(transport) {=0A=
            this._event_element.up(0).previous().value =3D '';=0A=
            this._event_element.up(1).insert({=0A=
              before: transport.responseText=0A=
            });=0A=
            =
this.get_dropdown_current().event_element().writeAttribute('data_comments=
_count', =
Number(this.get_dropdown_current().event_element().readAttribute('data_co=
mments_count')) + 1);=0A=
            this._event_element.previous('.spinner').remove();=0A=
          }.bind(this)=0A=
        });=0A=
      },=0A=
      destroy_comment: function(event_element) {=0A=
        this._event_element =3D event_element;=0A=
        if (this._event_element.previous('.spinner')) return;=0A=
=0A=
        var url =3D this._event_element.readAttribute('data_url');=0A=
        var right_spinner_elem =3D spinner_elem.clone();=0A=
        right_spinner_elem.style.float =3D 'right';=0A=
        this._event_element.insert({=0A=
          before: right_spinner_elem=0A=
        });=0A=
        new Ajax.Request(url, {=0A=
          method: 'delete',=0A=
          onSuccess: function(transport) {=0A=
            this._event_element.up(1).remove();=0A=
            =
this.get_dropdown_current().event_element().writeAttribute('data_comments=
_count', =
Number(this.get_dropdown_current().event_element().readAttribute('data_co=
mments_count')) - 1);=0A=
            this._event_element.previous('.spinner').remove();=0A=
          }.bind(this)=0A=
        });=0A=
      },=0A=
      show_problem_popup_notice: function(params) {=0A=
        this._action_type =3D 'popup';=0A=
        this._clean();=0A=
        var notice_action =3D new NoticeAction(this);=0A=
        notice_action.show(params);=0A=
      },=0A=
      =
//=E6=A3=80=E6=B5=8B=E5=BD=93=E5=89=8D=E6=98=AF=E5=90=A6=E6=9C=89=E5=B1=82=
=E5=9C=A8=E6=98=BE=E7=A4=BA=E4=B8=AD,=E4=BB=A5=E7=A1=AE=E5=AE=9A=E6=98=AF=
=E5=90=A6=E8=BF=90=E8=A1=8Cclean=E5=92=8Cshow=E4=BB=BB=E5=8A=A1=0A=
      =
//=E8=BF=94=E5=9B=9Efalse=E8=A1=A8=E7=A4=BA=E6=9C=89=E4=BB=BB=E5=8A=A1=E8=
=BF=9B=E8=A1=8C=E4=B8=AD,=E4=B8=8D=E6=B8=85=E7=90=86=E5=92=8C=E6=98=BE=E7=
=A4=BA=0A=
      =
//this._is_show=E8=A1=A8=E7=A4=BA=E6=98=AF=E5=90=A6=E6=98=BE=E7=A4=BA=E6=96=
=B0=E7=9A=84=E5=B1=82=0A=
      _check: function() {=0A=
        this._is_show =3D false;=0A=
        var action_type =3D =
this._event_element.readAttribute('data_action_type');=0A=
        this._action_type =3D action_type;=0A=
        if (this.get_status() =3D=3D 'showing') return false;=0A=
        switch (action_type) {=0A=
        case 'dropdown':=0A=
          var dropdown_status =3D this.get_dropdown_status();=0A=
          var dropdown_current =3D this.get_dropdown_current();=0A=
          if (dropdown_status =3D=3D undefined) { =
//=E5=BD=93=E5=89=8D=E6=B2=A1=E6=9C=89=E4=B8=8B=E6=8B=89=E5=B1=82=0A=
            this._is_show =3D true;=0A=
          } else if (dropdown_status =3D=3D 'showed' && =
dropdown_current.event_element() !=3D this._event_element) { =
//=E5=BD=93=E5=89=8D=E6=9C=89=E4=B8=8B=E6=8B=89=E5=B1=82,=E4=BD=86=E9=9C=80=
=E8=A6=81=E6=98=BE=E7=A4=BA=E6=96=B0=E7=9A=84=E4=B8=8B=E6=8B=89=E5=B1=82=0A=
            this._is_show =3D true;=0A=
          } else if (dropdown_status =3D=3D 'showing') { =
//=E6=9C=89=E4=BB=BB=E5=8A=A1=E8=BF=9B=E8=A1=8C=E4=B8=AD=0A=
            return false;=0A=
          }=0A=
          break;=0A=
        case 'popup':=0A=
          var popup_status =3D this.get_popup_status();=0A=
          var popup_current =3D this.get_popup_current();=0A=
          if (popup_status =3D=3D undefined) {=0A=
            this._is_show =3D true;=0A=
          } else if (popup_status =3D=3D 'showed' && =
popup_current.event_element() !=3D this._event_element) {=0A=
            this._is_show =3D true;=0A=
          } else if (popup_status =3D=3D 'showing') {=0A=
            return false;=0A=
          }=0A=
          break;=0A=
        default:=0A=
          return false;=0A=
        }=0A=
        return true;=0A=
      },=0A=
      _clean: function() {=0A=
        switch (this._action_type) {=0A=
        case 'dropdown':=0A=
          var dropdown_current =3D this.get_dropdown_current();=0A=
          if (dropdown_current) {=0A=
            dropdown_current.hide();=0A=
          }=0A=
          break;=0A=
        case 'popup':=0A=
          var popup_current =3D this.get_popup_current();=0A=
          if (popup_current) {=0A=
            popup_current.hide();=0A=
          }=0A=
          break;=0A=
        }=0A=
      },=0A=
      _factory: function() {=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        var action_obj;=0A=
        switch (action_sub_type) {=0A=
        case 'comment':=0A=
          action_obj =3D new CommentAction(this, this._event_element);=0A=
          break;=0A=
        case 'increment_score':=0A=
        case 'edit_tags':=0A=
        case 'replenish':=0A=
          action_obj =3D new CommonDropdownAction(this, =
this._event_element);=0A=
          break;=0A=
        case 'close':=0A=
        case 'destroy':=0A=
        case 'postpone':=0A=
        case 'solution_accept':=0A=
        case 'solution_destroy':=0A=
          action_obj =3D new ConfirmAction(this, this._event_element);=0A=
          break;=0A=
        }=0A=
        return action_obj;=0A=
      }=0A=
=0A=
    });=0A=
=0A=
    var PageAction =3D Class.create({=0A=
      initialize: function(ask_page_action, event_element) {=0A=
        this._ask_page_action =3D ask_page_action;=0A=
        this._event_element =3D event_element;=0A=
      },=0A=
      event_element: function() {=0A=
        return this._event_element;=0A=
      }=0A=
    });=0A=
=0A=
    var CommentAction =3D Class.create(PageAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_dropdown_status('showing');=0A=
        this._ask_page_action.set_dropdown_current(this);=0A=
        this._event_element.appendChild(spinner_elem);=0A=
        var url =3D this._event_element.readAttribute('data_url');=0A=
        new Ajax.Request(url, {=0A=
          method: 'get',=0A=
          onSuccess: function(transport) {=0A=
            this._event_element.up().addClassName('action_selected');=0A=
            this._event_element.up(2).addClassName('action_bg');=0A=
            var img_elem =3D this._event_element.down();=0A=
            this._event_element.update(img_elem);=0A=
            =
this._event_element.appendChild(document.createTextNode('=E6=94=B6=E8=B5=B7=
=E8=AF=84=E8=AE=BA'));=0A=
=0A=
            this._event_element.up(2).insert({=0A=
              after: transport.responseText=0A=
            });=0A=
            this._ask_page_action.set_dropdown_status('showed');=0A=
          }.bind(this)=0A=
        });=0A=
      },=0A=
      hide: function() {=0A=
        var img_elem =3D this._event_element.down();=0A=
        this._event_element.up().removeClassName('action_selected');=0A=
        this._event_element.up(2).removeClassName('action_bg');=0A=
        this._event_element.update(img_elem);=0A=
        var comments_count =3D =
this._event_element.readAttribute('data_comments_count');=0A=
        comments_count =3D Number(comments_count);=0A=
        var comments_count_text;=0A=
        if (comments_count > 0) comments_count_text =3D =
document.createTextNode(comments_count + '=E6=9D=A1=E8=AF=84=E8=AE=BA');=0A=
        else comments_count_text =3D =
document.createTextNode('=E6=B7=BB=E5=8A=A0=E8=AF=84=E8=AE=BA');=0A=
        this._event_element.appendChild(comments_count_text);=0A=
        this._event_element.up(2).next().remove();=0A=
        this._ask_page_action.set_dropdown_status(undefined);=0A=
        this._ask_page_action.set_dropdown_current(undefined);=0A=
      }=0A=
=0A=
    });=0A=
=0A=
    var CommonDropdownAction =3D Class.create(PageAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_dropdown_status('showing');=0A=
        this._ask_page_action.set_dropdown_current(this);=0A=
        this._event_element.up().addClassName('action_selected');=0A=
        this._event_element.up(2).addClassName('action_bg');=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        this._event_element.up(2).insert({=0A=
          after: window.html_codes.get(action_sub_type)=0A=
        });=0A=
        this._ask_page_action.set_dropdown_status('showed');=0A=
      },=0A=
      hide: function() {=0A=
        var img_elem =3D this._event_element.down();=0A=
        this._event_element.up().removeClassName('action_selected');=0A=
        this._event_element.up(2).removeClassName('action_bg');=0A=
        this._event_element.up(2).next().remove();=0A=
        this._ask_page_action.set_dropdown_status(undefined);=0A=
        this._ask_page_action.set_dropdown_current(undefined);=0A=
      }=0A=
    });=0A=
=0A=
    var PopupAction =3D Class.create(PageAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_popup_status('showing');=0A=
        this._ask_page_action.set_popup_current(this);=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        $(document.body).insert({=0A=
          bottom: window.html_codes.get(action_sub_type)=0A=
        });=0A=
        this._set_problem_popupbox_style();=0A=
        this._ask_page_action.set_popup_status('showed');=0A=
      },=0A=
      hide: function() {=0A=
        $('problem_popupbox').remove();=0A=
        this._ask_page_action.set_popup_status(undefined);=0A=
        this._ask_page_action.set_popup_current(undefined);=0A=
      },=0A=
      _set_problem_popupbox_style: function() {=0A=
        if (!$('problem_popupbox')) return;=0A=
        var viewport =3D document.viewport.getDimensions();=0A=
        $('problem_popupbox').setStyle({=0A=
          'position': 'fixed',=0A=
          'left': (viewport.width - =
$('problem_popupbox').getDimensions().width) / 2 + 'px',=0A=
          'top': (viewport.height - =
$('problem_popupbox').getDimensions().height) / 2 + 'px'=0A=
        });=0A=
        if (navigator.userAgent.indexOf("MSIE 6") > 0) { // IE6=0A=
          $('problem_popupbox').setStyle({=0A=
            'position': 'absolute',=0A=
            'top': document.documentElement.scrollTop + (viewport.height =
- $('problem_popupbox').getDimensions().height) / 2 + "px"=0A=
          });=0A=
        }=0A=
      }=0A=
    });=0A=
=0A=
    var ConfirmAction =3D Class.create(PopupAction, {=0A=
      initialize: function($super, ask_page_action, event_element) {=0A=
        $super(ask_page_action, event_element);=0A=
      },=0A=
      show: function() {=0A=
        this._ask_page_action.set_popup_status('showing');=0A=
        this._ask_page_action.set_popup_current(this);=0A=
        var action_sub_type =3D =
this._event_element.readAttribute('data_action_sub_type');=0A=
        var html_code =3D window.html_codes.get(action_sub_type);=0A=
        if (this._event_element.readAttribute('replace_url')) {=0A=
          html_code =3D html_code.replace('action_url', =
this._event_element.readAttribute('data_url'));=0A=
        }=0A=
        $(document.body).insert({=0A=
          bottom: html_code=0A=
        });=0A=
        this._set_problem_popupbox_style();=0A=
        this._ask_page_action.set_popup_status('showed');=0A=
      }=0A=
    });=0A=
=0A=
    var NoticeAction =3D Class.create(PopupAction, {=0A=
      initialize: function($super, ask_page_action) {=0A=
        $super(ask_page_action, null);=0A=
      },=0A=
      show: function(params) {=0A=
        this._ask_page_action.set_popup_status('showing');=0A=
        this._ask_page_action.set_popup_current(this);=0A=
        var html_code =3D window.html_codes.get('problem_popup_notice');=0A=
        var notice_template =3D new Template(html_code);=0A=
        var delay_number =3D params['delay_number'] || 0=0A=
        var delay_func =3D params['delay_func']=0A=
        if (delay_number > 0) {=0A=
          if(delay_func){=0A=
            delay_func.delay(delay_number);=0A=
          }else{=0A=
            this.delay_hide.bind(this).delay(delay_number);=0A=
            params['class_name'] =3D params['class_name'] + ' delay';=0A=
          }=0A=
        }=0A=
        $(document.body).insert({=0A=
          bottom: notice_template.evaluate(params)=0A=
        });=0A=
        this._set_problem_popupbox_style();=0A=
        this._ask_page_action.set_popup_status('showed');=0A=
      },=0A=
      delay_hide: function() {=0A=
        var problem_popupbox =3D $('problem_popupbox');=0A=
        if (problem_popupbox && =
problem_popupbox.className.include('delay')) {=0A=
          this.hide();=0A=
        }=0A=
      }=0A=
=0A=
    });=0A=
=0A=
    var ask_page_action =3D new AskPageAction();=0A=
    window.ask_page_action =3D ask_page_action;=0A=
=0A=
    if ($$('div.ask_action_handler').length > 0) {=0A=
      $(document.body).observe('click', function(event) {=0A=
        var event_elem;=0A=
        if (event_elem =3D event.findElement('a.ask_click_action')) {=0A=
          ask_page_action.toggle_action(event, event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input#close_popup_action')) {=0A=
          ask_page_action.hide_current_popup(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input.close_dropdown_action')) {=0A=
          ask_page_action.hide_current_dropdown(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input.submit_comment')) {=0A=
          ask_page_action.submit_comment(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('a.destroy_comment')) {=0A=
          ask_page_action.destroy_comment(event_elem);=0A=
        } else if (event_elem =3D =
event.findElement('input.after_show_spinner')) {=0A=
          event_elem.disabled =3D true;=0A=
          event_elem.insert({=0A=
            after: spinner_elem=0A=
          });=0A=
          event_elem.form.submit();=0A=
        } else if (event_elem =3D =
event.findElement('input.before_show_spinner')) {=0A=
          event_elem.disabled =3D true;=0A=
          var before_spinner_elem =3D spinner_elem.clone();=0A=
          before_spinner_elem.className =3D 'spinner_img';=0A=
          event_elem.insert({=0A=
            before: before_spinner_elem=0A=
          });=0A=
          event_elem.form.submit();=0A=
        }=0A=
      });=0A=
=0A=
      $(document).observe('keyup', function(event){=0A=
        var keyCode =3D event ? (event.which ? event.which : =
event.keyCode) : window.event.keyCode;=0A=
        var event_elem;=0A=
        if( (keyCode =3D=3D 27) && (event_elem =3D =
$('close_popup_action')) ){ // escape key only, no enter key =0A=
          ask_page_action.hide_current_popup(event_elem);=0A=
        }=0A=
      });=0A=
    }=0A=
  })();=0A=
});=0A=
=0A=
function sortSolutionsByTime(){=0A=
    title =3D $$("#solutions #num")[0];=0A=
    dls =3D $$("#solutions dl.for_sort");=0A=
    dls.sortBy(function(e){=0A=
        return parseInt(e.attributes["time"]["value"])=0A=
    })=0A=
    .each(function(elem){=0A=
        title.insert({after: elem})=0A=
    });=0A=
    $("sort_time_link").style.color =3D "black";=0A=
    $("sort_vote_link").style.color =3D "#069";=0A=
    return false;=0A=
}=0A=
=0A=
function sortSolutionsByVote(){=0A=
    title =3D $$("#solutions #num")[0];=0A=
    dls =3D $$("#solutions dl.for_sort");=0A=
    dls.sortBy(function(e){=0A=
        return parseInt(e.attributes["votes"]["value"])=0A=
    })=0A=
    .each(function(elem){=0A=
        title.insert({=0A=
            after: elem=0A=
        })=0A=
    });=0A=
    $("sort_vote_link").style.color =3D "black";=0A=
    $("sort_time_link").style.color =3D "#069";=0A=
    return false;=0A=
}=0A=
=0A=
function highlightNewAddContent(css_rules) {=0A=
  renameElements(css_rules, 'new-code');=0A=
  dp.SyntaxHighlighter.HighlightAll('new-code', true, true);=0A=
  renameElements(css_rules, 'code');=0A=
}=0A=
=0A=
function renameElements(css_rules, new_name) {=0A=
  $$(css_rules).each(function(element) {=0A=
    element.writeAttribute('name', new_name);=0A=
    console.log(element);=0A=
  });=0A=
}=0A=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1325907333

/**
 * Modified by quake, add new clipboard swf to support none IE browser =
and generic language highlight
 * Code Syntax Highlighter.
 * Version 1.5.1
 * Copyright (C) 2004-2007 Alex Gorbatchev.
 * http://www.dreamprojections.com/syntaxhighlighter/
 *=20
 * This library is free software; you can redistribute it and/or modify =
it under the terms of the GNU Lesser General=20
 * Public License as published by the Free Software Foundation; either =
version 2.1 of the License, or (at your option)=20
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but =
WITHOUT ANY WARRANTY; without even the implied=20
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See =
the GNU Lesser General Public License for more=20
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public =
License along with this library; if not, write to=20
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330, =
Boston, MA 02111-1307 USA=20
 */

//
// create namespaces
//
var dp =3D {
    sh :
    {
        Toolbar : {},
        Utils	: {},
        RegexLib: {},
        Brushes	: {},
        Version : '1.5.1'
    }
};

// make an alias
dp.SyntaxHighlighter =3D dp.sh;

//
// Toolbar functions
//

dp.sh.Toolbar.CopyToClipboard =3D function(sender)
{
    var n =3D sender;

    while(n !=3D null && n.className.indexOf('dp-highlighter') =3D=3D =
-1)
        n =3D n.parentNode;

    var highlighter =3D n.highlighter;

    var code =3D =
highlighter.originalCode.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replac=
e(/&amp;/g,'&');
    window.clipboardData.setData('text', code);
    =
alert('=E4=BB=A3=E7=A0=81=E5=B7=B2=E8=A2=AB=E5=A4=8D=E5=88=B6=E5=88=B0=E5=
=89=AA=E8=B4=B4=E6=9D=BF');
}

// creates a <div /> with all toolbar links
dp.sh.Toolbar.Create =3D function(highlighter)
{
    var div =3D document.createElement('DIV');
    div.className =3D 'tools';
    div.innerHTML =3D =
highlighter.language.capitalize()+'=E4=BB=A3=E7=A0=81';
    if(window.clipboardData) {
        div.innerHTML +=3D ' <a href=3D"#" =
onclick=3D"dp.sh.Toolbar.CopyToClipboard(this);return false;" =
title=3D"=E5=A4=8D=E5=88=B6=E4=BB=A3=E7=A0=81"><img =
src=3D"/images/icon_copy.gif" =
alt=3D"=E5=A4=8D=E5=88=B6=E4=BB=A3=E7=A0=81"/></a>';
    }else{
        var code =3D =
highlighter.originalCode.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replac=
e(/&amp;/g,'&');
        div.innerHTML +=3D ' <embed wmode=3D"transparent" =
src=3D"/javascripts/syntaxhighlighter/clipboard_new.swf" width=3D"14" =
height=3D"15" flashvars=3D"clipboard=3D'+encodeURIComponent(code)+'" =
quality=3D"high" allowScriptAccess=3D"always" =
type=3D"application/x-shockwave-flash" =
pluginspage=3D"http://www.macromedia.com/go/getflashplayer"/>';
    }
    return div;
}

//
// Common reusable regular expressions
//
dp.sh.RegexLib =3D {
    MultiLineCComments : new RegExp('/\\*[\\s\\S]*?\\*/', 'gm'),
    SingleLineCComments : new RegExp('//.*$', 'gm'),
    SingleLinePerlComments : new RegExp('#.*$', 'gm'),
    DoubleQuotedString : new =
RegExp('"(?:\\.|(\\\\\\")|[^\\""\\n])*"','g'),
    SingleQuotedString : new RegExp("'(?:\\.|(\\\\\\')|[^\\''\\n])*'", =
'g')
};

//
// Match object
//
dp.sh.Match =3D function(value, index, css)
{
    this.value =3D value;
    this.index =3D index;
    this.length =3D value.length;
    this.css =3D css;
}

//
// Highlighter object
//
dp.sh.Highlighter =3D function()
{
    this.noGutter =3D false;
    this.addControls =3D true;
    this.collapse =3D false;
    this.tabsToSpaces =3D true;
    this.wrapColumn =3D 80;
    this.showColumns =3D true;
}

// static callback for the match sorting
dp.sh.Highlighter.SortCallback =3D function(m1, m2)
{
    // sort matches by index first
    if(m1.index < m2.index)
        return -1;
    else if(m1.index > m2.index)
        return 1;
    else
    {
        // if index is the same, sort by length
        if(m1.length < m2.length)
            return -1;
        else if(m1.length > m2.length)
            return 1;
    }
    return 0;
}

dp.sh.Highlighter.prototype.CreateElement =3D function(name)
{
    var result =3D document.createElement(name);
    result.highlighter =3D this;
    return result;
}

// gets a list of all matches for a given regular expression
dp.sh.Highlighter.prototype.GetMatches =3D function(regex, css)
{
    var index =3D 0;
    var match =3D null;

    while((match =3D regex.exec(this.code)) !=3D null)
        this.matches[this.matches.length] =3D new dp.sh.Match(match[0], =
match.index, css);
}

dp.sh.Highlighter.prototype.AddBit =3D function(str, css)
{
    if(str =3D=3D null || str.length =3D=3D 0)
        return;

    var span =3D this.CreateElement('SPAN');
=09
    //	str =3D str.replace(/&/g, '&amp;');
    str =3D str.replace(/ /g, '&nbsp;');
    str =3D str.replace(/</g, '&lt;');
    //	str =3D str.replace(/&lt;/g, '<');
    //	str =3D str.replace(/>/g, '&gt;');
    str =3D str.replace(/\n/gm, '&nbsp;<br>');

    // when adding a piece of code, check to see if it has line breaks =
in it
    // and if it does, wrap individual line breaks with span tags
    if(css !=3D null)
    {
        if((/br/gi).test(str))
        {
            var lines =3D str.split('&nbsp;<br>');
		=09
            for(var i =3D 0; i < lines.length; i++)
            {
                span =3D this.CreateElement('SPAN');
                span.className =3D css;
                span.innerHTML =3D lines[i];
			=09
                this.div.appendChild(span);
			=09
                // don't add a <BR> for the last line
                if(i + 1 < lines.length)
                    this.div.appendChild(this.CreateElement('BR'));
            }
        }
        else
        {
            span.className =3D css;
            span.innerHTML =3D str;
            this.div.appendChild(span);
        }
    }
    else
    {
        span.innerHTML =3D str;
        this.div.appendChild(span);
    }
}

// checks if one match is inside any other match
dp.sh.Highlighter.prototype.IsInside =3D function(match)
{
    if(match =3D=3D null || match.length =3D=3D 0)
        return false;
=09
    for(var i =3D 0; i < this.matches.length; i++)
    {
        var c =3D this.matches[i];
	=09
        if(c =3D=3D null)
            continue;

        if((match.index > c.index) && (match.index < c.index + =
c.length))
            return true;
    }
=09
    return false;
}

dp.sh.Highlighter.prototype.ProcessRegexList =3D function()
{
    for(var i =3D 0; i < this.regexList.length; i++)
        this.GetMatches(this.regexList[i].regex, this.regexList[i].css);
}

dp.sh.Highlighter.prototype.ProcessSmartTabs =3D function(code)
{
    var lines	=3D code.split('\n');
    var result	=3D '';
    var tabSize	=3D 4;
    var tab		=3D '\t';

    // This function inserts specified amount of spaces in the string
    // where a tab is while removing that given tab.
    function InsertSpaces(line, pos, count)
    {
        var left	=3D line.substr(0, pos);
        var right	=3D line.substr(pos + 1, line.length);	// pos + 1 will =
get rid of the tab
        var spaces	=3D '';
	=09
        for(var i =3D 0; i < count; i++)
            spaces +=3D ' ';
	=09
        return left + spaces + right;
    }

    // This function process one line for 'smart tabs'
    function ProcessLine(line, tabSize)
    {
        if(line.indexOf(tab) =3D=3D -1)
            return line;

        var pos =3D 0;

        while((pos =3D line.indexOf(tab)) !=3D -1)
        {
            // This is pretty much all there is to the 'smart tabs' =
logic.
            // Based on the position within the line and size of a tab,
            // calculate the amount of spaces we need to insert.
            var spaces =3D tabSize - pos % tabSize;
		=09
            line =3D InsertSpaces(line, pos, spaces);
        }
	=09
        return line;
    }

    // Go through all the lines and do the 'smart tabs' magic.
    for(var i =3D 0; i < lines.length; i++)
        result +=3D ProcessLine(lines[i], tabSize) + '\n';
=09
    return result;
}

dp.sh.Highlighter.prototype.SwitchToList =3D function()
{
    // thanks to Lachlan Donald from SitePoint.com for this <br/> tag =
fix.
    var html =3D this.div.innerHTML.replace(/<(br)\/?>/gi, '\n');
    var lines =3D html.split('\n');
=09
    if(this.addControls =3D=3D true)
        this.bar.appendChild(dp.sh.Toolbar.Create(this));

    // add columns ruler
    if(this.showColumns)
    {
        var div =3D this.CreateElement('div');
        var columns =3D this.CreateElement('div');
        var showEvery =3D 10;
        var i =3D 1;
	=09
        while(i <=3D 150)
        {
            if(i % showEvery =3D=3D 0)
            {
                div.innerHTML +=3D i;
                i +=3D (i + '').length;
            }
            else
            {
                div.innerHTML +=3D '&middot;';
                i++;
            }
        }
	=09
        columns.className =3D 'columns';
        columns.appendChild(div);
        this.bar.appendChild(columns);
    }

    for(var i =3D 0, lineIndex =3D this.firstLine; i < lines.length - 1; =
i++, lineIndex++)
    {
        var li =3D this.CreateElement('LI');
        var span =3D this.CreateElement('SPAN');
        span.innerHTML =3D lines[i] + '&nbsp;';
        li.appendChild(span);
        this.ol.appendChild(li);
    }
=09
    this.div.innerHTML	=3D '';
}

dp.sh.Highlighter.prototype.Highlight =3D function(code)
{
    function Trim(str)
    {
        return str.replace(/^\s*(.*?)[\s\n]*$/g, '$1');
    }
=09
    function Chop(str)
    {
        return str.replace(/\n*$/, '').replace(/^\n*/, '');
    }

    function Unindent(str)
    {
        var lines =3D str.split('\n');
        var indents =3D new Array();
        var regex =3D new RegExp('^\\s*', 'g');
        var min =3D 1000;

        // go through every line and check for common number of indents
        for(var i =3D 0; i < lines.length && min > 0; i++)
        {
            if(Trim(lines[i]).length =3D=3D 0)
                continue;
			=09
            var matches =3D regex.exec(lines[i]);

            if(matches !=3D null && matches.length > 0)
                min =3D Math.min(matches[0].length, min);
        }

        // trim minimum common number of white space from the begining =
of every line
        if(min > 0)
            for(var i =3D 0; i < lines.length; i++)
                lines[i] =3D lines[i].substr(min);

        return lines.join('\n');
    }
=09
    // This function returns a portions of the string from pos1 to pos2 =
inclusive
    function Copy(string, pos1, pos2)
    {
        return string.substr(pos1, pos2 - pos1);
    }

    var pos	=3D 0;
=09
    if(code =3D=3D null)
        code =3D '';
=09
    this.originalCode =3D code;
    this.code =3D Chop(Unindent(code));
    this.div =3D this.CreateElement('DIV');
    this.bar =3D this.CreateElement('DIV');
    this.ol =3D this.CreateElement('OL');
    this.matches =3D new Array();

    this.div.className =3D 'dp-highlighter';
    this.div.highlighter =3D this;
=09
    this.bar.className =3D 'bar';
=09
    // set the first line
    this.ol.start =3D this.firstLine;

    if(this.CssClass !=3D null)
        this.ol.className =3D this.CssClass;

    if(this.collapse)
        this.div.className +=3D ' collapsed';
=09
    if(this.noGutter)
        this.div.className +=3D ' nogutter';

    // replace tabs with spaces
    if(this.tabsToSpaces =3D=3D true)
        this.code =3D this.ProcessSmartTabs(this.code);

    this.ProcessRegexList();

    // if no matches found, add entire code as plain text
    if(this.matches.length =3D=3D 0)
    {
        this.AddBit(this.code, null);
        this.SwitchToList();
        this.div.appendChild(this.bar);
        this.div.appendChild(this.ol);
        return;
    }

    // sort the matches
    this.matches =3D this.matches.sort(dp.sh.Highlighter.SortCallback);

    // The following loop checks to see if any of the matches are inside
    // of other matches. This process would get rid of highligted =
strings
    // inside comments, keywords inside strings and so on.
    for(var i =3D 0; i < this.matches.length; i++)
        if(this.IsInside(this.matches[i]))
            this.matches[i] =3D null;

    // Finally, go through the final list of matches and pull the all
    // together adding everything in between that isn't a match.
    for(var i =3D 0; i < this.matches.length; i++)
    {
        var match =3D this.matches[i];

        if(match =3D=3D null || match.length =3D=3D 0)
            continue;

        this.AddBit(Copy(this.code, pos, match.index), null);
        this.AddBit(match.value, match.css);

        pos =3D match.index + match.length;
    }
=09
    this.AddBit(this.code.substr(pos), null);

    this.SwitchToList();
    this.div.appendChild(this.bar);
    this.div.appendChild(this.ol);
}

dp.sh.Highlighter.prototype.GetKeywords =3D function(str)=20
{
    return '\\b' + str.replace(/ /g, '\\b|\\b') + '\\b';
}

// highlightes all elements identified by name and gets source code from =
specified property
dp.sh.HighlightAll =3D function(name, showGutter /* optional */, =
showControls /* optional */, collapseAll /* optional */, firstLine /* =
optional */, showColumns /* optional */)
{
    function FindValue()
    {
        var a =3D arguments;
	=09
        for(var i =3D 0; i < a.length; i++)
        {
            if(a[i] =3D=3D null)
                continue;
			=09
            if(typeof(a[i]) =3D=3D 'string' && a[i] !=3D '')
                return a[i] + '';
	=09
            if(typeof(a[i]) =3D=3D 'object' && a[i].value !=3D '')
                return a[i].value + '';
        }
	=09
        return null;
    }
=09
    function IsOptionSet(value, list)
    {
        for(var i =3D 0; i < list.length; i++)
            if(list[i] =3D=3D value)
                return true;
	=09
        return false;
    }
=09
    function GetOptionValue(name, list, defaultValue)
    {
        var regex =3D new RegExp('^' + name + '\\[(\\w+)\\]$', 'gi');
        var matches =3D null;

        for(var i =3D 0; i < list.length; i++)
            if((matches =3D regex.exec(list[i])) !=3D null)
                return matches[1];
	=09
        return defaultValue;
    }
=09
    function FindTagsByName(list, name, tagName)
    {
        var tags =3D document.getElementsByTagName(tagName);

        for(var i =3D 0; i < tags.length; i++)
            if(tags[i].getAttribute('name') =3D=3D name)
                list.push(tags[i]);
    }

    var elements =3D [];
    var highlighter =3D null;
    var registered =3D {};
    var propertyName =3D 'innerHTML';

    // for some reason IE doesn't find <pre/> by name, however it does =
see them just fine by tag name...
    FindTagsByName(elements, name, 'pre');
    FindTagsByName(elements, name, 'textarea');

    if(elements.length =3D=3D 0)
        return;

    // register all brushes
    for(var brush in dp.sh.Brushes)
    {
        var aliases =3D dp.sh.Brushes[brush].Aliases;

        if(aliases =3D=3D null)
            continue;
	=09
        for(var i =3D 0; i < aliases.length; i++)
            registered[aliases[i]] =3D brush;
    }

    for(var i =3D 0; i < elements.length; i++)
    {
        var element =3D elements[i];
        var options =3D FindValue(
            element.attributes['class'], element.className,
            element.attributes['language'], element.language
            );
        var language =3D '';
	=09
        if(options =3D=3D null)
            continue;
	=09
        options =3D options.split(':');
	=09
        language =3D options[0].toLowerCase();

        if(registered[language] =3D=3D null)
            registered[language] =3D registered['default'];
	=09
        // instantiate a brush
        highlighter =3D new dp.sh.Brushes[registered[language]]();
        highlighter.language =3D language;
	=09
        // hide the original element
        element.style.display =3D 'none';

        highlighter.noGutter =3D (showGutter =3D=3D null) ? =
IsOptionSet('nogutter', options) : !showGutter;
        highlighter.addControls =3D (showControls =3D=3D null) ? =
!IsOptionSet('nocontrols', options) : showControls;
        highlighter.collapse =3D (collapseAll =3D=3D null) ? =
IsOptionSet('collapse', options) : collapseAll;
        highlighter.showColumns =3D (showColumns =3D=3D null) ? =
IsOptionSet('showcolumns', options) : showColumns;

        // write out custom brush style
        var headNode =3D document.getElementsByTagName('head')[0];
        if(highlighter.Style && headNode)
        {
            var styleNode =3D document.createElement('style');
            styleNode.setAttribute('type', 'text/css');

            if(styleNode.styleSheet) // for IE
            {
                styleNode.styleSheet.cssText =3D highlighter.Style;
            }
            else // for everyone else
            {
                var textNode =3D =
document.createTextNode(highlighter.Style);
                styleNode.appendChild(textNode);
            }

            headNode.appendChild(styleNode);
        }
	=09
        // first line idea comes from Andrew Collington, thanks!
        highlighter.firstLine =3D (firstLine =3D=3D null) ? =
parseInt(GetOptionValue('firstline', options, 1)) : firstLine;

        highlighter.Highlight(element[propertyName]);
	=09
        highlighter.source =3D element;

        element.parentNode.insertBefore(highlighter.div, element);
    }
}
dp.sh.Brushes.JScript =3D function()
{
	var keywords =3D	'abstract boolean break byte case catch char class =
const continue debugger ' +
					'default delete do double else enum export extends false final =
finally float ' +
					'for function goto if implements import in instanceof int interface =
long native ' +
					'new null package private protected public return short static =
super switch ' +
					'synchronized this throw throws transient true try typeof var void =
volatile while with';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keywords
		];

	this.CssClass =3D 'dp-c';
}

dp.sh.Brushes.JScript.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.JScript.Aliases	=3D ['js', 'jscript', 'javascript'];
dp.sh.Brushes.Java =3D function()
{
	var keywords =3D	'abstract assert boolean break byte case catch char =
class const ' +
			'continue default do double else enum extends ' +
			'false final finally float for goto if implements import ' +
			'instanceof int interface long native new null ' +
			'package private protected public return ' +
			'short static strictfp super switch synchronized this throw throws =
true ' +
			'transient try void volatile while';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,							css: 'comment' },		=
// one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,								css: 'comment' },		=
// multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		=
// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		=
// strings
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'number' },		// numbers
		{ regex: new RegExp('(?!\\@interface\\b)\\@[\\$\\w]+\\b', 'g'),			css: =
'annotation' },	// annotation @anno
		{ regex: new RegExp('\\@interface\\b', 'g'),							css: 'keyword' },		=
// @interface keyword
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),					css: =
'keyword' }		// java keyword
		];

	this.CssClass =3D 'dp-j';
	this.Style =3D	'.dp-j .annotation { color: #646464; }' +
					'.dp-j .number { color: #C00000; }';
}

dp.sh.Brushes.Java.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Java.Aliases	=3D ['java'];
/* Ruby 1.8.4 syntax contributed by Erik Peterson */
dp.sh.Brushes.Ruby =3D function()
{
  var keywords =3D	'alias and BEGIN begin break case class def =
define_method defined do each else elsif ' +
					'END end ensure false for if in module new next nil not or raise =
redo rescue retry return ' +
					'self super then throw true undef unless until when while yield';

  var builtins =3D	'Array Bignum Binding Class Continuation Dir =
Exception FalseClass File::Stat File Fixnum Fload ' +
					'Hash Integer IO MatchData Method Module NilClass Numeric Object =
Proc Range Regexp String Struct::TMS Symbol ' +
					'ThreadGroup Thread Time TrueClass'

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLinePerlComments,			css: 'comment' },	// =
one line comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,				css: 'string' },	// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,				css: 'string' },	// =
single quoted strings
		{ regex: new RegExp(':[a-z][A-Za-z0-9_]*', 'g'),		css: 'symbol' },	// =
symbols
		{ regex: new RegExp('(\\$|@@|@)\\w+', 'g'),				css: 'variable' },	// =
$global, @instance, and @@class variables
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),	css: 'keyword' =
},	// keywords
		{ regex: new RegExp(this.GetKeywords(builtins), 'gm'),	css: 'builtin' =
}	// builtins
		];

	this.CssClass =3D 'dp-rb';
	this.Style =3D	'.dp-rb .symbol { color: #a70; }' +
					'.dp-rb .variable { color: #a70; font-weight: bold; }';
}

dp.sh.Brushes.Ruby.prototype =3D new dp.sh.Highlighter();
dp.sh.Brushes.Ruby.Aliases =3D ['ruby', 'rails', 'ror'];
dp.sh.Brushes.Xml =3D function()
{
	this.CssClass =3D 'dp-xml';
	this.Style =3D	'.dp-xml .cdata { color: #ff1493; }' +
					'.dp-xml .tag, .dp-xml .tag-name { color: #069; font-weight: bold; =
}' +
					'.dp-xml .attribute { color: red; }' +
					'.dp-xml .attribute-value { color: blue; }';
}

dp.sh.Brushes.Xml.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Xml.Aliases	=3D ['xml', 'xhtml', 'xslt', 'html', 'xhtml'];

dp.sh.Brushes.Xml.prototype.ProcessRegexList =3D function()
{
	function push(array, value)
	{
		array[array.length] =3D value;
	}
=09
	/* If only there was a way to get index of a group within a match, the =
whole XML
	   could be matched with the expression looking something like that:
=09
	   (<!\[CDATA\[\s*.*\s*\]\]>)
	   | (<!--\s*.*\s*?-->)
	   | (<)*(\w+)*\s*(\w+)\s*=3D\s*(".*?"|'.*?'|\w+)(/*>)*
	   | (</?)(.*?)(/?>)
	*/
	var index	=3D 0;
	var match	=3D null;
	var regex	=3D null;

	// Match CDATA in the following format <![ ... [ ... ]]>
	// (\&lt;|<)\!\[[\w\s]*?\[(.|\s)*?\]\](\&gt;|>)
	this.GetMatches(new =
RegExp('(\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\&gt;|>)', 'gm'), =
'cdata');
=09
	// Match comments
	// (\&lt;|<)!--\s*.*?\s*--(\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)!--\\s*.*?\\s*--(\&gt;|>)', 'gm'), =
'comments');

	// Match attributes and their values
	// (:|\w+)\s*=3D\s*(".*?"|\'.*?\'|\w+)*
	regex =3D new =
RegExp('([:\\w-\.]+)\\s*=3D\\s*(".*?"|\'.*?\'|\\w+)*|(\\w+)', 'gm'); // =
Thanks to Tomi Blinnikka of Yahoo! for fixing namespaces in attributes
	while((match =3D regex.exec(this.code)) !=3D null)
	{
		if(match[1] =3D=3D null)
		{
			continue;
		}
		=09
		push(this.matches, new dp.sh.Match(match[1], match.index, =
'attribute'));
=09
		// if xml is invalid and attribute has no property value, ignore it=09
		if(match[2] !=3D undefined)
		{
			push(this.matches, new dp.sh.Match(match[2], match.index + =
match[0].indexOf(match[2]), 'attribute-value'));
		}
	}

	// Match opening and closing tag brackets
	// (\&lt;|<)/*\?*(?!\!)|/*\?*(\&gt;|>)
	this.GetMatches(new RegExp('(\&lt;|<)/*\\?*(?!\\!)|/*\\?*(\&gt;|>)', =
'gm'), 'tag');

	// Match tag names
	// (\&lt;|<)/*\?*\s*(\w+)
	regex =3D new RegExp('(?:\&lt;|<)/*\\?*\\s*([:\\w-\.]+)', 'gm');
	while((match =3D regex.exec(this.code)) !=3D null)
	{
		push(this.matches, new dp.sh.Match(match[1], match.index + =
match[0].indexOf(match[1]), 'tag-name'));
	}
}
dp.sh.Brushes.CSharp =3D function()
{
	var keywords =3D	'abstract as base bool break byte case catch char =
checked class const ' +
					'continue decimal default delegate do double else enum event =
explicit ' +
					'extern false finally fixed float for foreach get goto if implicit =
in int ' +
					'interface internal is lock long namespace new null object operator =
out ' +
					'override params private protected public readonly ref return sbyte =
sealed set ' +
					'short sizeof stackalloc static string struct switch this throw =
true try ' +
					'typeof uint ulong unchecked unsafe ushort using virtual void =
while';

	this.regexList =3D [
		// There's a slight problem with matching single line comments and =
figuring out
		// a difference between // and ///. Using lookahead and lookbehind =
solves the
		// problem, unfortunately JavaScript doesn't support lookbehind. So =
I'm at a=20
		// loss how to translate that regular expression to JavaScript =
compatible one.
//		{ regex: new =
RegExp('(?<!/)//(?!/).*$|(?<!/)////(?!/).*$|/\\*[^\\*]*(.)*?\\*/', =
'gm'),	css: 'comment' },			// one line comments starting with anything =
BUT '///' and multiline comments
//		{ regex: new RegExp('(?<!/)///(?!/).*$', 'gm'),											css: =
'comments' },		// XML comments starting with ///

		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
strings
		{ regex: new RegExp('^\\s*#.*', 'gm'),						css: 'preprocessor' },		// =
preprocessor tags like #region and #endregion
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// c# keyword
		];

	this.CssClass =3D 'dp-c';
	this.Style =3D '.dp-c .vars { color: #d00; }';
}

dp.sh.Brushes.CSharp.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.CSharp.Aliases	=3D ['c#', 'c-sharp', 'csharp'];
/**
 * Code Syntax Highlighter for C++(Windows Platform).
 * Version 0.0.2
 * Copyright (C) 2006 Shin, YoungJin.
 * http://www.jiniya.net/lecture/techbox/test.html
 *=20
 * This library is free software; you can redistribute it and/or modify =
it under the terms of the GNU Lesser General=20
 * Public License as published by the Free Software Foundation; either =
version 2.1 of the License, or (at your option)=20
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but =
WITHOUT ANY WARRANTY; without even the implied=20
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See =
the GNU Lesser General Public License for more=20
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public =
License along with this library; if not, write to=20
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330, =
Boston, MA 02111-1307 USA=20
 */

dp.sh.Brushes.Cpp =3D function()
{
	var datatypes =3D=20
	'ATOM BOOL BOOLEAN BYTE CHAR COLORREF DWORD DWORDLONG DWORD_PTR ' +
	'DWORD32 DWORD64 FLOAT HACCEL HALF_PTR HANDLE HBITMAP HBRUSH ' +=20
	'HCOLORSPACE HCONV HCONVLIST HCURSOR HDC HDDEDATA HDESK HDROP HDWP ' +
	'HENHMETAFILE HFILE HFONT HGDIOBJ HGLOBAL HHOOK HICON HINSTANCE HKEY ' =
+
	'HKL HLOCAL HMENU HMETAFILE HMODULE HMONITOR HPALETTE HPEN HRESULT ' +
	'HRGN HRSRC HSZ HWINSTA HWND INT INT_PTR INT32 INT64 LANGID LCID LCTYPE =
' +
	'LGRPID LONG LONGLONG LONG_PTR LONG32 LONG64 LPARAM LPBOOL LPBYTE =
LPCOLORREF ' +
	'LPCSTR LPCTSTR LPCVOID LPCWSTR LPDWORD LPHANDLE LPINT LPLONG LPSTR =
LPTSTR ' +
	'LPVOID LPWORD LPWSTR LRESULT PBOOL PBOOLEAN PBYTE PCHAR PCSTR PCTSTR =
PCWSTR ' +
	'PDWORDLONG PDWORD_PTR PDWORD32 PDWORD64 PFLOAT PHALF_PTR PHANDLE PHKEY =
PINT ' +
	'PINT_PTR PINT32 PINT64 PLCID PLONG PLONGLONG PLONG_PTR PLONG32 PLONG64 =
POINTER_32 ' +
	'POINTER_64 PSHORT PSIZE_T PSSIZE_T PSTR PTBYTE PTCHAR PTSTR PUCHAR =
PUHALF_PTR ' +
	'PUINT PUINT_PTR PUINT32 PUINT64 PULONG PULONGLONG PULONG_PTR PULONG32 =
PULONG64 ' +
	'PUSHORT PVOID PWCHAR PWORD PWSTR SC_HANDLE SC_LOCK =
SERVICE_STATUS_HANDLE SHORT ' +=20
	'SIZE_T SSIZE_T TBYTE TCHAR UCHAR UHALF_PTR UINT UINT_PTR UINT32 UINT64 =
ULONG ' +
	'ULONGLONG ULONG_PTR ULONG32 ULONG64 USHORT USN VOID WCHAR WORD WPARAM =
WPARAM WPARAM ' +
	'char bool short int __int32 __int64 __int8 __int16 long float double =
__wchar_t ' +
	'clock_t _complex _dev_t _diskfree_t div_t ldiv_t _exception =
_EXCEPTION_POINTERS ' +
	'FILE _finddata_t _finddatai64_t _wfinddata_t _wfinddatai64_t =
__finddata64_t ' +
	'__wfinddata64_t _FPIEEE_RECORD fpos_t _HEAPINFO _HFILE lconv intptr_t =
' +
	'jmp_buf mbstate_t _off_t _onexit_t _PNH ptrdiff_t _purecall_handler ' =
+
	'sig_atomic_t size_t _stat __stat64 _stati64 terminate_function ' +
	'time_t __time64_t _timeb __timeb64 tm uintptr_t _utimbuf ' +
	'va_list wchar_t wctrans_t wctype_t wint_t signed';

	var keywords =3D=20
	'break case catch class const __finally __exception __try ' +
	'const_cast continue private public protected __declspec ' +=20
	'default delete deprecated dllexport dllimport do dynamic_cast ' +=20
	'else enum explicit extern if for friend goto inline ' +=20
	'mutable naked namespace new noinline noreturn nothrow ' +=20
	'register reinterpret_cast return selectany ' +=20
	'sizeof static static_cast struct switch template this ' +=20
	'thread throw true false try typedef typeid typename union ' +=20
	'using uuid virtual void volatile whcar_t while';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
strings
		{ regex: new RegExp('^ *#.*', 'gm'),						css: 'preprocessor' },
		{ regex: new RegExp(this.GetKeywords(datatypes), 'gm'),		css: =
'datatypes' },
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}
		];

	this.CssClass =3D 'dp-cpp';
	this.Style =3D	'.dp-cpp .datatypes { color: #2E8B57; font-weight: bold; =
}';
}

dp.sh.Brushes.Cpp.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Cpp.Aliases	=3D ['cpp', 'c', 'c++'];
/* Python 2.3 syntax contributed by Gheorghe Milas */
dp.sh.Brushes.Python =3D function()
{
    var keywords =3D  'and assert break class continue def del elif else =
' +
                    'except exec finally for from global if import in is =
' +
                    'lambda not or pass print raise return try yield =
while';

    var special =3D  'None True False self cls class_'

    this.regexList =3D [
        { regex: dp.sh.RegexLib.SingleLinePerlComments, css: 'comment' =
},
        { regex: new RegExp("^\\s*@\\w+", 'gm'), css: 'decorator' },
        { regex: new RegExp("(['\"]{3})([^\\1])*?\\1", 'gm'), css: =
'comment' },
        { regex: new RegExp('"(?!")(?:\\.|\\\\\\"|[^\\""\\n\\r])*"', =
'gm'), css: 'string' },
        { regex: new RegExp("'(?!')*(?:\\.|(\\\\\\')|[^\\''\\n\\r])*'", =
'gm'), css: 'string' },
        { regex: new RegExp("\\b\\d+\\.?\\w*", 'g'), css: 'number' },
        { regex: new RegExp(this.GetKeywords(keywords), 'gm'), css: =
'keyword' },
        { regex: new RegExp(this.GetKeywords(special), 'gm'), css: =
'special' }
        ];

    this.CssClass =3D 'dp-py';
	this.Style =3D	'.dp-py .builtins { color: #ff1493; }' +
					'.dp-py .magicmethods { color: #808080; }' +
					'.dp-py .exceptions { color: brown; }' +
					'.dp-py .types { color: brown; font-style: italic; }' +
					'.dp-py .commonlibs { color: #8A2BE2; font-style: italic; }';
}

dp.sh.Brushes.Python.prototype  =3D new dp.sh.Highlighter();
dp.sh.Brushes.Python.Aliases    =3D ['py', 'python'];
dp.sh.Brushes.Sql =3D function()
{
	var funcs	=3D	'abs avg case cast coalesce convert count =
current_timestamp ' +
					'current_user day isnull left lower month nullif replace right ' +
					'session_user space substring sum system_user upper user year';

	var keywords =3D	'absolute action add after alter as asc at =
authorization begin bigint ' +
					'binary bit by cascade char character check checkpoint close =
collate ' +
					'column commit committed connect connection constraint contains =
continue ' +
					'create cube current current_date current_time cursor database date =
' +
					'deallocate dec decimal declare default delete desc distinct double =
drop ' +
					'dynamic else end end-exec escape except exec execute false fetch =
first ' +
					'float for force foreign forward free from full function global =
goto grant ' +
					'group grouping having hour ignore index inner insensitive insert =
instead ' +
					'int integer intersect into is isolation key last level load local =
max min ' +
					'minute modify move name national nchar next no numeric of off on =
only ' +
					'open option order out output partial password precision prepare =
primary ' +
					'prior privileges procedure public read real references relative =
repeatable ' +
					'restrict return returns revoke rollback rollup rows rule schema =
scroll ' +
					'second section select sequence serializable set size smallint =
static ' +
					'statistics table temp temporary then time timestamp to top =
transaction ' +
					'translation trigger true truncate uncommitted union unique update =
values ' +
					'varchar varying view when where with work';

	var operators =3D	'all and any between cross in join like not null or =
outer some';

	this.regexList =3D [
		{ regex: new RegExp('--(.*)$', 'gm'),						css: 'comment' },			// one =
line and multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings
		{ regex: new RegExp(this.GetKeywords(funcs), 'gmi'),		css: 'func' },			=
	// functions
		{ regex: new RegExp(this.GetKeywords(operators), 'gmi'),	css: 'op' },		=
		// operators and such
		{ regex: new RegExp(this.GetKeywords(keywords), 'gmi'),		css: =
'keyword' }			// keyword
		];

	this.CssClass =3D 'dp-sql';
	this.Style =3D	'.dp-sql .func { color: #ff1493; }' +
					'.dp-sql .op { color: #808080; }';
}

dp.sh.Brushes.Sql.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Sql.Aliases	=3D ['sql'];
dp.sh.Brushes.Php =3D function()
{
	var funcs	=3D	'abs acos acosh addcslashes addslashes ' +
					'array_change_key_case array_chunk array_combine array_count_values =
array_diff '+
					'array_diff_assoc array_diff_key array_diff_uassoc array_diff_ukey =
array_fill '+
					'array_filter array_flip array_intersect array_intersect_assoc =
array_intersect_key '+
					'array_intersect_uassoc array_intersect_ukey array_key_exists =
array_keys array_map '+
					'array_merge array_merge_recursive array_multisort array_pad =
array_pop array_product '+
					'array_push array_rand array_reduce array_reverse array_search =
array_shift '+
					'array_slice array_splice array_sum array_udiff array_udiff_assoc =
'+
					'array_udiff_uassoc array_uintersect array_uintersect_assoc '+
					'array_uintersect_uassoc array_unique array_unshift array_values =
array_walk '+
					'array_walk_recursive atan atan2 atanh base64_decode base64_encode =
base_convert '+
					'basename bcadd bccomp bcdiv bcmod bcmul bindec bindtextdomain =
bzclose bzcompress '+
					'bzdecompress bzerrno bzerror bzerrstr bzflush bzopen bzread =
bzwrite ceil chdir '+
					'checkdate checkdnsrr chgrp chmod chop chown chr chroot chunk_split =
class_exists '+
					'closedir closelog copy cos cosh count count_chars date decbin =
dechex decoct '+
					'deg2rad delete ebcdic2ascii echo empty end ereg ereg_replace eregi =
eregi_replace error_log '+
					'error_reporting escapeshellarg escapeshellcmd eval exec exit exp =
explode extension_loaded '+
					'feof fflush fgetc fgetcsv fgets fgetss file_exists =
file_get_contents file_put_contents '+
					'fileatime filectime filegroup fileinode filemtime fileowner =
fileperms filesize filetype '+
					'floatval flock floor flush fmod fnmatch fopen fpassthru fprintf =
fputcsv fputs fread fscanf '+
					'fseek fsockopen fstat ftell ftok getallheaders getcwd getdate =
getenv gethostbyaddr gethostbyname '+
					'gethostbynamel getimagesize getlastmod getmxrr getmygid getmyinode =
getmypid getmyuid getopt '+
					'getprotobyname getprotobynumber getrandmax getrusage getservbyname =
getservbyport gettext '+
					'gettimeofday gettype glob gmdate gmmktime ini_alter ini_get =
ini_get_all ini_restore ini_set '+
					'interface_exists intval ip2long is_a is_array is_bool is_callable =
is_dir is_double '+
					'is_executable is_file is_finite is_float is_infinite is_int =
is_integer is_link is_long '+
					'is_nan is_null is_numeric is_object is_readable is_real =
is_resource is_scalar is_soap_fault '+
					'is_string is_subclass_of is_uploaded_file is_writable is_writeable =
mkdir mktime nl2br '+
					'parse_ini_file parse_str parse_url passthru pathinfo readlink =
realpath rewind rewinddir rmdir '+
					'round str_ireplace str_pad str_repeat str_replace str_rot13 =
str_shuffle str_split '+
					'str_word_count strcasecmp strchr strcmp strcoll strcspn strftime =
strip_tags stripcslashes '+
					'stripos stripslashes stristr strlen strnatcasecmp strnatcmp =
strncasecmp strncmp strpbrk '+
					'strpos strptime strrchr strrev strripos strrpos strspn strstr =
strtok strtolower strtotime '+
					'strtoupper strtr strval substr substr_compare';

	var keywords =3D	'and or xor __FILE__ __LINE__ array as break case ' +
					'cfunction class const continue declare default die do else ' +
					'elseif empty enddeclare endfor endforeach endif endswitch endwhile =
' +
					'extends for foreach function include include_once global if ' +
					'new old_function return static switch use require require_once ' +
					'var while __FUNCTION__ __CLASS__ ' +
					'__METHOD__ abstract interface public implements extends private =
protected throw';

	this.regexList =3D [
		{ regex: dp.sh.RegexLib.SingleLineCComments,				css: 'comment' },			// =
one line comments
		{ regex: dp.sh.RegexLib.MultiLineCComments,					css: 'comment' },			// =
multiline comments
		{ regex: dp.sh.RegexLib.DoubleQuotedString,					css: 'string' },			// =
double quoted strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,					css: 'string' },			// =
single quoted strings
		{ regex: new RegExp('\\$\\w+', 'g'),						css: 'vars' },				// =
variables
		{ regex: new RegExp(this.GetKeywords(funcs), 'gmi'),		css: 'func' },			=
	// functions
		{ regex: new RegExp(this.GetKeywords(keywords), 'gm'),		css: 'keyword' =
}			// keyword
		];

	this.CssClass =3D 'dp-c';
}

dp.sh.Brushes.Php.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Php.Aliases	=3D ['php'];
dp.sh.Brushes.Default =3D function()
{
	this.regexList =3D [
		{ regex: dp.sh.RegexLib.DoubleQuotedString,								css: 'string' },		=
// strings
		{ regex: dp.sh.RegexLib.SingleQuotedString,								css: 'string' },		=
// strings
		{ regex: new RegExp('\\b([\\d]+(\\.[\\d]+)?|0x[a-f0-9]+)\\b', 'gi'),	=
css: 'number' }
		];

	this.CssClass =3D 'dp-default';
	this.Style =3D '.dp-default .number { color: #C00000; }';
}

dp.sh.Brushes.Default.prototype	=3D new dp.sh.Highlighter();
dp.sh.Brushes.Default.Aliases	=3D ['default'];

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/hotkey.js?1324994303

Object.Event=3D{=0A=
extend:function(object){=0A=
object._objectEventSetup=3Dfunction(event_name){=0A=
this._observers=3Dthis._observers||{};=0A=
this._observers[event_name]=3Dthis._observers[event_name]||[];=0A=
};=0A=
object.observe=3Dfunction(event_name,observer){=0A=
if(typeof(event_name)=3D=3D'string'&&typeof(observer)!=3D'undefined'){=0A=
this._objectEventSetup(event_name);=0A=
if(!this._observers[event_name].include(observer))=0A=
this._observers[event_name].push(observer);=0A=
}else=0A=
for(var e in event_name)=0A=
this.observe(e,event_name[e]);=0A=
};=0A=
object.stopObserving=3Dfunction(event_name,observer){=0A=
this._objectEventSetup(event_name);=0A=
if(event_name&&observer)=0A=
this._observers[event_name]=3Dthis._observers[event_name].without(observe=
r);=0A=
else if(event_name)=0A=
this._observers[event_name]=3D[];=0A=
else=0A=
this._observers=3D{};=0A=
};=0A=
object.observeOnce=3Dfunction(event_name,outer_observer){=0A=
var inner_observer=3Dfunction(){=0A=
outer_observer.apply(this,arguments);=0A=
this.stopObserving(event_name,inner_observer);=0A=
}.bind(this);=0A=
this._objectEventSetup(event_name);=0A=
this._observers[event_name].push(inner_observer);=0A=
};=0A=
object.notify=3Dfunction(event_name){=0A=
this._objectEventSetup(event_name);=0A=
var collected_return_values=3D[];=0A=
var args=3D$A(arguments).slice(1);=0A=
try{=0A=
for(var i=3D0;i<this._observers[event_name].length;++i)=0A=
collected_return_values.push(this._observers[event_name][i].apply(this._o=
bservers[event_name][i],args)||null);=0A=
}catch(e){=0A=
if(e=3D=3D$break)=0A=
return false;=0A=
else=0A=
throw e;=0A=
}=0A=
return collected_return_values;=0A=
};=0A=
if(object.prototype){=0A=
object.prototype._objectEventSetup=3Dobject._objectEventSetup;=0A=
object.prototype.observe=3Dobject.observe;=0A=
object.prototype.stopObserving=3Dobject.stopObserving;=0A=
object.prototype.observeOnce=3Dobject.observeOnce;=0A=
object.prototype.notify=3Dfunction(event_name){=0A=
if(object.notify){=0A=
var args=3D$A(arguments).slice(1);=0A=
args.unshift(this);=0A=
args.unshift(event_name);=0A=
object.notify.apply(object,args);=0A=
}=0A=
this._objectEventSetup(event_name);=0A=
var args=3D$A(arguments).slice(1);=0A=
var collected_return_values=3D[];=0A=
try{=0A=
if(this.options&&this.options[event_name]&&typeof(this.options[event_name=
])=3D=3D'function')=0A=
collected_return_values.push(this.options[event_name].apply(this,args)||n=
ull);=0A=
for(var i=3D0;i<this._observers[event_name].length;++i)=0A=
collected_return_values.push(this._observers[event_name][i].apply(this._o=
bservers[event_name][i],args)||null);=0A=
}catch(e){=0A=
if(e=3D=3D$break)=0A=
return false;=0A=
else=0A=
throw e;=0A=
}=0A=
return collected_return_values;=0A=
};=0A=
}=0A=
}=0A=
};=0A=
var HotKey=3DClass.create({=0A=
initialize:function(letter,callback,options){=0A=
if(!(letter instanceof =
Number))letter=3Dletter.toUpperCase().charCodeAt(0);=0A=
HotKey.hotkeys.push(this);=0A=
this.options=3DObject.extend({=0A=
element:false,=0A=
shiftKey:false,=0A=
altKey:false,=0A=
ctrlKey:true=0A=
},options||{});=0A=
this.letter=3Dletter;=0A=
this.callback=3Dcallback;=0A=
this.element=3D$(this.options.element||document);=0A=
this.handler=3Dfunction(event){=0A=
if(!event||(this.letter=3D=3Devent.keyCode&&((!this.options.shiftKey||(th=
is.options.shiftKey&&event.shiftKey))&&(!this.options.altKey||(this.optio=
ns.altKey&&event.altKey))&&(!this.options.ctrlKey||(this.options.ctrlKey&=
&event.ctrlKey))))){=0A=
this.callback(event);=0A=
event.cancelBubble=3Dtrue;=0A=
event.returnValue=3Dfalse;=0A=
if(event.stopPropagation){=0A=
event.stopPropagation();=0A=
event.preventDefault();=0A=
}=0A=
return false;=0A=
}=0A=
}.bind(this);=0A=
this.enable();=0A=
},=0A=
trigger:function(){=0A=
this.handler();=0A=
},=0A=
enable:function(){=0A=
this.element.observe('keydown',this.handler);=0A=
},=0A=
disable:function(){=0A=
this.element.stopObserving('keydown',this.handler);=0A=
},=0A=
destroy:function(){=0A=
this.disable();=0A=
HotKey.hotkeys=3DControl.HotKey.hotkeys.without(this);=0A=
}=0A=
});=0A=
Object.extend(HotKey,{=0A=
hotkeys:[]=0A=
});=0A=
Object.Event.extend(HotKey);
------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/code_favorites.js?1358214518

=0A=
=0A=
function code_favorites_init(css_rules){=0A=
    css_rules =3D css_rules || "pre[name=3Dcode]";=0A=
=0A=
    $$(css_rules).each(function(pre){=0A=
        var sh_bar_tools =3D pre.previous().down(".tools");=0A=
        var favorite_link =3D '&nbsp;<a href=3D"javascript:void()" =
title=3D"=E6=94=B6=E8=97=8F=E8=BF=99=E6=AE=B5=E4=BB=A3=E7=A0=81" =
onclick=3D"code_favorites_do_favorite(this);return false;">'=0A=
        favorite_link +=3D '<img class=3D"star" =
src=3D"/images/icon_star.png" =
alt=3D"=E6=94=B6=E8=97=8F=E4=BB=A3=E7=A0=81" />';=0A=
        favorite_link +=3D '<img class=3D"spinner" =
src=3D"/images/spinner.gif" style=3D"display:none" />';=0A=
        favorite_link +=3D '</a>';=0A=
        sh_bar_tools.innerHTML +=3D favorite_link;=0A=
    });=0A=
}=0A=
=0A=
function code_favorites_do_favorite(link_element){=0A=
    $(link_element);// for ie6=0A=
    var pre_element =3D link_element.up(".dp-highlighter").next();=0A=
    var parameters =3D undefined;=0A=
    if(pre_element.hasAttribute("code_favorite_id")){=0A=
      parameters =3D {=0A=
        "code_favorite[id]": =
pre_element.readAttribute("code_favorite_id")=0A=
      }=0A=
    }else{=0A=
      var language =3D pre_element.readAttribute("class");=0A=
      language =3D (!language || language =3D=3D =
"data_info")?pre_element.readAttribute("language"):language;=0A=
      var pre_index =3D  pre_element.readAttribute("pre_index") || =
link_element.up(".dp-highlighter").readAttribute("pre_index");=0A=
      parameters =3D {=0A=
        'code_favorite[source_url]': =
pre_element.readAttribute("source_url"),=0A=
        'code_favorite[page_title]': pre_element.readAttribute("title"),=0A=
        'code_favorite[language]': language,=0A=
        'code_favorite[codeable_id]': =
pre_element.readAttribute("codeable_id"),=0A=
        'code_favorite[codeable_type]': =
pre_element.readAttribute("codeable_type"),=0A=
        'code_favorite[code_index]': pre_index=0A=
      };=0A=
    }=0A=
=0A=
    link_element.down('.star').hide();=0A=
    link_element.down('.spinner').show();=0A=
    new Ajax.Request('/admin/code/new_xhr', {=0A=
        method: 'post',=0A=
        parameters: parameters,=0A=
        onSuccess: function(response){=0A=
            $(document.getElementsByTagName('body')[0]).insert({=0A=
                bottom:response.responseText=0A=
            });=0A=
            link_element.down('.spinner').hide();=0A=
            link_element.down('.star').show();=0A=
        }=0A=
    });=0A=
}=0A=
=0A=

------=_NextPart_000_0026_01CE9C28.4B8A68F0
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.iteye.com/javascripts/weiboshare.js?1324994303

function open_window(url) {=0A=
  function o(){=0A=
    =
if(!window.open(url,'iteye',['toolbar=3D0,status=3D0,resizable=3D1,width=3D=
440,height=3D430,left=3D',(screen.width-440)/2,',top=3D',(screen.height-4=
30)/2].join('')))=0A=
      window.location.href =3D url;=0A=
  }=0A=
=0A=
  if(/Firefox/.test(navigator.userAgent)) {=0A=
    setTimeout(o,0);=0A=
  } else {=0A=
    o();=0A=
  }=0A=
}=0A=
=0A=
var WeiboShare =3D Class.create({=0A=
  initialize: function(opts) {=0A=
    var imgs =3D =
opts['img_scope'].select('img:not(.star):not(.spinner)');=0A=
    var img_url =3D '';=0A=
    if(imgs.size() > 0) img_url =3D imgs[0]['src'];=0A=
=0A=
    this.params =3D {=0A=
      title: opts['title'] || document.title,=0A=
      url: encodeURIComponent(opts['url'] || document.location.href),=0A=
      pic: encodeURIComponent(img_url)=0A=
    }=0A=
    this.share_buttons =3D opts['share_buttons'];=0A=
=0A=
    this.share_buttons.select('a').each(function(link){=0A=
      link.observe('click', (function(event){=0A=
        var url =3D =
WeiboShare.make_share_url(link.readAttribute('data-type'), this.params);=0A=
        open_window(url);=0A=
        event.stop();=0A=
      }).bindAsEventListener(this));=0A=
    }, this);=0A=
  }=0A=
});=0A=
=0A=
WeiboShare.register =3D function(sites) {=0A=
  this.sites =3D (this.sites || new Hash()).merge(sites);=0A=
};=0A=
=0A=
WeiboShare.make_share_url =3D function(key, params) {=0A=
  var site_info =3D this.sites.get(key);=0A=
  params['appkey'] =3D site_info['appkey'];=0A=
=0A=
  var param_array =3D [];=0A=
  for(var p in params) {=0A=
    param_array.push(p + '=3D' + params[p]);=0A=
  }=0A=
=0A=
  return (site_info['url'] + '?' + param_array.join('&'));=0A=
}=0A=
=0A=
WeiboShare.register({=0A=
  sina: {=0A=
    url: 'http://service.weibo.com/share/share.php',=0A=
    appkey: '3842512498'=0A=
  },=0A=
  qq: {=0A=
    url: 'http://v.t.qq.com/share/share.php',=0A=
    appkey: '050a47d9d5d848029e1de3198d2abcda'=0A=
  }=0A=
});=0A=

------=_NextPart_000_0026_01CE9C28.4B8A68F0--
