Profile的设置有主要有两个地方,项目的pom.xml文件和maven目录下的settings.xml,项目的pom.xml文件里面 的定义也可以被子模块使用,在子模块里面不需要重复定义.
可以同时定义使用多个Profile,对于同一个变量,在多个Profile都有定义的时候,最终的替换值的优先顺序是:
* settings.xml里的在activeProfiles指定的profile,如果指定的两个profile都有同一个值,又以这个profile段落在settings.xml里后出现的优先,与在activeProfiles里谁先定义无关.
  settings.xml的文件如下:
  <settings>
	<profiles>
		<profile>
			<id>testProfile1</id>
			<properties>
				<test>1</test>
			</properties>
		</profile>
		<profile>
			<id>testProfile2</id>
			<properties>
				<test>2</test>
			</properties>
		</profile>
		<profile>
			<id>testProfile3</id>
			<properties>
				<test>3</test>
			</properties>
		</profile>
	</profiles>
	<activeProfiles>
		<activeProfile>testProfile1</activeProfile>
		<activeProfile>testProfile3</activeProfile>
		<activeProfile>testProfile2</activeProfile>
	</activeProfiles>
  </settings>
  最终得到的替换值是3,因为id为testProfile3的最后出现,而不是activeProfiles里面的顺序.
* pom.xml里的设置为activeByDefault等于true的profile,如果指定的两个profile都有同一个值,又以这个profile段落在pom.xml里后出现的优先.
  pom.xml的文件如下:
  <project xmlns="http://maven.apache.org/POM/4.0.0"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.xunjie</groupId>
	<artifactId>test</artifactId>
	<version>1.0-SNAPSHOT</version>
	<profiles>
		<profile>
			<id>testProfile4</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<test>4</test>
			</properties>
		</profile>
		<profile>
			<id>testProfile5</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<test>5</test>
			</properties>
		</profile>
		<profile>
			<id>testProfile6</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<test>6</test>
			</properties>
		</profile>
	</profiles>
  </project>
  testProfile5的activeByDefault为false,缺省运行时候不执行,testProfile6比testProfile4后出现,最终得到的值是6.
* 对于同时设置settings.xml跟pom.xml的情况,settings.xml的值优先,在上面的例子中,最终得到的值是3.
